#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SOQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 283)

def self.parse(soql)
  new.scan_str(soql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,   110,    73,    73,   174,   106,    11,    36,    56,    56,
   182,    57,    58,     3,   183,     4,    35,   117,   207,   207,
    39,    40,   114,   -98,     6,   147,    47,     3,    21,   -47,
    49,    39,    40,    11,    36,    27,    28,    29,    30,    31,
    53,  -123,  -122,    35,    59,    60,    54,    42,    43,    44,
    45,    46,    77,    76,     3,    21,    82,    56,    39,    40,
    11,    36,    27,    28,    29,    30,    31,   163,    56,    56,
    35,   176,   177,    66,    42,    43,    44,    45,    46,   213,
   214,    67,    21,   219,   220,    39,    40,    11,    36,    27,
    28,    29,    30,    31,    68,    69,    70,    35,    71,    72,
    74,    42,    43,    44,    45,    46,    75,    79,    80,    21,
    81,    84,    39,    40,    11,    36,    27,    28,    29,    30,
    31,    90,    91,    56,    63,   103,   107,   109,    42,    43,
    44,    45,    46,   129,    53,    56,    21,   132,   133,    39,
    40,    11,    36,    27,    28,    29,    30,    31,   134,   135,
   136,    35,   137,   138,   139,    42,    43,    44,    45,    46,
   141,   142,   147,    21,   158,   161,    39,    40,    11,    36,
    27,    28,    29,    30,    31,   167,   172,   173,    35,    91,
   178,    46,    42,    43,    44,    45,    46,     3,    56,   194,
    21,   195,   147,    39,    40,    11,    36,    27,    28,    29,
    30,    31,   196,   -47,   161,    35,   178,    46,   201,    42,
    43,    44,    45,    46,   202,   172,   209,    21,   210,   211,
    39,    40,    11,    36,    27,    28,    29,    30,    31,   218,
   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,
    46,   nil,   nil,   nil,    21,   nil,   nil,    39,    40,    11,
    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,
   nil,   nil,   nil,    42,    43,    44,    45,    46,   nil,   nil,
   nil,    21,   nil,   nil,    39,    40,    11,    36,    27,    28,
    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,
    42,    43,    44,    45,    46,   nil,   nil,   nil,    21,    94,
   nil,    39,    40,    11,    36,    27,    28,    29,    30,    31,
   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,
    45,    46,   nil,   nil,   nil,    21,   nil,   nil,    39,    40,
    11,    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,
    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,   nil,
   nil,   nil,    21,   nil,   nil,    39,    40,    11,    36,    27,
    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,
   nil,    42,    43,    44,    45,    46,   nil,   nil,   nil,    21,
   nil,   nil,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,
    44,    45,    46,   nil,   nil,   nil,    21,   nil,   nil,    39,
    40,    11,    36,    27,    28,    29,    30,    31,   nil,   nil,
   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,
   nil,   nil,   nil,    21,   nil,   nil,    39,    40,    11,    36,
    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,
   nil,   nil,    42,    43,    44,    45,    46,   -87,   -87,   -87,
   -87,   nil,   nil,    39,    40,   nil,   nil,    27,    28,    29,
    30,    31,   100,   nil,   nil,   nil,   nil,   nil,   nil,    42,
    43,    44,    45,    46,   110,   148,   149,   150,   151,    11,
    36,   nil,   nil,   152,   153,   154,   155,   156,   157,    35,
   117,   nil,   nil,   nil,   nil,   114,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    39,    40,   nil,   nil,    27,    28,
    29,    30,    31,   110,   nil,   nil,   nil,   nil,    11,    36,
    42,    43,    44,    45,    46,   nil,   nil,   nil,    35,   nil,
   nil,   nil,   nil,   nil,   114,   nil,   nil,   nil,   nil,   nil,
    21,   nil,   nil,    39,    40,    11,    36,    27,    28,    29,
    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,
    43,    44,    45,    46,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    40,   nil,   nil,    27,    28,    29,    30,    31,   110,
   nil,   nil,   nil,   nil,    11,    36,    42,    43,    44,    45,
    46,   nil,   nil,   nil,    35,   117,   nil,   nil,   nil,   nil,
   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,
    40,   nil,   nil,    27,    28,    29,    30,    31,   110,   nil,
   nil,   nil,   nil,    11,    36,    42,    43,    44,    45,    46,
   nil,   nil,   nil,    35,   117,   nil,   nil,   nil,   nil,   114,
   nil,   nil,   nil,   nil,   nil,   184,   nil,   nil,    39,    40,
    11,    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,
    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,   nil,
   nil,   nil,   184,   nil,   nil,    39,    40,    11,    36,    27,
    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,
   nil,    42,    43,    44,    45,    46,   nil,   nil,   nil,   184,
   nil,   nil,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,
    44,    45,    46,   nil,   nil,   nil,   184,   nil,   nil,    39,
    40,    11,    36,    27,    28,    29,    30,    31,   nil,   nil,
   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,
   nil,   nil,   nil,   184,   nil,   nil,    39,    40,    11,    36,
    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,
   nil,   nil,    42,    43,    44,    45,    46,   nil,   nil,   nil,
   184,   nil,   nil,    39,    40,    11,    36,    27,    28,    29,
    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,
    43,    44,    45,    46,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    40,   nil,   nil,    27,    28,    29,    30,    31,   110,
   nil,   nil,   nil,   nil,    11,    36,    42,    43,    44,    45,
    46,   nil,   nil,   nil,    35,   117,   nil,   nil,   nil,   nil,
   114,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,    39,
    40,    11,    36,    27,    28,    29,    30,    31,   nil,   nil,
   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,
   nil,   nil,   nil,   nil,   nil,   nil,    39,    40,   nil,   nil,
    27,    28,    29,    30,    31,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    42,    43,    44,    45,    46 ]

racc_action_check = [
   110,   110,    35,    63,   145,    75,   110,   110,   195,   211,
   151,    14,    14,     0,   151,     1,   110,   110,   195,   211,
    75,    75,   110,    11,     2,   145,     4,   178,   178,    11,
     5,   110,   110,   178,   178,   110,   110,   110,   110,   110,
     6,    35,    63,   178,    15,    15,     9,   110,   110,   110,
   110,   110,    46,    46,   184,   184,    52,    52,   178,   178,
   184,   184,   178,   178,   178,   178,   178,   132,   132,    10,
   184,   148,   148,    24,   178,   178,   178,   178,   178,   205,
   205,    27,     3,   218,   218,   184,   184,     3,     3,   184,
   184,   184,   184,   184,    28,    29,    30,     3,    31,    32,
    36,   184,   184,   184,   184,   184,    37,    48,    49,    16,
    50,    53,     3,     3,    16,    16,     3,     3,     3,     3,
     3,    64,    65,    66,    16,    73,    76,    78,     3,     3,
     3,     3,     3,    80,    81,    82,    21,    84,    93,    16,
    16,    21,    21,    16,    16,    16,    16,    16,    95,    96,
    97,    21,    98,    99,   100,    16,    16,    16,    16,    16,
   108,   109,   111,    54,   114,   115,    21,    21,    54,    54,
    21,    21,    21,    21,    21,   140,   142,   143,    54,   146,
   149,   150,    21,    21,    21,    21,    21,   158,   163,   166,
    57,   167,   168,    54,    54,    57,    57,    54,    54,    54,
    54,    54,   169,   172,   175,    57,   176,   177,   182,    54,
    54,    54,    54,    54,   194,   196,   199,    58,   200,   203,
    57,    57,    58,    58,    57,    57,    57,    57,    57,   212,
   nil,   nil,    58,   nil,   nil,   nil,    57,    57,    57,    57,
    57,   nil,   nil,   nil,    59,   nil,   nil,    58,    58,    59,
    59,    58,    58,    58,    58,    58,   nil,   nil,   nil,    59,
   nil,   nil,   nil,    58,    58,    58,    58,    58,   nil,   nil,
   nil,    60,   nil,   nil,    59,    59,    60,    60,    59,    59,
    59,    59,    59,   nil,   nil,   nil,    60,   nil,   nil,   nil,
    59,    59,    59,    59,    59,   nil,   nil,   nil,    67,    67,
   nil,    60,    60,    67,    67,    60,    60,    60,    60,    60,
   nil,   nil,   nil,    67,   nil,   nil,   nil,    60,    60,    60,
    60,    60,   nil,   nil,   nil,    68,   nil,   nil,    67,    67,
    68,    68,    67,    67,    67,    67,    67,   nil,   nil,   nil,
    68,   nil,   nil,   nil,    67,    67,    67,    67,    67,   nil,
   nil,   nil,    69,   nil,   nil,    68,    68,    69,    69,    68,
    68,    68,    68,    68,   nil,   nil,   nil,    69,   nil,   nil,
   nil,    68,    68,    68,    68,    68,   nil,   nil,   nil,    70,
   nil,   nil,    69,    69,    70,    70,    69,    69,    69,    69,
    69,   nil,   nil,   nil,    70,   nil,   nil,   nil,    69,    69,
    69,    69,    69,   nil,   nil,   nil,    71,   nil,   nil,    70,
    70,    71,    71,    70,    70,    70,    70,    70,   nil,   nil,
   nil,    71,   nil,   nil,   nil,    70,    70,    70,    70,    70,
   nil,   nil,   nil,    72,   nil,   nil,    71,    71,    72,    72,
    71,    71,    71,    71,    71,   nil,   nil,   nil,    72,   nil,
   nil,   nil,    71,    71,    71,    71,    71,    13,    13,    13,
    13,   nil,   nil,    72,    72,   nil,   nil,    72,    72,    72,
    72,    72,    72,   nil,   nil,   nil,   nil,   nil,   nil,    72,
    72,    72,    72,    72,    79,   113,   113,   113,   113,    79,
    79,   nil,   nil,   113,   113,   113,   113,   113,   113,    79,
    79,   nil,   nil,   nil,   nil,    79,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    79,    79,   nil,   nil,    79,    79,
    79,    79,    79,   117,   nil,   nil,   nil,   nil,   117,   117,
    79,    79,    79,    79,    79,   nil,   nil,   nil,   117,   nil,
   nil,   nil,   nil,   nil,   117,   nil,   nil,   nil,   nil,   nil,
   139,   nil,   nil,   117,   117,   139,   139,   117,   117,   117,
   117,   117,   nil,   nil,   nil,   139,   nil,   nil,   nil,   117,
   117,   117,   117,   117,   nil,   nil,   nil,   nil,   nil,   nil,
   139,   139,   nil,   nil,   139,   139,   139,   139,   139,   141,
   nil,   nil,   nil,   nil,   141,   141,   139,   139,   139,   139,
   139,   nil,   nil,   nil,   141,   141,   nil,   nil,   nil,   nil,
   141,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   141,
   141,   nil,   nil,   141,   141,   141,   141,   141,   147,   nil,
   nil,   nil,   nil,   147,   147,   141,   141,   141,   141,   141,
   nil,   nil,   nil,   147,   147,   nil,   nil,   nil,   nil,   147,
   nil,   nil,   nil,   nil,   nil,   152,   nil,   nil,   147,   147,
   152,   152,   147,   147,   147,   147,   147,   nil,   nil,   nil,
   152,   nil,   nil,   nil,   147,   147,   147,   147,   147,   nil,
   nil,   nil,   153,   nil,   nil,   152,   152,   153,   153,   152,
   152,   152,   152,   152,   nil,   nil,   nil,   153,   nil,   nil,
   nil,   152,   152,   152,   152,   152,   nil,   nil,   nil,   154,
   nil,   nil,   153,   153,   154,   154,   153,   153,   153,   153,
   153,   nil,   nil,   nil,   154,   nil,   nil,   nil,   153,   153,
   153,   153,   153,   nil,   nil,   nil,   155,   nil,   nil,   154,
   154,   155,   155,   154,   154,   154,   154,   154,   nil,   nil,
   nil,   155,   nil,   nil,   nil,   154,   154,   154,   154,   154,
   nil,   nil,   nil,   156,   nil,   nil,   155,   155,   156,   156,
   155,   155,   155,   155,   155,   nil,   nil,   nil,   156,   nil,
   nil,   nil,   155,   155,   155,   155,   155,   nil,   nil,   nil,
   157,   nil,   nil,   156,   156,   157,   157,   156,   156,   156,
   156,   156,   nil,   nil,   nil,   157,   nil,   nil,   nil,   156,
   156,   156,   156,   156,   nil,   nil,   nil,   nil,   nil,   nil,
   157,   157,   nil,   nil,   157,   157,   157,   157,   157,   161,
   nil,   nil,   nil,   nil,   161,   161,   157,   157,   157,   157,
   157,   nil,   nil,   nil,   161,   161,   nil,   nil,   nil,   nil,
   161,   nil,   nil,   nil,   nil,   nil,   210,   nil,   nil,   161,
   161,   210,   210,   161,   161,   161,   161,   161,   nil,   nil,
   nil,   210,   nil,   nil,   nil,   161,   161,   161,   161,   161,
   nil,   nil,   nil,   nil,   nil,   nil,   210,   210,   nil,   nil,
   210,   210,   210,   210,   210,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   210,   210,   210,   210,   210 ]

racc_action_pointer = [
    11,    15,    18,    79,    26,    20,    32,   nil,   nil,    41,
    61,    20,   nil,   424,   -22,     9,   106,   nil,   nil,   nil,
   nil,   133,   nil,   nil,    64,   nil,   nil,    78,    91,    92,
    93,    95,    96,   nil,   nil,    -7,    82,    58,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    -1,   nil,    95,    97,
   105,   nil,    49,   102,   160,   nil,   nil,   187,   214,   241,
   268,   nil,   nil,    -6,   103,   118,   115,   295,   322,   349,
   376,   403,   430,   107,   nil,   -13,    73,   nil,   114,   481,
   125,   126,   127,   nil,   129,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   134,   nil,   144,   145,   146,   148,   149,
   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   145,   147,
    -2,   137,   nil,   466,   161,   139,   nil,   520,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    60,   nil,   nil,   nil,   nil,   nil,   nil,   547,
   159,   586,   168,   173,   nil,     0,   175,   625,    51,   177,
   128,    -9,   652,   679,   706,   733,   760,   787,   185,   nil,
   nil,   826,   nil,   180,   nil,   nil,   172,   177,   167,   197,
   nil,   nil,   194,   nil,   nil,   178,   203,   154,    25,   nil,
   nil,   nil,   185,   nil,    52,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   196,     0,   207,   nil,   nil,   212,
   213,   nil,   nil,   214,   nil,    36,   nil,   nil,   nil,   nil,
   853,     1,   184,   nil,   nil,   nil,   nil,   nil,    37,   nil,
   nil ]

racc_action_default = [
  -134,  -134,  -134,  -134,  -134,   -20,  -134,    -2,    -5,    -7,
    -9,  -126,   -71,   -72,   -75,   -78,  -134,   -80,   -81,   -82,
   -83,  -134,   -85,   -86,  -134,   -89,   -90,  -134,  -134,  -134,
  -134,  -134,  -134,  -113,  -114,  -118,  -134,  -134,  -120,  -124,
  -125,  -127,  -128,  -129,  -130,  -131,  -134,   221,   -22,  -134,
   -10,   -12,   -15,   -47,  -134,    -8,  -126,  -134,  -134,  -134,
  -134,   -79,   -87,  -118,  -134,  -134,  -134,  -134,  -134,  -134,
  -134,  -134,  -134,  -116,  -117,  -134,  -134,  -133,   -24,  -134,
  -134,  -134,  -134,   -14,  -134,    -6,   -73,   -74,   -76,   -77,
  -122,   -84,   -88,  -134,   -92,  -134,  -134,  -134,  -134,  -134,
  -134,  -100,  -101,  -115,  -119,  -121,  -123,  -132,   -29,  -134,
  -134,   -23,   -35,  -134,  -134,   -48,   -50,  -134,   -53,   -54,
   -55,   -57,   -58,   -59,   -60,   -61,   -68,   -69,   -70,   -21,
   -11,   -13,   -18,   -91,   -93,   -94,   -95,   -96,   -97,  -134,
   -31,  -134,  -134,  -134,    -4,  -134,   -70,  -134,  -134,  -134,
  -134,  -134,  -134,  -134,  -134,  -134,  -134,  -134,  -134,   -19,
   -46,  -134,   -52,  -134,   -17,   -99,   -33,  -134,   -30,   -25,
   -27,   -28,  -126,    -3,   -56,   -49,  -134,  -134,  -134,   -37,
   -38,   -43,  -134,   -45,  -134,   -62,   -63,   -64,   -65,   -66,
   -67,   -51,   -16,    -1,  -134,  -134,  -134,   -36,   -42,  -134,
   -41,   -44,   -34,   -32,  -103,  -107,  -105,  -106,   -26,   -39,
  -134,  -134,  -110,  -108,  -109,   -40,  -102,  -104,  -134,  -111,
  -112 ]

racc_goto_table = [
    10,    55,    51,    52,   101,   170,   171,     8,   111,   199,
   159,    62,   204,   179,     1,    64,     5,   181,    65,   185,
   186,   187,   188,   189,   190,    86,    87,    48,   216,    88,
    89,    78,   108,   140,   166,   193,     7,    50,   160,   145,
   197,   215,   169,    83,   198,   159,   203,   175,   191,   162,
    61,    10,    62,    62,    62,    62,    99,    92,    85,   208,
   171,   212,   217,   104,    93,    95,    96,    97,    98,   102,
   168,   165,   159,   131,    64,   105,   nil,   130,    52,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   146,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   164,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   102,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   192,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   200,   nil,   nil,   nil,   nil,
   nil,    65,   nil,   nil,   nil,   nil,   206,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   206,   nil,   nil,   nil,   nil,   200 ]

racc_goto_check = [
    15,    16,    18,    19,    55,    23,    24,    13,    21,    30,
    11,    43,    56,    29,     1,    46,     3,    32,    15,    28,
    28,    28,    28,    28,    28,    42,    42,     4,    56,    44,
    44,     5,     6,     7,     8,     9,    10,    17,    20,    21,
    29,    30,    22,    16,    32,    11,    25,    35,    36,    37,
    47,    15,    43,    43,    43,    43,    54,    16,    13,    23,
    24,    58,    59,    63,    15,    15,    15,    15,    15,    15,
    21,    55,    11,    16,    46,    64,   nil,    18,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,   nil,
   nil,    15,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,    15 ]

racc_goto_pointer = [
   nil,    14,   nil,    14,    22,   -17,   -46,   -75,  -106,  -131,
    33,  -104,   nil,     4,   nil,    -3,    -9,    31,    -4,    -3,
   -76,   -71,  -100,  -137,  -136,  -149,   nil,   nil,  -133,  -136,
  -169,   nil,  -133,   nil,   nil,  -100,  -113,   -68,   nil,   nil,
   nil,   nil,   -32,    -5,   -30,   nil,    -1,    34,   nil,   nil,
   nil,   nil,   nil,   nil,   -16,   -68,  -183,   nil,  -144,  -150,
   nil,   nil,   nil,   -12,     0 ]

racc_goto_default = [
   nil,   144,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   112,   143,   nil,     9,   128,    25,   nil,   nil,    26,
   180,   nil,   nil,   nil,    19,   nil,   127,   122,   113,   nil,
   nil,   123,    41,   124,   125,   115,   116,   118,   119,   120,
   121,   126,    12,    13,    14,    15,    16,    17,    18,    20,
    22,    23,    24,    32,   nil,   nil,   nil,   205,   nil,   nil,
    33,    34,    37,   nil,    38 ]

racc_reduce_table = [
  0, 0, :racc_error,
  8, 56, :_reduce_1,
  2, 57, :_reduce_2,
  3, 66, :_reduce_3,
  1, 67, :_reduce_none,
  1, 65, :_reduce_5,
  3, 68, :_reduce_6,
  1, 68, :_reduce_none,
  2, 69, :_reduce_8,
  1, 69, :_reduce_none,
  2, 58, :_reduce_10,
  3, 72, :_reduce_11,
  1, 72, :_reduce_none,
  3, 73, :_reduce_13,
  2, 73, :_reduce_14,
  1, 73, :_reduce_none,
  5, 73, :_reduce_16,
  4, 73, :_reduce_17,
  3, 73, :_reduce_18,
  1, 75, :_reduce_none,
  0, 59, :_reduce_none,
  3, 59, :_reduce_21,
  0, 60, :_reduce_none,
  2, 60, :_reduce_23,
  0, 61, :_reduce_none,
  3, 61, :_reduce_25,
  3, 77, :_reduce_26,
  1, 77, :_reduce_none,
  1, 78, :_reduce_none,
  0, 62, :_reduce_none,
  2, 62, :_reduce_30,
  0, 63, :_reduce_none,
  3, 63, :_reduce_32,
  0, 64, :_reduce_none,
  2, 64, :_reduce_34,
  1, 81, :_reduce_none,
  4, 82, :_reduce_36,
  3, 82, :_reduce_37,
  1, 84, :_reduce_none,
  3, 84, :_reduce_39,
  3, 85, :_reduce_40,
  1, 85, :_reduce_none,
  4, 86, :_reduce_42,
  3, 86, :_reduce_43,
  4, 88, :_reduce_44,
  3, 88, :_reduce_45,
  2, 89, :_reduce_46,
  1, 74, :_reduce_47,
  1, 76, :_reduce_none,
  3, 76, :_reduce_49,
  1, 90, :_reduce_none,
  3, 90, :_reduce_51,
  2, 91, :_reduce_52,
  1, 91, :_reduce_none,
  1, 92, :_reduce_none,
  1, 93, :_reduce_none,
  3, 93, :_reduce_56,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  3, 95, :_reduce_62,
  3, 95, :_reduce_63,
  3, 95, :_reduce_64,
  3, 95, :_reduce_65,
  3, 95, :_reduce_66,
  3, 95, :_reduce_67,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 96, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  3, 97, :_reduce_73,
  3, 97, :_reduce_74,
  1, 97, :_reduce_none,
  3, 99, :_reduce_76,
  3, 99, :_reduce_77,
  1, 99, :_reduce_none,
  2, 100, :_reduce_79,
  1, 100, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  3, 102, :_reduce_84,
  1, 103, :_reduce_none,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  3, 79, :_reduce_88,
  1, 79, :_reduce_none,
  1, 107, :_reduce_none,
  4, 104, :_reduce_91,
  3, 104, :_reduce_92,
  4, 104, :_reduce_93,
  4, 104, :_reduce_94,
  4, 104, :_reduce_95,
  4, 104, :_reduce_96,
  4, 104, :_reduce_97,
  1, 108, :_reduce_none,
  3, 109, :_reduce_none,
  1, 109, :_reduce_none,
  1, 110, :_reduce_none,
  3, 80, :_reduce_102,
  1, 80, :_reduce_none,
  3, 111, :_reduce_104,
  1, 112, :_reduce_none,
  1, 112, :_reduce_106,
  0, 113, :_reduce_none,
  1, 113, :_reduce_108,
  1, 113, :_reduce_109,
  0, 114, :_reduce_none,
  2, 114, :_reduce_111,
  2, 114, :_reduce_112,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  3, 115, :_reduce_115,
  2, 115, :_reduce_116,
  2, 115, :_reduce_117,
  1, 115, :_reduce_118,
  3, 116, :_reduce_119,
  1, 117, :_reduce_none,
  1, 118, :_reduce_none,
  2, 119, :_reduce_122,
  1, 119, :_reduce_123,
  1, 101, :_reduce_124,
  1, 101, :_reduce_125,
  1, 71, :_reduce_126,
  1, 98, :_reduce_none,
  1, 98, :_reduce_128,
  1, 98, :_reduce_129,
  1, 98, :_reduce_130,
  1, 98, :_reduce_131,
  3, 87, :_reduce_132,
  2, 87, :_reduce_133 ]

racc_reduce_n = 134

racc_shift_n = 221

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :left_paren => 3,
  :right_paren => 4,
  :comma => 5,
  :FROM => 6,
  :AS => 7,
  :identifier => 8,
  :period => 9,
  :USING => 10,
  :SCOPE => 11,
  :WHERE => 12,
  :GROUP => 13,
  :BY => 14,
  :HAVING => 15,
  :ORDER => 16,
  :LIMIT => 17,
  :unsigned_integer => 18,
  :NOT => 19,
  :IN => 20,
  :LIKE => 21,
  :IS => 22,
  :NULL => 23,
  :EXISTS => 24,
  :OR => 25,
  :AND => 26,
  :equals_operator => 27,
  :not_equals_operator => 28,
  :less_than_operator => 29,
  :greater_than_operator => 30,
  :less_than_or_equals_operator => 31,
  :greater_than_or_equals_operator => 32,
  :plus_sign => 33,
  :minus_sign => 34,
  :asterisk => 35,
  :solidus => 36,
  :COUNT => 37,
  :AVG => 38,
  :MAX => 39,
  :MIN => 40,
  :SUM => 41,
  :func_args_list => 42,
  :ASC => 43,
  :DESC => 44,
  :NULLS => 45,
  :FIRST => 46,
  :LAST => 47,
  :E => 48,
  :datetime => 49,
  :date => 50,
  :date_literal => 51,
  :date_literal_with_arg => 52,
  :quote => 53,
  :character_string_literal => 54 }

racc_nt_base = 55

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "left_paren",
  "right_paren",
  "comma",
  "FROM",
  "AS",
  "identifier",
  "period",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "OR",
  "AND",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "asterisk",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "E",
  "datetime",
  "date",
  "date_literal",
  "date_literal_with_arg",
  "quote",
  "character_string_literal",
  "$start",
  "query_specification",
  "select_clause",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_list",
  "subquery",
  "query_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_references",
  "table_reference",
  "table_name",
  "table_subquery",
  "search_condition",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "row_subquery",
  "in_predicate",
  "row_value_constructor",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "string_literal",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "general_set_function",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 5)
  def _reduce_1(val, _values, result)
     result = SOQLParser::Statement::Query.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 8)
  def _reduce_2(val, _values, result)
     result = SOQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_3(val, _values, result)
     result = SOQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_5(val, _values, result)
     result = SOQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_8(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_10(val, _values, result)
     result = SOQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_11(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_13(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_14(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_16(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_17(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_18(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_21(val, _values, result)
     result = SOQLParser::Statement::UsingScope.new(val[2]) 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_23(val, _values, result)
     result = SOQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_25(val, _values, result)
     result = SOQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_26(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_30(val, _values, result)
     result = SOQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_32(val, _values, result)
     result = SOQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_34(val, _values, result)
     result = SOQLParser::Statement::LimitClause.new(SOQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_36(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_37(val, _values, result)
     result = SOQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_39(val, _values, result)
     result = SOQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_40(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_42(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_43(val, _values, result)
     result = SOQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_44(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_45(val, _values, result)
     result = SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_46(val, _values, result)
     result = SOQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_47(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_49(val, _values, result)
     result = SOQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_51(val, _values, result)
     result = SOQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 123)
  def _reduce_52(val, _values, result)
     result = SOQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_56(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_62(val, _values, result)
     result = SOQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_63(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_64(val, _values, result)
     result = SOQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_65(val, _values, result)
     result = SOQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_66(val, _values, result)
     result = SOQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 146)
  def _reduce_67(val, _values, result)
     result = SOQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_73(val, _values, result)
     result = SOQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_74(val, _values, result)
     result = SOQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_76(val, _values, result)
     result = SOQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_77(val, _values, result)
     result = SOQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_79(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_84(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_88(val, _values, result)
     result = SOQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 89 omitted

# reduce 90 omitted

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_91(val, _values, result)
     result = SOQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_92(val, _values, result)
     result = SOQLParser::Statement::Count.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 196)
  def _reduce_93(val, _values, result)
     result = SOQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 197)
  def _reduce_94(val, _values, result)
     result = SOQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_95(val, _values, result)
     result = SOQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_96(val, _values, result)
     result = SOQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_97(val, _values, result)
     result = SOQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

module_eval(<<'.,.,', 'parser.racc', 214)
  def _reduce_102(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_104(val, _values, result)
     result = SOQLParser::Statement::OrderColumn.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_106(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.racc', 226)
  def _reduce_108(val, _values, result)
     result = SOQLParser::Statement::Ascending.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_109(val, _values, result)
     result = SOQLParser::Statement::Descending.new 
    result
  end
.,.,

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 231)
  def _reduce_111(val, _values, result)
     result = SOQLParser::Statement::NullsFirst.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_112(val, _values, result)
     result = SOQLParser::Statement::NullsLast.new 
    result
  end
.,.,

# reduce 113 omitted

# reduce 114 omitted

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_115(val, _values, result)
     result = SOQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_116(val, _values, result)
     result = SOQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_117(val, _values, result)
     result = SOQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 243)
  def _reduce_118(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_119(val, _values, result)
     result = SOQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 120 omitted

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_122(val, _values, result)
     result = val[0].new(SOQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 256)
  def _reduce_123(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 259)
  def _reduce_124(val, _values, result)
     result = SOQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 260)
  def _reduce_125(val, _values, result)
     result = SOQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_126(val, _values, result)
     result = SOQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_128(val, _values, result)
     result = SOQLParser::Statement::DateTime.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_129(val, _values, result)
     result = SOQLParser::Statement::Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_130(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_131(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(*val[0].split(':')) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_132(val, _values, result)
     result = SOQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_133(val, _values, result)
     result = SOQLParser::Statement::String.new('') 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SOQLParser
