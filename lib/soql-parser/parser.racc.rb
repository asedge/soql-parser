#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.2
# from Racc grammar file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SOQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 281)

def self.parse(soql)
  new.scan_str(soql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,    57,    77,    77,   171,   111,    13,    37,    61,   -97,
   180,    61,    62,    63,   181,   -47,    36,     3,   204,    40,
    41,   204,    64,    65,   148,     4,     3,   115,    81,    80,
    40,    41,    13,    37,    28,    29,    30,    31,    32,     6,
  -122,  -121,    36,   121,    86,    61,    43,    44,    45,    46,
    47,    48,     3,    57,   161,    61,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   173,   174,    50,    36,   210,
   211,    54,    43,    44,    45,    46,    47,   216,   217,     8,
    59,    61,    40,    41,    13,    37,    28,    29,    30,    31,
    32,    70,    71,    72,    36,    73,    74,    75,    43,    44,
    45,    46,    47,    76,    78,    57,    79,    83,    40,    41,
    13,    37,    28,    29,    30,    31,    32,    84,    85,    88,
    68,    89,    90,    96,    43,    44,    45,    46,    47,    61,
   108,    57,   112,   114,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   132,    54,    61,    36,   135,   136,   137,
    43,    44,    45,    46,    47,   138,   139,     8,   140,   141,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   142,
   144,   145,    36,   148,   159,   165,    43,    44,    45,    46,
    47,   170,    90,    57,   175,    47,    40,    41,    13,    37,
    28,    29,    30,    31,    32,    61,   191,   192,    36,   148,
   193,   -47,    43,    44,    45,    46,    47,   159,   175,    57,
    47,   198,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   199,   170,   206,    36,   207,   208,   215,    43,    44,
    45,    46,    47,   nil,   nil,    57,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,    57,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,    57,    99,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   nil,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,    57,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   nil,   nil,   nil,    36,   nil,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,    57,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,    57,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,    57,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,    57,   nil,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   nil,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,   115,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   105,   nil,   nil,    36,   121,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,   115,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,    57,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,   115,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   121,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,   115,   nil,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   121,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,     8,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   nil,   nil,   nil,    36,   nil,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,     8,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,     8,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,     8,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,     8,   nil,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   nil,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,     8,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   nil,   nil,   nil,    36,   nil,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,   115,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   121,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,    57,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   -86,
   -86,   -86,   -86,   nil,    40,    41,   nil,   nil,    28,    29,
    30,    31,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   149,   150,   151,   152,   nil,
   nil,   nil,   153,   154,   155,   156,   157,   158 ]

racc_action_check = [
     8,     8,    36,    68,   146,    79,     8,     8,   192,    13,
   152,   208,    16,    16,   152,    13,     8,     0,   192,    79,
    79,   208,    17,    17,   146,     1,   115,   115,    47,    47,
     8,     8,   115,   115,     8,     8,     8,     8,     8,     2,
    36,    68,   115,   115,    53,    53,     8,     8,     8,     8,
     8,     4,   175,   175,   135,   135,   115,   115,   175,   175,
   115,   115,   115,   115,   115,   149,   149,     5,   175,   202,
   202,     6,   115,   115,   115,   115,   115,   215,   215,     3,
    10,    11,   175,   175,     3,     3,   175,   175,   175,   175,
   175,    25,    28,    29,     3,    30,    31,    32,   175,   175,
   175,   175,   175,    33,    37,    18,    38,    49,     3,     3,
    18,    18,     3,     3,     3,     3,     3,    50,    51,    54,
    18,    55,    58,    69,     3,     3,     3,     3,     3,    70,
    77,    57,    80,    82,    18,    18,    57,    57,    18,    18,
    18,    18,    18,    84,    85,    86,    57,    88,    98,   100,
    18,    18,    18,    18,    18,   101,   102,    59,   103,   104,
    57,    57,    59,    59,    57,    57,    57,    57,    57,   105,
   113,   114,    59,   116,   119,   143,    57,    57,    57,    57,
    57,   145,   147,    62,   150,   151,    59,    59,    62,    62,
    59,    59,    59,    59,    59,   161,   164,   165,    62,   166,
   167,   170,    59,    59,    59,    59,    59,   172,   173,    63,
   174,   180,    62,    62,    63,    63,    62,    62,    62,    62,
    62,   191,   193,   196,    63,   197,   200,   209,    62,    62,
    62,    62,    62,   nil,   nil,    64,   nil,   nil,    63,    63,
    64,    64,    63,    63,    63,    63,    63,   nil,   nil,   nil,
    64,   nil,   nil,   nil,    63,    63,    63,    63,    63,   nil,
   nil,    65,   nil,   nil,    64,    64,    65,    65,    64,    64,
    64,    64,    64,   nil,   nil,   nil,    65,   nil,   nil,   nil,
    64,    64,    64,    64,    64,   nil,   nil,    71,    71,   nil,
    65,    65,    71,    71,    65,    65,    65,    65,    65,   nil,
   nil,   nil,    71,   nil,   nil,   nil,    65,    65,    65,    65,
    65,   nil,   nil,    72,   nil,   nil,    71,    71,    72,    72,
    71,    71,    71,    71,    71,   nil,   nil,   nil,    72,   nil,
   nil,   nil,    71,    71,    71,    71,    71,   nil,   nil,    73,
   nil,   nil,    72,    72,    73,    73,    72,    72,    72,    72,
    72,   nil,   nil,   nil,    73,   nil,   nil,   nil,    72,    72,
    72,    72,    72,   nil,   nil,    74,   nil,   nil,    73,    73,
    74,    74,    73,    73,    73,    73,    73,   nil,   nil,   nil,
    74,   nil,   nil,   nil,    73,    73,    73,    73,    73,   nil,
   nil,    75,   nil,   nil,    74,    74,    75,    75,    74,    74,
    74,    74,    74,   nil,   nil,   nil,    75,   nil,   nil,   nil,
    74,    74,    74,    74,    74,   nil,   nil,    76,   nil,   nil,
    75,    75,    76,    76,    75,    75,    75,    75,    75,   nil,
   nil,   nil,    76,   nil,   nil,   nil,    75,    75,    75,    75,
    75,   nil,   nil,    83,   nil,   nil,    76,    76,    83,    83,
    76,    76,    76,    76,    76,    76,   nil,   nil,    83,    83,
   nil,   nil,    76,    76,    76,    76,    76,   nil,   nil,   121,
   nil,   nil,    83,    83,   121,   121,    83,    83,    83,    83,
    83,   nil,   nil,   nil,   121,   nil,   nil,   nil,    83,    83,
    83,    83,    83,   nil,   nil,   142,   nil,   nil,   121,   121,
   142,   142,   121,   121,   121,   121,   121,   nil,   nil,   nil,
   142,   nil,   nil,   nil,   121,   121,   121,   121,   121,   nil,
   nil,   144,   nil,   nil,   142,   142,   144,   144,   142,   142,
   142,   142,   142,   nil,   nil,   nil,   144,   144,   nil,   nil,
   142,   142,   142,   142,   142,   nil,   nil,   148,   nil,   nil,
   144,   144,   148,   148,   144,   144,   144,   144,   144,   nil,
   nil,   nil,   148,   148,   nil,   nil,   144,   144,   144,   144,
   144,   nil,   nil,   153,   nil,   nil,   148,   148,   153,   153,
   148,   148,   148,   148,   148,   nil,   nil,   nil,   153,   nil,
   nil,   nil,   148,   148,   148,   148,   148,   nil,   nil,   154,
   nil,   nil,   153,   153,   154,   154,   153,   153,   153,   153,
   153,   nil,   nil,   nil,   154,   nil,   nil,   nil,   153,   153,
   153,   153,   153,   nil,   nil,   155,   nil,   nil,   154,   154,
   155,   155,   154,   154,   154,   154,   154,   nil,   nil,   nil,
   155,   nil,   nil,   nil,   154,   154,   154,   154,   154,   nil,
   nil,   156,   nil,   nil,   155,   155,   156,   156,   155,   155,
   155,   155,   155,   nil,   nil,   nil,   156,   nil,   nil,   nil,
   155,   155,   155,   155,   155,   nil,   nil,   157,   nil,   nil,
   156,   156,   157,   157,   156,   156,   156,   156,   156,   nil,
   nil,   nil,   157,   nil,   nil,   nil,   156,   156,   156,   156,
   156,   nil,   nil,   158,   nil,   nil,   157,   157,   158,   158,
   157,   157,   157,   157,   157,   nil,   nil,   nil,   158,   nil,
   nil,   nil,   157,   157,   157,   157,   157,   nil,   nil,   159,
   nil,   nil,   158,   158,   159,   159,   158,   158,   158,   158,
   158,   nil,   nil,   nil,   159,   159,   nil,   nil,   158,   158,
   158,   158,   158,   nil,   nil,   207,   nil,   nil,   159,   159,
   207,   207,   159,   159,   159,   159,   159,   nil,   nil,   nil,
   207,   nil,   nil,   nil,   159,   159,   159,   159,   159,    15,
    15,    15,    15,   nil,   207,   207,   nil,   nil,   207,   207,
   207,   207,   207,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   207,   207,   207,   207,   207,   118,   118,   118,   118,   nil,
   nil,   nil,   118,   118,   118,   118,   118,   118 ]

racc_action_pointer = [
    15,    25,    33,    76,    51,    57,    63,   nil,    -2,   nil,
    75,    73,   nil,     6,   nil,   747,   -20,   -12,   102,   nil,
   nil,   nil,   nil,   nil,   nil,    82,   nil,   nil,    89,    90,
    92,    93,    94,   100,   nil,   nil,    -7,    86,    59,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -24,   nil,    95,
   106,   113,   nil,    37,   110,   117,   nil,   128,   118,   154,
   nil,   nil,   180,   206,   232,   258,   nil,   nil,    -6,   105,
   121,   284,   310,   336,   362,   388,   414,   112,   nil,   -13,
    80,   nil,   120,   440,   135,   136,   137,   nil,   139,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   144,   nil,
   145,   151,   152,   154,   155,   164,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   155,   157,    24,   149,   nil,   786,   149,
   nil,   466,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,   nil,   nil,   nil,   nil,
   nil,   nil,   492,   159,   518,   173,     0,   178,   544,    45,
   181,   133,    -9,   570,   596,   622,   648,   674,   700,   726,
   nil,   187,   nil,   nil,   179,   183,   175,   195,   nil,   nil,
   192,   nil,   182,   205,   158,    50,   nil,   nil,   nil,   nil,
   188,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   203,     0,   214,   nil,   nil,   219,   220,   nil,   nil,
   221,   nil,    27,   nil,   nil,   nil,   nil,   752,     3,   183,
   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil ]

racc_action_default = [
  -133,  -133,  -133,  -133,  -133,   -21,  -133,    -2,  -133,    -5,
    -7,    -9,   -10,  -125,   -70,   -71,   -74,   -77,  -133,   -79,
   -80,   -81,   -82,   -84,   -85,  -133,   -88,   -89,  -133,  -133,
  -133,  -133,  -133,  -133,  -112,  -113,  -117,  -133,  -133,  -119,
  -123,  -124,  -126,  -127,  -128,  -129,  -130,  -133,   218,   -23,
  -133,   -11,   -13,   -16,   -47,  -133,    -4,  -133,  -133,  -133,
    -8,  -125,  -133,  -133,  -133,  -133,   -78,   -86,  -117,  -133,
  -133,  -133,  -133,  -133,  -133,  -133,  -133,  -115,  -116,  -133,
  -133,  -132,   -25,  -133,  -133,  -133,  -133,   -15,  -133,    -3,
   -83,    -6,   -72,   -73,   -75,   -76,  -121,   -87,  -133,   -91,
  -133,  -133,  -133,  -133,  -133,  -133,   -99,  -100,  -114,  -118,
  -120,  -122,  -131,   -30,  -133,  -133,   -24,   -36,  -133,   -48,
   -50,  -133,   -53,   -54,   -55,   -57,   -58,   -59,   -60,   -67,
   -68,   -69,   -22,   -12,   -14,   -19,   -90,   -92,   -93,   -94,
   -95,   -96,  -133,   -32,  -133,  -133,  -133,   -69,  -133,  -133,
  -133,  -133,  -133,  -133,  -133,  -133,  -133,  -133,  -133,  -133,
   -52,  -133,   -18,   -98,   -34,  -133,   -31,   -26,   -28,   -29,
  -125,   -56,   -49,  -133,  -133,  -133,   -20,   -38,   -39,   -44,
  -133,   -46,   -61,   -62,   -63,   -64,   -65,   -66,   -51,   -17,
    -1,  -133,  -133,  -133,   -37,   -43,  -133,   -42,   -45,   -35,
   -33,  -102,  -106,  -104,  -105,   -27,   -40,  -133,  -133,  -109,
  -107,  -108,   -41,  -101,  -103,  -133,  -110,  -111 ]

racc_goto_table = [
    11,    60,    52,    12,    53,    58,   116,     9,   106,   168,
   169,   177,   196,   179,    69,   201,   182,   183,   184,   185,
   186,   187,    92,    93,    94,    95,     1,     5,    49,    82,
   113,   213,   143,    67,   194,   164,   195,   190,   146,     7,
    51,   167,   200,    87,   212,   172,   188,   160,    66,   104,
   209,   214,   109,   110,    58,   nil,    11,   205,   169,    12,
    97,   nil,   nil,    91,   nil,   nil,   nil,   166,    98,   100,
   101,   102,   103,   107,   163,    69,   134,    67,    67,    67,
    67,   133,   nil,    53,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   147,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   162,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   107,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   176,   189,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   197,   176,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   203,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203,   nil,
   nil,   nil,   nil,   nil,   197 ]

racc_goto_check = [
    15,    16,    18,    11,    19,    15,    21,    13,    54,    23,
    24,    29,    30,    32,    45,    55,    28,    28,    28,    28,
    28,    28,    41,    41,    43,    43,     1,     3,     4,     5,
     6,    55,     7,    42,    29,     8,    32,     9,    21,    10,
    17,    22,    25,    16,    30,    34,    35,    36,    46,    53,
    57,    58,    62,    63,    15,   nil,    15,    23,    24,    11,
    16,   nil,   nil,    13,   nil,   nil,   nil,    21,    15,    15,
    15,    15,    15,    15,    54,    45,    16,    42,    42,    42,
    42,    18,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    11,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    15,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,
   nil,   nil,   nil,   nil,    15 ]

racc_goto_pointer = [
   nil,    26,   nil,    25,    23,   -20,   -52,   -81,  -108,  -127,
    36,     0,   nil,     4,   nil,    -3,   -10,    34,    -4,    -2,
   nil,   -77,  -104,  -136,  -135,  -150,   nil,   nil,  -137,  -139,
  -163,   nil,  -138,   nil,  -103,  -113,   -74,   nil,   nil,   nil,
   nil,   -40,    15,   -40,   nil,    -4,    30,   nil,   nil,   nil,
   nil,   nil,   nil,   -27,   -68,  -177,   nil,  -152,  -158,   nil,
   nil,   nil,   -27,   -26 ]

racc_goto_default = [
   nil,    56,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   117,    55,   nil,    10,   131,    26,   nil,   nil,    27,
   178,   nil,   nil,   nil,    21,   nil,   130,   126,   118,   nil,
   nil,   127,    42,   128,   119,   120,   122,   123,   124,   125,
   129,    14,    15,    16,    17,    18,    19,    20,    22,    23,
    24,    25,    33,   nil,   nil,   nil,   202,   nil,   nil,    34,
    35,    38,   nil,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  8, 55, :_reduce_1,
  2, 56, :_reduce_2,
  3, 65, :_reduce_3,
  1, 66, :_reduce_none,
  1, 64, :_reduce_5,
  3, 67, :_reduce_6,
  1, 67, :_reduce_none,
  2, 68, :_reduce_8,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  2, 57, :_reduce_11,
  3, 71, :_reduce_12,
  1, 71, :_reduce_none,
  3, 72, :_reduce_14,
  2, 72, :_reduce_15,
  1, 72, :_reduce_none,
  5, 72, :_reduce_17,
  4, 72, :_reduce_18,
  3, 72, :_reduce_19,
  1, 74, :_reduce_none,
  0, 58, :_reduce_none,
  3, 58, :_reduce_22,
  0, 59, :_reduce_none,
  2, 59, :_reduce_24,
  0, 60, :_reduce_none,
  3, 60, :_reduce_26,
  3, 76, :_reduce_27,
  1, 76, :_reduce_none,
  1, 77, :_reduce_none,
  0, 61, :_reduce_none,
  2, 61, :_reduce_31,
  0, 62, :_reduce_none,
  3, 62, :_reduce_33,
  0, 63, :_reduce_none,
  2, 63, :_reduce_35,
  1, 80, :_reduce_none,
  4, 81, :_reduce_37,
  3, 81, :_reduce_38,
  1, 83, :_reduce_none,
  3, 83, :_reduce_40,
  3, 84, :_reduce_41,
  1, 84, :_reduce_none,
  4, 85, :_reduce_43,
  3, 85, :_reduce_44,
  4, 87, :_reduce_45,
  3, 87, :_reduce_46,
  1, 73, :_reduce_47,
  1, 75, :_reduce_none,
  3, 75, :_reduce_49,
  1, 88, :_reduce_none,
  3, 88, :_reduce_51,
  2, 89, :_reduce_52,
  1, 89, :_reduce_none,
  1, 90, :_reduce_none,
  1, 91, :_reduce_none,
  3, 91, :_reduce_56,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  3, 93, :_reduce_61,
  3, 93, :_reduce_62,
  3, 93, :_reduce_63,
  3, 93, :_reduce_64,
  3, 93, :_reduce_65,
  3, 93, :_reduce_66,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 94, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  3, 95, :_reduce_72,
  3, 95, :_reduce_73,
  1, 95, :_reduce_none,
  3, 97, :_reduce_75,
  3, 97, :_reduce_76,
  1, 97, :_reduce_none,
  2, 98, :_reduce_78,
  1, 98, :_reduce_none,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  3, 100, :_reduce_83,
  1, 101, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 78, :_reduce_87,
  1, 78, :_reduce_none,
  1, 105, :_reduce_none,
  4, 102, :_reduce_90,
  3, 102, :_reduce_91,
  4, 102, :_reduce_92,
  4, 102, :_reduce_93,
  4, 102, :_reduce_94,
  4, 102, :_reduce_95,
  4, 102, :_reduce_96,
  1, 106, :_reduce_none,
  3, 107, :_reduce_none,
  1, 107, :_reduce_none,
  1, 108, :_reduce_none,
  3, 79, :_reduce_101,
  1, 79, :_reduce_none,
  3, 109, :_reduce_103,
  1, 110, :_reduce_none,
  1, 110, :_reduce_105,
  0, 111, :_reduce_none,
  1, 111, :_reduce_107,
  1, 111, :_reduce_108,
  0, 112, :_reduce_none,
  2, 112, :_reduce_110,
  2, 112, :_reduce_111,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 113, :_reduce_114,
  2, 113, :_reduce_115,
  2, 113, :_reduce_116,
  1, 113, :_reduce_117,
  3, 114, :_reduce_118,
  1, 115, :_reduce_none,
  1, 116, :_reduce_none,
  2, 117, :_reduce_121,
  1, 117, :_reduce_122,
  1, 99, :_reduce_123,
  1, 99, :_reduce_124,
  1, 70, :_reduce_125,
  1, 96, :_reduce_none,
  1, 96, :_reduce_127,
  1, 96, :_reduce_128,
  1, 96, :_reduce_129,
  1, 96, :_reduce_130,
  3, 86, :_reduce_131,
  2, 86, :_reduce_132 ]

racc_reduce_n = 133

racc_shift_n = 218

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :left_paren => 3,
  :right_paren => 4,
  :comma => 5,
  :FROM => 6,
  :AS => 7,
  :identifier => 8,
  :period => 9,
  :USING => 10,
  :SCOPE => 11,
  :WHERE => 12,
  :GROUP => 13,
  :BY => 14,
  :HAVING => 15,
  :ORDER => 16,
  :LIMIT => 17,
  :unsigned_integer => 18,
  :NOT => 19,
  :IN => 20,
  :LIKE => 21,
  :IS => 22,
  :NULL => 23,
  :OR => 24,
  :AND => 25,
  :equals_operator => 26,
  :not_equals_operator => 27,
  :less_than_operator => 28,
  :greater_than_operator => 29,
  :less_than_or_equals_operator => 30,
  :greater_than_or_equals_operator => 31,
  :plus_sign => 32,
  :minus_sign => 33,
  :asterisk => 34,
  :solidus => 35,
  :COUNT => 36,
  :AVG => 37,
  :MAX => 38,
  :MIN => 39,
  :SUM => 40,
  :func_args_list => 41,
  :ASC => 42,
  :DESC => 43,
  :NULLS => 44,
  :FIRST => 45,
  :LAST => 46,
  :E => 47,
  :datetime => 48,
  :date => 49,
  :date_literal => 50,
  :date_literal_with_arg => 51,
  :quote => 52,
  :character_string_literal => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "left_paren",
  "right_paren",
  "comma",
  "FROM",
  "AS",
  "identifier",
  "period",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "OR",
  "AND",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "asterisk",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "E",
  "datetime",
  "date",
  "date_literal",
  "date_literal_with_arg",
  "quote",
  "character_string_literal",
  "$start",
  "query_specification",
  "select_clause",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_list",
  "subquery",
  "query_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_references",
  "table_reference",
  "table_name",
  "table_subquery",
  "search_condition",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "row_subquery",
  "in_predicate",
  "row_value_constructor",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "string_literal",
  "null_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "general_set_function",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 5)
  def _reduce_1(val, _values, result)
     result = SOQLParser::Statement::Query.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6], val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 8)
  def _reduce_2(val, _values, result)
     result = SOQLParser::Statement::Select.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_3(val, _values, result)
     result = SOQLParser::Statement::Subquery.new(val[1])
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_5(val, _values, result)
     result = SOQLParser::Statement::SelectList.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_8(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_11(val, _values, result)
     result = SOQLParser::Statement::FromClause.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_12(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_14(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_15(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_17(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_18(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_19(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0], val[2])
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_22(val, _values, result)
     result = SOQLParser::Statement::UsingScope.new(val[2])
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_24(val, _values, result)
     result = SOQLParser::Statement::WhereClause.new(val[1])
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_26(val, _values, result)
     result = SOQLParser::Statement::GroupByClause.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_27(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_31(val, _values, result)
     result = SOQLParser::Statement::HavingClause.new(val[1])
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_33(val, _values, result)
     result = SOQLParser::Statement::OrderBy.new(val[2])
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_35(val, _values, result)
     result = SOQLParser::Statement::LimitClause.new(SOQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_37(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::In.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_38(val, _values, result)
     result = SOQLParser::Statement::In.new(val[0], val[2])
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_40(val, _values, result)
     result = SOQLParser::Statement::InValueList.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_41(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_43(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Like.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_44(val, _values, result)
     result = SOQLParser::Statement::Like.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_45(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_46(val, _values, result)
     result = SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_47(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0])
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_49(val, _values, result)
     result = SOQLParser::Statement::Or.new(val[0], val[2])
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_51(val, _values, result)
     result = SOQLParser::Statement::And.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_52(val, _values, result)
     result = SOQLParser::Statement::Not.new(val[1])
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_56(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_61(val, _values, result)
     result = SOQLParser::Statement::Equals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_62(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Equals.new(val[0], val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_63(val, _values, result)
     result = SOQLParser::Statement::Less.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_64(val, _values, result)
     result = SOQLParser::Statement::Greater.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_65(val, _values, result)
     result = SOQLParser::Statement::LessOrEquals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_66(val, _values, result)
     result = SOQLParser::Statement::GreaterOrEquals.new(val[0], val[2])
    result
  end
.,.,

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_72(val, _values, result)
     result = SOQLParser::Statement::Add.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_73(val, _values, result)
     result = SOQLParser::Statement::Subtract.new(val[0], val[2])
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_75(val, _values, result)
     result = SOQLParser::Statement::Multiply.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_76(val, _values, result)
     result = SOQLParser::Statement::Divide.new(val[0], val[2])
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_78(val, _values, result)
     result = val[0].new(val[1])
    result
  end
.,.,

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_83(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_87(val, _values, result)
     result = SOQLParser::Statement::QualifiedColumn.new(val[0], val[2])
    result
  end
.,.,

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_90(val, _values, result)
     result = SOQLParser::Statement::Count.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 193)
  def _reduce_91(val, _values, result)
     result = SOQLParser::Statement::Count.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_92(val, _values, result)
     result = SOQLParser::Statement::Average.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_93(val, _values, result)
     result = SOQLParser::Statement::Maximum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 196)
  def _reduce_94(val, _values, result)
     result = SOQLParser::Statement::Minimum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 197)
  def _reduce_95(val, _values, result)
     result = SOQLParser::Statement::Sum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_96(val, _values, result)
     result = SOQLParser::Statement::Function.new(val[0], val[2])
    result
  end
.,.,

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 212)
  def _reduce_101(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.racc', 216)
  def _reduce_103(val, _values, result)
     result = SOQLParser::Statement::OrderColumn.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 104 omitted

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_105(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'parser.racc', 224)
  def _reduce_107(val, _values, result)
     result = SOQLParser::Statement::Ascending.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_108(val, _values, result)
     result = SOQLParser::Statement::Descending.new
    result
  end
.,.,

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_110(val, _values, result)
     result = SOQLParser::Statement::NullsFirst.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 230)
  def _reduce_111(val, _values, result)
     result = SOQLParser::Statement::NullsLast.new
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_114(val, _values, result)
     result = SOQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_115(val, _values, result)
     result = SOQLParser::Statement::Float.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_116(val, _values, result)
     result = SOQLParser::Statement::Float.new("0.#{val[1]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_117(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 244)
  def _reduce_118(val, _values, result)
     result = SOQLParser::Statement::ApproximateFloat.new(val[0], val[2])
    result
  end
.,.,

# reduce 119 omitted

# reduce 120 omitted

module_eval(<<'.,.,', 'parser.racc', 253)
  def _reduce_121(val, _values, result)
     result = val[0].new(SOQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 254)
  def _reduce_122(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 257)
  def _reduce_123(val, _values, result)
     result = SOQLParser::Statement::UnaryPlus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 258)
  def _reduce_124(val, _values, result)
     result = SOQLParser::Statement::UnaryMinus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_125(val, _values, result)
     result = SOQLParser::Statement::Column.new(val[0])
    result
  end
.,.,

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_127(val, _values, result)
     result = SOQLParser::Statement::DateTime.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_128(val, _values, result)
     result = SOQLParser::Statement::Date.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_129(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_130(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(*val[0].split(':'))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_131(val, _values, result)
     result = SOQLParser::Statement::String.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 274)
  def _reduce_132(val, _values, result)
     result = SOQLParser::Statement::String.new('')
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module SOQLParser
