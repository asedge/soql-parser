#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.2
# from Racc grammar file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SOQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 291)

def self.parse(soql)
  new.scan_str(soql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,    59,    79,    79,   180,   113,    13,    37,   173,  -104,
   189,     3,   173,     4,   190,   -47,    36,     6,   219,    40,
    41,    44,   219,    50,   151,   -92,   -92,   -92,   -92,    52,
    40,    41,    64,    65,    28,    29,    30,    31,    32,    56,
  -129,  -128,    66,    67,    83,    82,    43,    45,    46,    47,
    48,    49,     3,   117,   152,   153,   154,   155,    13,    37,
    61,   156,   157,   158,   159,   160,   161,    63,    36,   123,
    88,    63,   -96,    44,   164,    63,   182,   183,   231,   232,
   237,   238,    40,    41,    72,    73,    28,    29,    30,    31,
    32,    74,    75,    76,    77,    78,    80,    81,    43,    45,
    46,    47,    48,    49,     3,    59,   152,   153,   154,   155,
    13,    37,    85,   174,   175,   176,   177,   178,   179,    86,
    36,    87,    90,    91,    92,    44,    98,    63,   110,   114,
   116,   134,    56,    63,    40,    41,   137,   138,    28,    29,
    30,    31,    32,     8,   139,   140,   141,   142,    13,    37,
    43,    45,    46,    47,    48,    49,   143,   144,    36,   146,
   147,   151,   162,    44,   168,   173,    92,   184,    49,    63,
   200,   201,    40,    41,   151,   202,    28,    29,    30,    31,
    32,    59,   -96,   -47,   162,   184,    13,    37,    43,    45,
    46,    47,    48,    49,    49,   213,    70,   214,   173,   221,
   222,    44,   223,   224,   225,   226,   227,   228,   229,   -96,
    40,    41,   236,   nil,    28,    29,    30,    31,    32,    59,
   nil,   nil,   nil,   nil,    13,    37,    43,    45,    46,    47,
    48,    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,
   nil,   nil,    28,    29,    30,    31,    32,     8,   nil,   nil,
   nil,   nil,    13,    37,    43,    45,    46,    47,    48,    49,
   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,
    28,    29,    30,    31,    32,    59,   nil,   nil,   nil,   nil,
    13,    37,    43,    45,    46,    47,    48,    49,   nil,   nil,
    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,    28,    29,
    30,    31,    32,    59,   nil,   nil,   nil,   nil,    13,    37,
    43,    45,    46,    47,    48,    49,   nil,   nil,    36,   nil,
   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    40,    41,   nil,   nil,    28,    29,    30,    31,
    32,    59,   nil,   nil,   nil,   nil,    13,    37,    43,    45,
    46,    47,    48,    49,   nil,   nil,    36,   nil,   nil,   nil,
   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    40,    41,   nil,   nil,    28,    29,    30,    31,    32,    59,
   nil,   nil,   nil,   nil,    13,    37,    43,    45,    46,    47,
    48,    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,
   nil,   nil,    28,    29,    30,    31,    32,    59,   101,   nil,
   nil,   nil,    13,    37,    43,    45,    46,    47,    48,    49,
   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,
    28,    29,    30,    31,    32,    59,   nil,   nil,   nil,   nil,
    13,    37,    43,    45,    46,    47,    48,    49,   nil,   nil,
    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,    28,    29,
    30,    31,    32,    59,   nil,   nil,   nil,   nil,    13,    37,
    43,    45,    46,    47,    48,    49,   nil,   nil,    36,   nil,
   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    40,    41,   nil,   nil,    28,    29,    30,    31,
    32,    59,   nil,   nil,   nil,   nil,    13,    37,    43,    45,
    46,    47,    48,    49,   nil,   nil,    36,   nil,   nil,   nil,
   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    40,    41,   nil,   nil,    28,    29,    30,    31,    32,    59,
   nil,   nil,   nil,   nil,    13,    37,    43,    45,    46,    47,
    48,    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,
   nil,   nil,    28,    29,    30,    31,    32,    59,   nil,   nil,
   nil,   nil,    13,    37,    43,    45,    46,    47,    48,    49,
   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,
    28,    29,    30,    31,    32,   107,   nil,   nil,   nil,   nil,
   nil,   nil,    43,    45,    46,    47,    48,    49,   117,   nil,
   nil,   nil,   nil,    13,    37,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    36,   123,   nil,   nil,   nil,    44,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,
   nil,    28,    29,    30,    31,    32,   117,   nil,   nil,   nil,
   nil,    13,    37,    43,    45,    46,    47,    48,    49,   nil,
   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,    28,
    29,    30,    31,    32,    59,   nil,   nil,   nil,   nil,    13,
    37,    43,    45,    46,    47,    48,    49,   nil,   nil,    36,
   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    41,   nil,   nil,    28,    29,    30,
    31,    32,   117,   nil,   nil,   nil,   nil,    13,    37,    43,
    45,    46,    47,    48,    49,   nil,   nil,    36,   123,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,    41,   nil,   nil,    28,    29,    30,    31,    32,
   117,   nil,   nil,   nil,   nil,    13,    37,    43,    45,    46,
    47,    48,    49,   nil,   nil,    36,   123,   nil,   nil,   nil,
    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,
    41,   nil,   nil,    28,    29,    30,    31,    32,     8,   nil,
   nil,   nil,   nil,    13,    37,    43,    45,    46,    47,    48,
    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,
   nil,    28,    29,    30,    31,    32,     8,   nil,   nil,   nil,
   nil,    13,    37,    43,    45,    46,    47,    48,    49,   nil,
   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,    28,
    29,    30,    31,    32,     8,   nil,   nil,   nil,   nil,    13,
    37,    43,    45,    46,    47,    48,    49,   nil,   nil,    36,
   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    41,   nil,   nil,    28,    29,    30,
    31,    32,     8,   nil,   nil,   nil,   nil,    13,    37,    43,
    45,    46,    47,    48,    49,   nil,   nil,    36,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,    41,   nil,   nil,    28,    29,    30,    31,    32,
     8,   nil,   nil,   nil,   nil,    13,    37,    43,    45,    46,
    47,    48,    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,
    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,
    41,   nil,   nil,    28,    29,    30,    31,    32,     8,   nil,
   nil,   nil,   nil,    13,    37,    43,    45,    46,    47,    48,
    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,
   nil,    28,    29,    30,    31,    32,   117,   nil,   nil,   nil,
   nil,    13,    37,    43,    45,    46,    47,    48,    49,   nil,
   nil,    36,   123,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,    28,
    29,    30,    31,    32,     8,   nil,   nil,   nil,   nil,    13,
    37,    43,    45,    46,    47,    48,    49,   nil,   nil,    36,
   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    41,   nil,   nil,    28,    29,    30,
    31,    32,     8,   nil,   nil,   nil,   nil,    13,    37,    43,
    45,    46,    47,    48,    49,   nil,   nil,    36,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,    41,   nil,   nil,    28,    29,    30,    31,    32,
     8,   nil,   nil,   nil,   nil,    13,    37,    43,    45,    46,
    47,    48,    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,
    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,
    41,   nil,   nil,    28,    29,    30,    31,    32,     8,   nil,
   nil,   nil,   nil,    13,    37,    43,    45,    46,    47,    48,
    49,   nil,   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,
   nil,    28,    29,    30,    31,    32,     8,   nil,   nil,   nil,
   nil,    13,    37,    43,    45,    46,    47,    48,    49,   nil,
   nil,    36,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,    28,
    29,    30,    31,    32,     8,   nil,   nil,   nil,   nil,    13,
    37,    43,    45,    46,    47,    48,    49,   nil,   nil,    36,
   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    41,   nil,   nil,    28,    29,    30,
    31,    32,    59,   nil,   nil,   nil,   nil,    13,    37,    43,
    45,    46,    47,    48,    49,   nil,   nil,    36,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,    41,   nil,   nil,    28,    29,    30,    31,    32,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    45,    46,
    47,    48,    49 ]

racc_action_check = [
     8,     8,    36,    70,   149,    81,     8,     8,   201,    13,
   155,     0,   229,     1,   155,    13,     8,     2,   201,    81,
    81,     8,   229,     4,   149,    15,    15,    15,    15,     5,
     8,     8,    16,    16,     8,     8,     8,     8,     8,     6,
    36,    70,    17,    17,    49,    49,     8,     8,     8,     8,
     8,     8,   117,   117,   120,   120,   120,   120,   117,   117,
    10,   120,   120,   120,   120,   120,   120,    11,   117,   117,
    55,    55,    21,   117,   137,   137,   152,   152,   218,   218,
   236,   236,   117,   117,    25,    28,   117,   117,   117,   117,
   117,    29,    30,    31,    32,    33,    37,    38,   117,   117,
   117,   117,   117,   117,   184,   184,   148,   148,   148,   148,
   184,   184,    51,   148,   148,   148,   148,   148,   148,    52,
   184,    53,    56,    57,    60,   184,    71,    72,    79,    82,
    84,    86,    87,    88,   184,   184,    90,   100,   184,   184,
   184,   184,   184,     3,   102,   103,   104,   105,     3,     3,
   184,   184,   184,   184,   184,   184,   106,   107,     3,   115,
   116,   118,   121,     3,   145,   147,   150,   153,   154,   164,
   167,   168,     3,     3,   169,   170,     3,     3,     3,     3,
     3,    18,   172,   173,   181,   182,    18,    18,     3,     3,
     3,     3,     3,     3,   183,   189,    18,   200,   202,   203,
   204,    18,   205,   206,   207,   208,   211,   212,   215,   216,
    18,    18,   230,   nil,    18,    18,    18,    18,    18,    59,
   nil,   nil,   nil,   nil,    59,    59,    18,    18,    18,    18,
    18,    18,   nil,   nil,    59,   nil,   nil,   nil,   nil,    59,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    59,    59,
   nil,   nil,    59,    59,    59,    59,    59,    61,   nil,   nil,
   nil,   nil,    61,    61,    59,    59,    59,    59,    59,    59,
   nil,   nil,    61,   nil,   nil,   nil,   nil,    61,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    61,    61,   nil,   nil,
    61,    61,    61,    61,    61,    64,   nil,   nil,   nil,   nil,
    64,    64,    61,    61,    61,    61,    61,    61,   nil,   nil,
    64,   nil,   nil,   nil,   nil,    64,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    64,    64,   nil,   nil,    64,    64,
    64,    64,    64,    65,   nil,   nil,   nil,   nil,    65,    65,
    64,    64,    64,    64,    64,    64,   nil,   nil,    65,   nil,
   nil,   nil,   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    65,    65,   nil,   nil,    65,    65,    65,    65,
    65,    66,   nil,   nil,   nil,   nil,    66,    66,    65,    65,
    65,    65,    65,    65,   nil,   nil,    66,   nil,   nil,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    66,    66,   nil,   nil,    66,    66,    66,    66,    66,    67,
   nil,   nil,   nil,   nil,    67,    67,    66,    66,    66,    66,
    66,    66,   nil,   nil,    67,   nil,   nil,   nil,   nil,    67,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    67,    67,
   nil,   nil,    67,    67,    67,    67,    67,    73,    73,   nil,
   nil,   nil,    73,    73,    67,    67,    67,    67,    67,    67,
   nil,   nil,    73,   nil,   nil,   nil,   nil,    73,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    73,    73,   nil,   nil,
    73,    73,    73,    73,    73,    74,   nil,   nil,   nil,   nil,
    74,    74,    73,    73,    73,    73,    73,    73,   nil,   nil,
    74,   nil,   nil,   nil,   nil,    74,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    74,    74,   nil,   nil,    74,    74,
    74,    74,    74,    75,   nil,   nil,   nil,   nil,    75,    75,
    74,    74,    74,    74,    74,    74,   nil,   nil,    75,   nil,
   nil,   nil,   nil,    75,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    75,    75,   nil,   nil,    75,    75,    75,    75,
    75,    76,   nil,   nil,   nil,   nil,    76,    76,    75,    75,
    75,    75,    75,    75,   nil,   nil,    76,   nil,   nil,   nil,
   nil,    76,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    76,    76,   nil,   nil,    76,    76,    76,    76,    76,    77,
   nil,   nil,   nil,   nil,    77,    77,    76,    76,    76,    76,
    76,    76,   nil,   nil,    77,   nil,   nil,   nil,   nil,    77,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    77,    77,
   nil,   nil,    77,    77,    77,    77,    77,    78,   nil,   nil,
   nil,   nil,    78,    78,    77,    77,    77,    77,    77,    77,
   nil,   nil,    78,   nil,   nil,   nil,   nil,    78,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    78,    78,   nil,   nil,
    78,    78,    78,    78,    78,    78,   nil,   nil,   nil,   nil,
   nil,   nil,    78,    78,    78,    78,    78,    78,    85,   nil,
   nil,   nil,   nil,    85,    85,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    85,    85,   nil,   nil,   nil,    85,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    85,    85,   nil,
   nil,    85,    85,    85,    85,    85,   123,   nil,   nil,   nil,
   nil,   123,   123,    85,    85,    85,    85,    85,    85,   nil,
   nil,   123,   nil,   nil,   nil,   nil,   123,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   123,   123,   nil,   nil,   123,
   123,   123,   123,   123,   144,   nil,   nil,   nil,   nil,   144,
   144,   123,   123,   123,   123,   123,   123,   nil,   nil,   144,
   nil,   nil,   nil,   nil,   144,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   144,   144,   nil,   nil,   144,   144,   144,
   144,   144,   146,   nil,   nil,   nil,   nil,   146,   146,   144,
   144,   144,   144,   144,   144,   nil,   nil,   146,   146,   nil,
   nil,   nil,   146,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   146,   146,   nil,   nil,   146,   146,   146,   146,   146,
   151,   nil,   nil,   nil,   nil,   151,   151,   146,   146,   146,
   146,   146,   146,   nil,   nil,   151,   151,   nil,   nil,   nil,
   151,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   151,
   151,   nil,   nil,   151,   151,   151,   151,   151,   156,   nil,
   nil,   nil,   nil,   156,   156,   151,   151,   151,   151,   151,
   151,   nil,   nil,   156,   nil,   nil,   nil,   nil,   156,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   156,   156,   nil,
   nil,   156,   156,   156,   156,   156,   157,   nil,   nil,   nil,
   nil,   157,   157,   156,   156,   156,   156,   156,   156,   nil,
   nil,   157,   nil,   nil,   nil,   nil,   157,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   157,   157,   nil,   nil,   157,
   157,   157,   157,   157,   158,   nil,   nil,   nil,   nil,   158,
   158,   157,   157,   157,   157,   157,   157,   nil,   nil,   158,
   nil,   nil,   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   158,   158,   nil,   nil,   158,   158,   158,
   158,   158,   159,   nil,   nil,   nil,   nil,   159,   159,   158,
   158,   158,   158,   158,   158,   nil,   nil,   159,   nil,   nil,
   nil,   nil,   159,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   159,   159,   nil,   nil,   159,   159,   159,   159,   159,
   160,   nil,   nil,   nil,   nil,   160,   160,   159,   159,   159,
   159,   159,   159,   nil,   nil,   160,   nil,   nil,   nil,   nil,
   160,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   160,
   160,   nil,   nil,   160,   160,   160,   160,   160,   161,   nil,
   nil,   nil,   nil,   161,   161,   160,   160,   160,   160,   160,
   160,   nil,   nil,   161,   nil,   nil,   nil,   nil,   161,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   161,   161,   nil,
   nil,   161,   161,   161,   161,   161,   162,   nil,   nil,   nil,
   nil,   162,   162,   161,   161,   161,   161,   161,   161,   nil,
   nil,   162,   162,   nil,   nil,   nil,   162,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   162,   162,   nil,   nil,   162,
   162,   162,   162,   162,   174,   nil,   nil,   nil,   nil,   174,
   174,   162,   162,   162,   162,   162,   162,   nil,   nil,   174,
   nil,   nil,   nil,   nil,   174,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   174,   174,   nil,   nil,   174,   174,   174,
   174,   174,   175,   nil,   nil,   nil,   nil,   175,   175,   174,
   174,   174,   174,   174,   174,   nil,   nil,   175,   nil,   nil,
   nil,   nil,   175,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   175,   175,   nil,   nil,   175,   175,   175,   175,   175,
   176,   nil,   nil,   nil,   nil,   176,   176,   175,   175,   175,
   175,   175,   175,   nil,   nil,   176,   nil,   nil,   nil,   nil,
   176,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   176,
   176,   nil,   nil,   176,   176,   176,   176,   176,   177,   nil,
   nil,   nil,   nil,   177,   177,   176,   176,   176,   176,   176,
   176,   nil,   nil,   177,   nil,   nil,   nil,   nil,   177,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   177,   177,   nil,
   nil,   177,   177,   177,   177,   177,   178,   nil,   nil,   nil,
   nil,   178,   178,   177,   177,   177,   177,   177,   177,   nil,
   nil,   178,   nil,   nil,   nil,   nil,   178,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   178,   178,   nil,   nil,   178,
   178,   178,   178,   178,   179,   nil,   nil,   nil,   nil,   179,
   179,   178,   178,   178,   178,   178,   178,   nil,   nil,   179,
   nil,   nil,   nil,   nil,   179,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   179,   179,   nil,   nil,   179,   179,   179,
   179,   179,   228,   nil,   nil,   nil,   nil,   228,   228,   179,
   179,   179,   179,   179,   179,   nil,   nil,   228,   nil,   nil,
   nil,   nil,   228,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   228,   228,   nil,   nil,   228,   228,   228,   228,   228,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   228,   228,   228,
   228,   228,   228 ]

racc_action_pointer = [
     9,    13,    11,   140,    23,    19,    31,   nil,    -2,   nil,
    55,    59,   nil,     6,   nil,    -7,     0,     8,   178,   nil,
   nil,    63,   nil,   nil,   nil,    75,   nil,   nil,    82,    88,
    89,    90,    91,    92,   nil,   nil,    -7,    78,    50,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -9,
   nil,   100,   108,   116,   nil,    63,   113,   119,   nil,   216,
   120,   254,   nil,   nil,   292,   330,   368,   406,   nil,   nil,
    -6,   108,   119,   444,   482,   520,   558,   596,   634,   110,
   nil,   -13,    76,   nil,   117,   685,   123,   124,   125,   nil,
   128,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   133,   nil,   140,   141,   142,   143,   152,   152,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   144,   146,    50,   137,   nil,
    35,   137,   nil,   723,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    67,   nil,   nil,
   nil,   nil,   nil,   nil,   761,   148,   799,   157,    87,     0,
   162,   837,    56,   164,   115,    -9,   875,   913,   951,   989,
  1027,  1065,  1103,   nil,   161,   nil,   nil,   153,   157,   150,
   170,   nil,   173,   174,  1141,  1179,  1217,  1255,  1293,  1331,
   nil,   159,   182,   141,   102,   nil,   nil,   nil,   nil,   172,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   179,     0,   190,   195,   196,   198,   199,   200,   201,   nil,
   nil,   202,   202,   nil,   nil,   203,   200,   nil,    36,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1369,     4,
   168,   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil ]

racc_action_default = [
  -142,  -142,  -142,  -142,  -142,   -21,  -142,    -2,  -142,    -5,
    -7,    -9,   -10,  -132,   -76,   -77,   -80,   -83,  -142,   -85,
   -86,   -87,   -88,   -90,   -91,  -142,   -94,   -95,  -142,  -142,
  -142,  -142,  -142,  -142,  -119,  -120,  -124,  -142,  -142,  -126,
  -130,  -131,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -142,
   239,   -23,  -142,   -11,   -13,   -16,   -47,  -142,    -4,  -142,
  -142,  -142,    -8,  -132,  -142,  -142,  -142,  -142,   -84,   -92,
  -124,  -142,  -142,  -142,  -142,  -142,  -142,  -142,  -142,  -122,
  -123,  -142,  -142,  -141,   -25,  -142,  -142,  -142,  -142,   -15,
  -142,    -3,   -89,    -6,   -78,   -79,   -81,   -82,  -128,   -93,
  -142,   -98,  -142,  -142,  -142,  -142,  -142,  -142,  -106,  -107,
  -121,  -125,  -127,  -129,  -140,   -30,  -142,  -142,   -24,   -36,
  -142,   -48,   -50,  -142,   -53,   -54,   -55,   -57,   -58,   -59,
   -60,   -73,   -74,   -75,   -22,   -12,   -14,   -19,   -97,   -99,
  -100,  -101,  -102,  -103,  -142,   -32,  -142,  -142,  -142,  -142,
   -75,  -142,  -142,  -142,  -142,  -142,  -142,  -142,  -142,  -142,
  -142,  -142,  -142,   -52,  -142,   -18,  -105,   -34,  -142,   -31,
   -26,   -28,   -29,  -132,  -142,  -142,  -142,  -142,  -142,  -142,
   -56,   -49,  -142,  -142,  -142,   -20,   -38,   -39,   -44,  -142,
   -46,   -61,   -62,   -63,   -64,   -65,   -66,   -51,   -17,    -1,
  -142,  -142,  -142,   -61,   -62,   -63,   -64,   -65,   -66,   -37,
   -43,  -142,   -42,   -45,   -35,   -33,  -111,  -109,  -113,  -112,
   -27,   -67,   -68,   -69,   -70,   -71,   -72,   -40,  -142,  -142,
  -116,  -114,  -115,   -41,  -108,  -110,  -142,  -117,  -118 ]

racc_goto_table = [
    11,    12,    62,    54,    55,    60,   172,   118,     9,   171,
   108,   211,   186,   188,    71,   217,    94,    95,    96,    97,
     1,     5,    51,    84,   115,   145,   167,   199,     7,    53,
   170,   215,   181,   197,    69,   163,    68,   106,   230,   149,
   235,   209,   210,   234,   111,   112,    89,   nil,   nil,   nil,
   148,   nil,   nil,   nil,   nil,   233,    60,   nil,    11,    12,
   216,   172,   nil,    99,   220,   nil,    93,   nil,   169,   nil,
   100,   102,   103,   104,   105,   109,   166,    71,   nil,   136,
    69,    69,    69,    69,   135,    55,   nil,   nil,   216,   191,
   192,   193,   194,   195,   196,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203,   204,   205,
   206,   207,   208,   nil,   150,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   165,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   185,   nil,   nil,   nil,   198,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   185,   212,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   212 ]

racc_goto_check = [
    15,    11,    16,    18,    19,    15,    24,    21,    13,    23,
    54,    30,    29,    32,    45,    55,    41,    41,    43,    43,
     1,     3,     4,     5,     6,     7,     8,     9,    10,    17,
    22,    25,    34,    35,    42,    36,    46,    53,    57,    21,
    58,    29,    32,    55,    62,    63,    16,   nil,   nil,   nil,
    28,   nil,   nil,   nil,   nil,    30,    15,   nil,    15,    11,
    24,    24,   nil,    16,    23,   nil,    13,   nil,    21,   nil,
    15,    15,    15,    15,    15,    15,    54,    45,   nil,    16,
    42,    42,    42,    42,    18,    19,   nil,   nil,    24,    28,
    28,    28,    28,    28,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,    28,    28,
    28,    28,    28,   nil,    15,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    11,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15 ]

racc_goto_pointer = [
   nil,    20,   nil,    19,    17,   -28,   -60,   -90,  -119,  -140,
    25,    -2,   nil,     5,   nil,    -3,    -9,    23,    -3,    -2,
   nil,   -78,  -117,  -138,  -141,  -170,   nil,   nil,   -67,  -141,
  -173,   nil,  -141,   nil,  -119,  -129,   -88,   nil,   nil,   nil,
   nil,   -48,    16,   -48,   nil,    -4,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   -41,   -68,  -186,   nil,  -180,  -190,   nil,
   nil,   nil,   -37,   -36 ]

racc_goto_default = [
   nil,    58,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   119,    57,   nil,    10,   133,    26,   nil,   nil,    27,
   187,   nil,   nil,   nil,    21,   nil,   132,   128,   120,   nil,
   nil,   129,    42,   130,   121,   122,   124,   125,   126,   127,
   131,    14,    15,    16,    17,    18,    19,    20,    22,    23,
    24,    25,    33,   nil,   nil,   nil,   218,   nil,   nil,    34,
    35,    38,   nil,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  8, 56, :_reduce_1,
  2, 57, :_reduce_2,
  3, 66, :_reduce_3,
  1, 67, :_reduce_none,
  1, 65, :_reduce_5,
  3, 68, :_reduce_6,
  1, 68, :_reduce_none,
  2, 69, :_reduce_8,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  2, 58, :_reduce_11,
  3, 72, :_reduce_12,
  1, 72, :_reduce_none,
  3, 73, :_reduce_14,
  2, 73, :_reduce_15,
  1, 73, :_reduce_none,
  5, 73, :_reduce_17,
  4, 73, :_reduce_18,
  3, 73, :_reduce_19,
  1, 75, :_reduce_none,
  0, 59, :_reduce_none,
  3, 59, :_reduce_22,
  0, 60, :_reduce_none,
  2, 60, :_reduce_24,
  0, 61, :_reduce_none,
  3, 61, :_reduce_26,
  3, 77, :_reduce_27,
  1, 77, :_reduce_none,
  1, 78, :_reduce_none,
  0, 62, :_reduce_none,
  2, 62, :_reduce_31,
  0, 63, :_reduce_none,
  3, 63, :_reduce_33,
  0, 64, :_reduce_none,
  2, 64, :_reduce_35,
  1, 81, :_reduce_none,
  4, 82, :_reduce_37,
  3, 82, :_reduce_38,
  1, 84, :_reduce_none,
  3, 84, :_reduce_40,
  3, 85, :_reduce_41,
  1, 85, :_reduce_none,
  4, 86, :_reduce_43,
  3, 86, :_reduce_44,
  4, 88, :_reduce_45,
  3, 88, :_reduce_46,
  1, 74, :_reduce_47,
  1, 76, :_reduce_none,
  3, 76, :_reduce_49,
  1, 89, :_reduce_none,
  3, 89, :_reduce_51,
  2, 90, :_reduce_52,
  1, 90, :_reduce_none,
  1, 91, :_reduce_none,
  1, 92, :_reduce_none,
  3, 92, :_reduce_56,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  3, 94, :_reduce_61,
  3, 94, :_reduce_62,
  3, 94, :_reduce_63,
  3, 94, :_reduce_64,
  3, 94, :_reduce_65,
  3, 94, :_reduce_66,
  5, 94, :_reduce_67,
  5, 94, :_reduce_68,
  5, 94, :_reduce_69,
  5, 94, :_reduce_70,
  5, 94, :_reduce_71,
  5, 94, :_reduce_72,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 95, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  3, 96, :_reduce_78,
  3, 96, :_reduce_79,
  1, 96, :_reduce_none,
  3, 98, :_reduce_81,
  3, 98, :_reduce_82,
  1, 98, :_reduce_none,
  2, 99, :_reduce_84,
  1, 99, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  3, 101, :_reduce_89,
  1, 102, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 79, :_reduce_93,
  1, 79, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  4, 103, :_reduce_97,
  3, 103, :_reduce_98,
  4, 103, :_reduce_99,
  4, 103, :_reduce_100,
  4, 103, :_reduce_101,
  4, 103, :_reduce_102,
  4, 103, :_reduce_103,
  1, 107, :_reduce_none,
  3, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 109, :_reduce_none,
  3, 80, :_reduce_108,
  1, 80, :_reduce_none,
  3, 110, :_reduce_110,
  1, 111, :_reduce_none,
  1, 111, :_reduce_112,
  0, 112, :_reduce_none,
  1, 112, :_reduce_114,
  1, 112, :_reduce_115,
  0, 113, :_reduce_none,
  2, 113, :_reduce_117,
  2, 113, :_reduce_118,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  3, 114, :_reduce_121,
  2, 114, :_reduce_122,
  2, 114, :_reduce_123,
  1, 114, :_reduce_124,
  3, 115, :_reduce_125,
  1, 116, :_reduce_none,
  1, 117, :_reduce_none,
  2, 118, :_reduce_128,
  1, 118, :_reduce_129,
  1, 100, :_reduce_130,
  1, 100, :_reduce_131,
  1, 71, :_reduce_132,
  1, 97, :_reduce_none,
  1, 97, :_reduce_134,
  1, 97, :_reduce_135,
  1, 97, :_reduce_136,
  1, 97, :_reduce_137,
  1, 97, :_reduce_138,
  1, 97, :_reduce_139,
  3, 87, :_reduce_140,
  2, 87, :_reduce_141 ]

racc_reduce_n = 142

racc_shift_n = 239

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :left_paren => 3,
  :right_paren => 4,
  :comma => 5,
  :FROM => 6,
  :AS => 7,
  :identifier => 8,
  :period => 9,
  :USING => 10,
  :SCOPE => 11,
  :WHERE => 12,
  :GROUP => 13,
  :BY => 14,
  :HAVING => 15,
  :ORDER => 16,
  :LIMIT => 17,
  :unsigned_integer => 18,
  :NOT => 19,
  :IN => 20,
  :LIKE => 21,
  :IS => 22,
  :NULL => 23,
  :OR => 24,
  :AND => 25,
  :equals_operator => 26,
  :not_equals_operator => 27,
  :less_than_operator => 28,
  :greater_than_operator => 29,
  :less_than_or_equals_operator => 30,
  :greater_than_or_equals_operator => 31,
  :plus_sign => 32,
  :minus_sign => 33,
  :asterisk => 34,
  :solidus => 35,
  :COUNT => 36,
  :AVG => 37,
  :MAX => 38,
  :MIN => 39,
  :SUM => 40,
  :func_args_list => 41,
  :ASC => 42,
  :DESC => 43,
  :NULLS => 44,
  :FIRST => 45,
  :LAST => 46,
  :E => 47,
  :null => 48,
  :datetime => 49,
  :date => 50,
  :date_literal => 51,
  :date_literal_with_arg => 52,
  :quote => 53,
  :character_string_literal => 54 }

racc_nt_base = 55

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "left_paren",
  "right_paren",
  "comma",
  "FROM",
  "AS",
  "identifier",
  "period",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "OR",
  "AND",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "asterisk",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "E",
  "null",
  "datetime",
  "date",
  "date_literal",
  "date_literal_with_arg",
  "quote",
  "character_string_literal",
  "$start",
  "query_specification",
  "select_clause",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_list",
  "subquery",
  "query_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_references",
  "table_reference",
  "table_name",
  "table_subquery",
  "search_condition",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "row_subquery",
  "in_predicate",
  "row_value_constructor",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "string_literal",
  "null_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "general_set_function",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 5)
  def _reduce_1(val, _values, result)
     result = SOQLParser::Statement::Query.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6], val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 8)
  def _reduce_2(val, _values, result)
     result = SOQLParser::Statement::Select.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_3(val, _values, result)
     result = SOQLParser::Statement::Subquery.new(val[1])
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_5(val, _values, result)
     result = SOQLParser::Statement::SelectList.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_8(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_11(val, _values, result)
     result = SOQLParser::Statement::FromClause.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_12(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_14(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_15(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_17(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_18(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_19(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0], val[2])
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_22(val, _values, result)
     result = SOQLParser::Statement::UsingScope.new(val[2])
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_24(val, _values, result)
     result = SOQLParser::Statement::WhereClause.new(val[1])
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_26(val, _values, result)
     result = SOQLParser::Statement::GroupByClause.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_27(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_31(val, _values, result)
     result = SOQLParser::Statement::HavingClause.new(val[1])
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_33(val, _values, result)
     result = SOQLParser::Statement::OrderBy.new(val[2])
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_35(val, _values, result)
     result = SOQLParser::Statement::LimitClause.new(SOQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_37(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::In.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_38(val, _values, result)
     result = SOQLParser::Statement::In.new(val[0], val[2])
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_40(val, _values, result)
     result = SOQLParser::Statement::InValueList.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_41(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_43(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Like.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_44(val, _values, result)
     result = SOQLParser::Statement::Like.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_45(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_46(val, _values, result)
     result = SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_47(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0])
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_49(val, _values, result)
     result = SOQLParser::Statement::Or.new(val[0], val[2])
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_51(val, _values, result)
     result = SOQLParser::Statement::And.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_52(val, _values, result)
     result = SOQLParser::Statement::Not.new(val[1])
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_56(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_61(val, _values, result)
     result = SOQLParser::Statement::Equals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_62(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Equals.new(val[0], val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_63(val, _values, result)
     result = SOQLParser::Statement::Less.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_64(val, _values, result)
     result = SOQLParser::Statement::Greater.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_65(val, _values, result)
     result = SOQLParser::Statement::LessOrEquals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_66(val, _values, result)
     result = SOQLParser::Statement::GreaterOrEquals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 146)
  def _reduce_67(val, _values, result)
     result = SOQLParser::Statement::Equals.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_68(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Equals.new(val[1], val[3], true))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_69(val, _values, result)
     result = SOQLParser::Statement::Less.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 149)
  def _reduce_70(val, _values, result)
     result = SOQLParser::Statement::Greater.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_71(val, _values, result)
     result = SOQLParser::Statement::LessOrEquals.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_72(val, _values, result)
     result = SOQLParser::Statement::GreaterOrEquals.new(val[1], val[3], true)
    result
  end
.,.,

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_78(val, _values, result)
     result = SOQLParser::Statement::Add.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_79(val, _values, result)
     result = SOQLParser::Statement::Subtract.new(val[0], val[2])
    result
  end
.,.,

# reduce 80 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_81(val, _values, result)
     result = SOQLParser::Statement::Multiply.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_82(val, _values, result)
     result = SOQLParser::Statement::Divide.new(val[0], val[2])
    result
  end
.,.,

# reduce 83 omitted

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_84(val, _values, result)
     result = val[0].new(val[1])
    result
  end
.,.,

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_89(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_93(val, _values, result)
     result = SOQLParser::Statement::QualifiedColumn.new(val[0], val[2])
    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_97(val, _values, result)
     result = SOQLParser::Statement::Count.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_98(val, _values, result)
     result = SOQLParser::Statement::Count.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_99(val, _values, result)
     result = SOQLParser::Statement::Average.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 203)
  def _reduce_100(val, _values, result)
     result = SOQLParser::Statement::Maximum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 204)
  def _reduce_101(val, _values, result)
     result = SOQLParser::Statement::Minimum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_102(val, _values, result)
     result = SOQLParser::Statement::Sum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_103(val, _values, result)
     result = SOQLParser::Statement::Function.new(val[0], val[2])
    result
  end
.,.,

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_108(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.racc', 224)
  def _reduce_110(val, _values, result)
     result = SOQLParser::Statement::OrderColumn.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 111 omitted

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_112(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_114(val, _values, result)
     result = SOQLParser::Statement::Ascending.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_115(val, _values, result)
     result = SOQLParser::Statement::Descending.new
    result
  end
.,.,

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.racc', 237)
  def _reduce_117(val, _values, result)
     result = SOQLParser::Statement::NullsFirst.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_118(val, _values, result)
     result = SOQLParser::Statement::NullsLast.new
    result
  end
.,.,

# reduce 119 omitted

# reduce 120 omitted

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_121(val, _values, result)
     result = SOQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 247)
  def _reduce_122(val, _values, result)
     result = SOQLParser::Statement::Float.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 248)
  def _reduce_123(val, _values, result)
     result = SOQLParser::Statement::Float.new("0.#{val[1]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_124(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 252)
  def _reduce_125(val, _values, result)
     result = SOQLParser::Statement::ApproximateFloat.new(val[0], val[2])
    result
  end
.,.,

# reduce 126 omitted

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 261)
  def _reduce_128(val, _values, result)
     result = val[0].new(SOQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_129(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 265)
  def _reduce_130(val, _values, result)
     result = SOQLParser::Statement::UnaryPlus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 266)
  def _reduce_131(val, _values, result)
     result = SOQLParser::Statement::UnaryMinus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_132(val, _values, result)
     result = SOQLParser::Statement::Column.new(val[0])
    result
  end
.,.,

# reduce 133 omitted

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_134(val, _values, result)
     result = SOQLParser::Statement::Null.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_135(val, _values, result)
     result = SOQLParser::Statement::Null.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_136(val, _values, result)
     result = SOQLParser::Statement::DateTime.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_137(val, _values, result)
     result = SOQLParser::Statement::Date.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_138(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_139(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(*val[0].split(':'))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_140(val, _values, result)
     result = SOQLParser::Statement::String.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_141(val, _values, result)
     result = SOQLParser::Statement::String.new('')
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module SOQLParser
