#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.2
# from Racc grammar file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SOQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 290)

def self.parse(soql)
  new.scan_str(soql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,    57,    77,    77,   111,    61,    13,    37,  -105,   187,
    61,    62,    63,   188,   -49,   219,    36,   178,    40,    41,
   219,   -94,   -94,   -94,   -94,     3,     3,   115,    64,    65,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   149,
  -130,  -129,    36,   121,    81,    80,    43,    44,    45,    46,
    47,     4,     3,    57,    86,    61,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   162,    61,     6,    36,   180,
   181,    48,    43,    44,    45,    46,    47,   231,   232,     8,
   237,   238,    40,    41,    13,    37,    28,    29,    30,    31,
    32,    50,    54,    59,    36,    61,    70,    71,    43,    44,
    45,    46,    47,    72,    73,    57,    74,    75,    40,    41,
    13,    37,    28,    29,    30,    31,    32,    76,    78,    79,
    68,    83,    84,    85,    43,    44,    45,    46,    47,    88,
    89,    57,    90,    96,    40,    41,    13,    37,    28,    29,
    30,    31,    32,    61,   108,   112,    36,   114,   132,    54,
    43,    44,    45,    46,    47,    61,   135,     8,   136,   137,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   138,
   139,   140,    36,   141,   142,   144,    43,    44,    45,    46,
    47,   145,   149,    57,   160,   166,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   171,    90,   182,    36,    47,
    61,   200,    43,    44,    45,    46,    47,   201,   149,    57,
   202,   -49,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   160,   182,    47,    36,   213,   214,   171,    43,    44,
    45,    46,    47,   221,   222,    57,   223,   224,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   225,   226,   227,
    36,   228,   229,   236,    43,    44,    45,    46,    47,   nil,
   nil,    57,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,    57,    99,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   nil,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,    57,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   nil,   nil,   nil,    36,   nil,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,    57,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,    57,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,    57,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,    57,   nil,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   nil,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,   115,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   105,   nil,   nil,    36,   121,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,   115,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,    57,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,   115,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   121,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,   115,   nil,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   121,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,   nil,   nil,   nil,    40,    41,   nil,   nil,
    28,    29,    30,    31,    32,     8,   nil,   nil,   nil,   nil,
    13,    37,    43,    44,    45,    46,    47,   nil,   nil,   nil,
    36,   150,   151,   152,   153,   189,   154,   155,   nil,   nil,
   156,   157,   158,   159,    40,    41,   nil,   nil,    28,    29,
    30,    31,    32,     8,   nil,   nil,   nil,   nil,    13,    37,
    43,    44,    45,    46,    47,   nil,   nil,   nil,    36,   nil,
   nil,   nil,   nil,   191,   nil,   nil,   nil,   nil,   nil,     8,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,     8,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,     8,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,     8,   nil,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   nil,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,   115,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   nil,   nil,   nil,    36,   121,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,   nil,
   nil,   nil,    40,    41,   nil,   nil,    28,    29,    30,    31,
    32,     8,   nil,   nil,   nil,   nil,    13,    37,    43,    44,
    45,    46,    47,   nil,   nil,   nil,    36,   150,   151,   152,
   153,   189,   172,   173,   nil,   nil,   174,   175,   176,   177,
    40,    41,   nil,   nil,    28,    29,    30,    31,    32,     8,
   nil,   nil,   nil,   nil,    13,    37,    43,    44,    45,    46,
    47,   nil,   nil,   nil,    36,   nil,   nil,   nil,   nil,   191,
   nil,   nil,   nil,   nil,   nil,     8,   nil,   nil,    40,    41,
    13,    37,    28,    29,    30,    31,    32,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    43,    44,    45,    46,    47,   nil,
   nil,     8,   nil,   nil,    40,    41,    13,    37,    28,    29,
    30,    31,    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,
    43,    44,    45,    46,    47,   nil,   nil,     8,   nil,   nil,
    40,    41,    13,    37,    28,    29,    30,    31,    32,   nil,
   nil,   nil,    36,   nil,   nil,   nil,    43,    44,    45,    46,
    47,   nil,   nil,     8,   nil,   nil,    40,    41,    13,    37,
    28,    29,    30,    31,    32,   nil,   nil,   nil,    36,   nil,
   nil,   nil,    43,    44,    45,    46,    47,   nil,   nil,    57,
   nil,   nil,    40,    41,    13,    37,    28,    29,    30,    31,
    32,   nil,   nil,   nil,    36,   nil,   nil,   nil,    43,    44,
    45,    46,    47,   nil,   nil,   nil,   nil,   nil,    40,    41,
   nil,   nil,    28,    29,    30,    31,    32,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    43,    44,    45,    46,    47 ]

racc_action_check = [
     8,     8,    36,    68,    79,   201,     8,     8,    13,   153,
   229,    16,    16,   153,    13,   201,     8,   147,    79,    79,
   229,    15,    15,    15,    15,     0,   115,   115,    17,    17,
     8,     8,   115,   115,     8,     8,     8,     8,     8,   147,
    36,    68,   115,   115,    47,    47,     8,     8,     8,     8,
     8,     1,   182,   182,    53,    53,   115,   115,   182,   182,
   115,   115,   115,   115,   115,   135,   135,     2,   182,   150,
   150,     4,   115,   115,   115,   115,   115,   217,   217,     3,
   236,   236,   182,   182,     3,     3,   182,   182,   182,   182,
   182,     5,     6,    10,     3,    11,    25,    28,   182,   182,
   182,   182,   182,    29,    30,    18,    31,    32,     3,     3,
    18,    18,     3,     3,     3,     3,     3,    33,    37,    38,
    18,    49,    50,    51,     3,     3,     3,     3,     3,    54,
    55,    57,    58,    69,    18,    18,    57,    57,    18,    18,
    18,    18,    18,    70,    77,    80,    57,    82,    84,    85,
    18,    18,    18,    18,    18,    86,    88,    59,    98,   100,
    57,    57,    59,    59,    57,    57,    57,    57,    57,   101,
   102,   103,    59,   104,   105,   113,    57,    57,    57,    57,
    57,   114,   116,    62,   119,   143,    59,    59,    62,    62,
    59,    59,    59,    59,    59,   145,   148,   151,    62,   152,
   162,   165,    59,    59,    59,    59,    59,   166,   167,    63,
   168,   171,    62,    62,    63,    63,    62,    62,    62,    62,
    62,   179,   180,   181,    63,   187,   200,   202,    62,    62,
    62,    62,    62,   203,   204,    64,   205,   206,    63,    63,
    64,    64,    63,    63,    63,    63,    63,   207,   208,   211,
    64,   212,   215,   230,    63,    63,    63,    63,    63,   nil,
   nil,    65,   nil,   nil,    64,    64,    65,    65,    64,    64,
    64,    64,    64,   nil,   nil,   nil,    65,   nil,   nil,   nil,
    64,    64,    64,    64,    64,   nil,   nil,    71,    71,   nil,
    65,    65,    71,    71,    65,    65,    65,    65,    65,   nil,
   nil,   nil,    71,   nil,   nil,   nil,    65,    65,    65,    65,
    65,   nil,   nil,    72,   nil,   nil,    71,    71,    72,    72,
    71,    71,    71,    71,    71,   nil,   nil,   nil,    72,   nil,
   nil,   nil,    71,    71,    71,    71,    71,   nil,   nil,    73,
   nil,   nil,    72,    72,    73,    73,    72,    72,    72,    72,
    72,   nil,   nil,   nil,    73,   nil,   nil,   nil,    72,    72,
    72,    72,    72,   nil,   nil,    74,   nil,   nil,    73,    73,
    74,    74,    73,    73,    73,    73,    73,   nil,   nil,   nil,
    74,   nil,   nil,   nil,    73,    73,    73,    73,    73,   nil,
   nil,    75,   nil,   nil,    74,    74,    75,    75,    74,    74,
    74,    74,    74,   nil,   nil,   nil,    75,   nil,   nil,   nil,
    74,    74,    74,    74,    74,   nil,   nil,    76,   nil,   nil,
    75,    75,    76,    76,    75,    75,    75,    75,    75,   nil,
   nil,   nil,    76,   nil,   nil,   nil,    75,    75,    75,    75,
    75,   nil,   nil,    83,   nil,   nil,    76,    76,    83,    83,
    76,    76,    76,    76,    76,    76,   nil,   nil,    83,    83,
   nil,   nil,    76,    76,    76,    76,    76,   nil,   nil,   121,
   nil,   nil,    83,    83,   121,   121,    83,    83,    83,    83,
    83,   nil,   nil,   nil,   121,   nil,   nil,   nil,    83,    83,
    83,    83,    83,   nil,   nil,   142,   nil,   nil,   121,   121,
   142,   142,   121,   121,   121,   121,   121,   nil,   nil,   nil,
   142,   nil,   nil,   nil,   121,   121,   121,   121,   121,   nil,
   nil,   144,   nil,   nil,   142,   142,   144,   144,   142,   142,
   142,   142,   142,   nil,   nil,   nil,   144,   144,   nil,   nil,
   142,   142,   142,   142,   142,   nil,   nil,   149,   nil,   nil,
   144,   144,   149,   149,   144,   144,   144,   144,   144,   nil,
   nil,   nil,   149,   149,   nil,   nil,   144,   144,   144,   144,
   144,   nil,   nil,   nil,   nil,   nil,   149,   149,   nil,   nil,
   149,   149,   149,   149,   149,   154,   nil,   nil,   nil,   nil,
   154,   154,   149,   149,   149,   149,   149,   nil,   nil,   nil,
   154,   118,   118,   118,   118,   154,   118,   118,   nil,   nil,
   118,   118,   118,   118,   154,   154,   nil,   nil,   154,   154,
   154,   154,   154,   155,   nil,   nil,   nil,   nil,   155,   155,
   154,   154,   154,   154,   154,   nil,   nil,   nil,   155,   nil,
   nil,   nil,   nil,   155,   nil,   nil,   nil,   nil,   nil,   156,
   nil,   nil,   155,   155,   156,   156,   155,   155,   155,   155,
   155,   nil,   nil,   nil,   156,   nil,   nil,   nil,   155,   155,
   155,   155,   155,   nil,   nil,   157,   nil,   nil,   156,   156,
   157,   157,   156,   156,   156,   156,   156,   nil,   nil,   nil,
   157,   nil,   nil,   nil,   156,   156,   156,   156,   156,   nil,
   nil,   158,   nil,   nil,   157,   157,   158,   158,   157,   157,
   157,   157,   157,   nil,   nil,   nil,   158,   nil,   nil,   nil,
   157,   157,   157,   157,   157,   nil,   nil,   159,   nil,   nil,
   158,   158,   159,   159,   158,   158,   158,   158,   158,   nil,
   nil,   nil,   159,   nil,   nil,   nil,   158,   158,   158,   158,
   158,   nil,   nil,   160,   nil,   nil,   159,   159,   160,   160,
   159,   159,   159,   159,   159,   nil,   nil,   nil,   160,   160,
   nil,   nil,   159,   159,   159,   159,   159,   nil,   nil,   nil,
   nil,   nil,   160,   160,   nil,   nil,   160,   160,   160,   160,
   160,   172,   nil,   nil,   nil,   nil,   172,   172,   160,   160,
   160,   160,   160,   nil,   nil,   nil,   172,   146,   146,   146,
   146,   172,   146,   146,   nil,   nil,   146,   146,   146,   146,
   172,   172,   nil,   nil,   172,   172,   172,   172,   172,   173,
   nil,   nil,   nil,   nil,   173,   173,   172,   172,   172,   172,
   172,   nil,   nil,   nil,   173,   nil,   nil,   nil,   nil,   173,
   nil,   nil,   nil,   nil,   nil,   174,   nil,   nil,   173,   173,
   174,   174,   173,   173,   173,   173,   173,   nil,   nil,   nil,
   174,   nil,   nil,   nil,   173,   173,   173,   173,   173,   nil,
   nil,   175,   nil,   nil,   174,   174,   175,   175,   174,   174,
   174,   174,   174,   nil,   nil,   nil,   175,   nil,   nil,   nil,
   174,   174,   174,   174,   174,   nil,   nil,   176,   nil,   nil,
   175,   175,   176,   176,   175,   175,   175,   175,   175,   nil,
   nil,   nil,   176,   nil,   nil,   nil,   175,   175,   175,   175,
   175,   nil,   nil,   177,   nil,   nil,   176,   176,   177,   177,
   176,   176,   176,   176,   176,   nil,   nil,   nil,   177,   nil,
   nil,   nil,   176,   176,   176,   176,   176,   nil,   nil,   228,
   nil,   nil,   177,   177,   228,   228,   177,   177,   177,   177,
   177,   nil,   nil,   nil,   228,   nil,   nil,   nil,   177,   177,
   177,   177,   177,   nil,   nil,   nil,   nil,   nil,   228,   228,
   nil,   nil,   228,   228,   228,   228,   228,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   228,   228,   228,   228,   228 ]

racc_action_pointer = [
    23,    51,    61,    76,    71,    81,    84,   nil,    -2,   nil,
    88,    87,   nil,     5,   nil,   -11,   -21,    -6,   102,   nil,
   nil,   nil,   nil,   nil,   nil,    87,   nil,   nil,    94,   100,
   101,   103,   104,   114,   nil,   nil,    -7,   100,    72,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -8,   nil,   109,
   111,   118,   nil,    47,   120,   126,   nil,   128,   128,   154,
   nil,   nil,   180,   206,   232,   258,   nil,   nil,    -6,   115,
   135,   284,   310,   336,   362,   388,   414,   126,   nil,   -14,
    93,   nil,   134,   440,   140,   141,   147,   nil,   148,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   154,   nil,
   155,   165,   166,   167,   169,   169,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   160,   167,    24,   156,   nil,   582,   157,
   nil,   466,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    58,   nil,   nil,   nil,   nil,
   nil,   nil,   492,   169,   518,   187,   788,    13,   192,   544,
    49,   194,   147,   -10,   582,   620,   646,   672,   698,   724,
   750,   nil,   192,   nil,   nil,   184,   193,   182,   205,   nil,
   nil,   202,   788,   826,   852,   878,   904,   930,   nil,   194,
   219,   171,    50,   nil,   nil,   nil,   nil,   202,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   208,    -3,   219,   229,   230,   232,   233,   243,   244,   nil,
   nil,   245,   246,   nil,   nil,   247,   nil,    35,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   956,     2,
   209,   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil ]

racc_action_default = [
  -141,  -141,  -141,  -141,  -141,   -21,  -141,    -2,  -141,    -5,
    -7,    -9,   -10,  -133,   -78,   -79,   -82,   -85,  -141,   -87,
   -88,   -89,   -90,   -92,   -93,  -141,   -96,   -97,  -141,  -141,
  -141,  -141,  -141,  -141,  -120,  -121,  -125,  -141,  -141,  -127,
  -131,  -132,  -134,  -135,  -136,  -137,  -138,  -141,   239,   -23,
  -141,   -11,   -13,   -16,   -49,  -141,    -4,  -141,  -141,  -141,
    -8,  -133,  -141,  -141,  -141,  -141,   -86,   -94,  -125,  -141,
  -141,  -141,  -141,  -141,  -141,  -141,  -141,  -123,  -124,  -141,
  -141,  -140,   -25,  -141,  -141,  -141,  -141,   -15,  -141,    -3,
   -91,    -6,   -80,   -81,   -83,   -84,  -129,   -95,  -141,   -99,
  -141,  -141,  -141,  -141,  -141,  -141,  -107,  -108,  -122,  -126,
  -128,  -130,  -139,   -30,  -141,  -141,   -24,   -36,  -141,   -50,
   -52,  -141,   -55,   -56,   -57,   -59,   -60,   -61,   -62,   -75,
   -76,   -77,   -22,   -12,   -14,   -19,   -98,  -100,  -101,  -102,
  -103,  -104,  -141,   -32,  -141,  -141,  -141,  -141,   -77,  -141,
  -141,  -141,  -141,  -141,  -141,  -141,  -141,  -141,  -141,  -141,
  -141,   -54,  -141,   -18,  -106,   -34,  -141,   -31,   -26,   -28,
   -29,  -133,  -141,  -141,  -141,  -141,  -141,  -141,   -58,   -51,
  -141,  -141,  -141,   -20,   -38,   -39,   -44,  -141,   -46,   -47,
   -64,   -48,   -63,   -65,   -66,   -67,   -68,   -53,   -17,    -1,
  -141,  -141,  -141,   -64,   -63,   -65,   -66,   -67,   -68,   -37,
   -43,  -141,   -42,   -45,   -35,   -33,  -110,  -114,  -112,  -113,
   -27,   -70,   -69,   -71,   -72,   -73,   -74,   -40,  -141,  -141,
  -117,  -115,  -116,   -41,  -109,  -111,  -141,  -118,  -119 ]

racc_goto_table = [
    11,    60,    52,    12,    53,    58,   116,   169,   106,   170,
   184,   211,   186,     1,    69,     5,   216,    92,    93,    94,
    95,     9,    49,    82,   113,   143,   165,   199,     7,    51,
   168,   215,   179,   197,   161,    66,   104,   230,   147,   209,
   235,   210,   109,    87,   234,   146,    67,   110,   nil,   nil,
   nil,   nil,   nil,   nil,    58,   nil,    11,   233,   nil,    12,
    97,   nil,   nil,   nil,   220,   nil,   170,   167,    98,   100,
   101,   102,   103,   107,   164,    69,   134,    91,   nil,   nil,
   nil,   133,   nil,    53,   190,   192,   193,   194,   195,   196,
    67,    67,    67,    67,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   203,   204,   205,   206,   207,   208,   nil,   nil,
   nil,   nil,   148,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   163,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   107,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   183,   198,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   212,
   183,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   218,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   218,
   nil,   nil,   nil,   nil,   nil,   212 ]

racc_goto_check = [
    15,    16,    18,    11,    19,    15,    21,    23,    54,    24,
    29,    30,    32,     1,    45,     3,    55,    41,    41,    43,
    43,    13,     4,     5,     6,     7,     8,     9,    10,    17,
    22,    25,    34,    35,    36,    46,    53,    57,    21,    29,
    58,    32,    62,    16,    55,    28,    42,    63,   nil,   nil,
   nil,   nil,   nil,   nil,    15,   nil,    15,    30,   nil,    11,
    16,   nil,   nil,   nil,    23,   nil,    24,    21,    15,    15,
    15,    15,    15,    15,    54,    45,    16,    13,   nil,   nil,
   nil,    18,   nil,    19,    28,    28,    28,    28,    28,    28,
    42,    42,    42,    42,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,    28,    28,    28,    28,    28,   nil,   nil,
   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    11,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,    15 ]

racc_goto_pointer = [
   nil,    13,   nil,    13,    17,   -26,   -58,   -88,  -117,  -138,
    25,     0,   nil,    18,   nil,    -3,   -10,    23,    -4,    -2,
   nil,   -77,  -115,  -138,  -136,  -170,   nil,   nil,   -70,  -141,
  -171,   nil,  -140,   nil,  -117,  -127,   -87,   nil,   nil,   nil,
   nil,   -45,    28,   -45,   nil,    -4,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   -40,   -68,  -185,   nil,  -180,  -190,   nil,
   nil,   nil,   -37,   -32 ]

racc_goto_default = [
   nil,    56,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   117,    55,   nil,    10,   131,    26,   nil,   nil,    27,
   185,   nil,   nil,   nil,    21,   nil,   130,   126,   118,   nil,
   nil,   127,    42,   128,   119,   120,   122,   123,   124,   125,
   129,    14,    15,    16,    17,    18,    19,    20,    22,    23,
    24,    25,    33,   nil,   nil,   nil,   217,   nil,   nil,    34,
    35,    38,   nil,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  8, 55, :_reduce_1,
  2, 56, :_reduce_2,
  3, 65, :_reduce_3,
  1, 66, :_reduce_none,
  1, 64, :_reduce_5,
  3, 67, :_reduce_6,
  1, 67, :_reduce_none,
  2, 68, :_reduce_8,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  2, 57, :_reduce_11,
  3, 71, :_reduce_12,
  1, 71, :_reduce_none,
  3, 72, :_reduce_14,
  2, 72, :_reduce_15,
  1, 72, :_reduce_none,
  5, 72, :_reduce_17,
  4, 72, :_reduce_18,
  3, 72, :_reduce_19,
  1, 74, :_reduce_none,
  0, 58, :_reduce_none,
  3, 58, :_reduce_22,
  0, 59, :_reduce_none,
  2, 59, :_reduce_24,
  0, 60, :_reduce_none,
  3, 60, :_reduce_26,
  3, 76, :_reduce_27,
  1, 76, :_reduce_none,
  1, 77, :_reduce_none,
  0, 61, :_reduce_none,
  2, 61, :_reduce_31,
  0, 62, :_reduce_none,
  3, 62, :_reduce_33,
  0, 63, :_reduce_none,
  2, 63, :_reduce_35,
  1, 80, :_reduce_none,
  4, 81, :_reduce_37,
  3, 81, :_reduce_38,
  1, 83, :_reduce_none,
  3, 83, :_reduce_40,
  3, 84, :_reduce_41,
  1, 84, :_reduce_none,
  4, 85, :_reduce_43,
  3, 85, :_reduce_44,
  4, 87, :_reduce_45,
  3, 87, :_reduce_46,
  3, 87, :_reduce_47,
  3, 87, :_reduce_48,
  1, 73, :_reduce_49,
  1, 75, :_reduce_none,
  3, 75, :_reduce_51,
  1, 88, :_reduce_none,
  3, 88, :_reduce_53,
  2, 89, :_reduce_54,
  1, 89, :_reduce_none,
  1, 90, :_reduce_none,
  1, 91, :_reduce_none,
  3, 91, :_reduce_58,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  3, 93, :_reduce_63,
  3, 93, :_reduce_64,
  3, 93, :_reduce_65,
  3, 93, :_reduce_66,
  3, 93, :_reduce_67,
  3, 93, :_reduce_68,
  5, 93, :_reduce_69,
  5, 93, :_reduce_70,
  5, 93, :_reduce_71,
  5, 93, :_reduce_72,
  5, 93, :_reduce_73,
  5, 93, :_reduce_74,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 94, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  3, 95, :_reduce_80,
  3, 95, :_reduce_81,
  1, 95, :_reduce_none,
  3, 97, :_reduce_83,
  3, 97, :_reduce_84,
  1, 97, :_reduce_none,
  2, 98, :_reduce_86,
  1, 98, :_reduce_none,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  3, 100, :_reduce_91,
  1, 101, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 78, :_reduce_95,
  1, 78, :_reduce_none,
  1, 105, :_reduce_none,
  4, 102, :_reduce_98,
  3, 102, :_reduce_99,
  4, 102, :_reduce_100,
  4, 102, :_reduce_101,
  4, 102, :_reduce_102,
  4, 102, :_reduce_103,
  4, 102, :_reduce_104,
  1, 106, :_reduce_none,
  3, 107, :_reduce_none,
  1, 107, :_reduce_none,
  1, 108, :_reduce_none,
  3, 79, :_reduce_109,
  1, 79, :_reduce_none,
  3, 109, :_reduce_111,
  1, 110, :_reduce_none,
  1, 110, :_reduce_113,
  0, 111, :_reduce_none,
  1, 111, :_reduce_115,
  1, 111, :_reduce_116,
  0, 112, :_reduce_none,
  2, 112, :_reduce_118,
  2, 112, :_reduce_119,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 113, :_reduce_122,
  2, 113, :_reduce_123,
  2, 113, :_reduce_124,
  1, 113, :_reduce_125,
  3, 114, :_reduce_126,
  1, 115, :_reduce_none,
  1, 116, :_reduce_none,
  2, 117, :_reduce_129,
  1, 117, :_reduce_130,
  1, 99, :_reduce_131,
  1, 99, :_reduce_132,
  1, 70, :_reduce_133,
  1, 96, :_reduce_none,
  1, 96, :_reduce_135,
  1, 96, :_reduce_136,
  1, 96, :_reduce_137,
  1, 96, :_reduce_138,
  3, 86, :_reduce_139,
  2, 86, :_reduce_140 ]

racc_reduce_n = 141

racc_shift_n = 239

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :left_paren => 3,
  :right_paren => 4,
  :comma => 5,
  :FROM => 6,
  :AS => 7,
  :identifier => 8,
  :period => 9,
  :USING => 10,
  :SCOPE => 11,
  :WHERE => 12,
  :GROUP => 13,
  :BY => 14,
  :HAVING => 15,
  :ORDER => 16,
  :LIMIT => 17,
  :unsigned_integer => 18,
  :NOT => 19,
  :IN => 20,
  :LIKE => 21,
  :IS => 22,
  :NULL => 23,
  :not_equals_operator => 24,
  :equals_operator => 25,
  :OR => 26,
  :AND => 27,
  :less_than_operator => 28,
  :greater_than_operator => 29,
  :less_than_or_equals_operator => 30,
  :greater_than_or_equals_operator => 31,
  :plus_sign => 32,
  :minus_sign => 33,
  :asterisk => 34,
  :solidus => 35,
  :COUNT => 36,
  :AVG => 37,
  :MAX => 38,
  :MIN => 39,
  :SUM => 40,
  :func_args_list => 41,
  :ASC => 42,
  :DESC => 43,
  :NULLS => 44,
  :FIRST => 45,
  :LAST => 46,
  :E => 47,
  :datetime => 48,
  :date => 49,
  :date_literal => 50,
  :date_literal_with_arg => 51,
  :quote => 52,
  :character_string_literal => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "left_paren",
  "right_paren",
  "comma",
  "FROM",
  "AS",
  "identifier",
  "period",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "not_equals_operator",
  "equals_operator",
  "OR",
  "AND",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "asterisk",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "E",
  "datetime",
  "date",
  "date_literal",
  "date_literal_with_arg",
  "quote",
  "character_string_literal",
  "$start",
  "query_specification",
  "select_clause",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_list",
  "subquery",
  "query_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_references",
  "table_reference",
  "table_name",
  "table_subquery",
  "search_condition",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "row_subquery",
  "in_predicate",
  "row_value_constructor",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "string_literal",
  "null_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "general_set_function",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 5)
  def _reduce_1(val, _values, result)
     result = SOQLParser::Statement::Query.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6], val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 8)
  def _reduce_2(val, _values, result)
     result = SOQLParser::Statement::Select.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_3(val, _values, result)
     result = SOQLParser::Statement::Subquery.new(val[1])
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_5(val, _values, result)
     result = SOQLParser::Statement::SelectList.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_8(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_11(val, _values, result)
     result = SOQLParser::Statement::FromClause.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_12(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_14(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_15(val, _values, result)
     result = SOQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_17(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_18(val, _values, result)
     result = SOQLParser::Statement::As.new(SOQLParser::Statement::Table.new(val[0], val[2]), val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_19(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0], val[2])
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_22(val, _values, result)
     result = SOQLParser::Statement::UsingScope.new(val[2])
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_24(val, _values, result)
     result = SOQLParser::Statement::WhereClause.new(val[1])
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_26(val, _values, result)
     result = SOQLParser::Statement::GroupByClause.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_27(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_31(val, _values, result)
     result = SOQLParser::Statement::HavingClause.new(val[1])
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_33(val, _values, result)
     result = SOQLParser::Statement::OrderBy.new(val[2])
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_35(val, _values, result)
     result = SOQLParser::Statement::LimitClause.new(SOQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_37(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::In.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_38(val, _values, result)
     result = SOQLParser::Statement::In.new(val[0], val[2])
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_40(val, _values, result)
     result = SOQLParser::Statement::InValueList.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_41(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_43(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Like.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_44(val, _values, result)
     result = SOQLParser::Statement::Like.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_45(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_46(val, _values, result)
     result = SOQLParser::Statement::Is.new(val[0], SOQLParser::Statement::Null.new)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_47(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Equals.new(val[0], SOQLParser::Statement::Null.new))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_48(val, _values, result)
     result = SOQLParser::Statement::Equals.new(val[0], SOQLParser::Statement::Null.new)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_49(val, _values, result)
     result = SOQLParser::Statement::Table.new(val[0])
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_51(val, _values, result)
     result = SOQLParser::Statement::Or.new(val[0], val[2])
    result
  end
.,.,

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_53(val, _values, result)
     result = SOQLParser::Statement::And.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 123)
  def _reduce_54(val, _values, result)
     result = SOQLParser::Statement::Not.new(val[1])
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_58(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_63(val, _values, result)
     result = SOQLParser::Statement::Equals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_64(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Equals.new(val[0], val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_65(val, _values, result)
     result = SOQLParser::Statement::Less.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_66(val, _values, result)
     result = SOQLParser::Statement::Greater.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_67(val, _values, result)
     result = SOQLParser::Statement::LessOrEquals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_68(val, _values, result)
     result = SOQLParser::Statement::GreaterOrEquals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_69(val, _values, result)
     result = SOQLParser::Statement::Equals.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 149)
  def _reduce_70(val, _values, result)
     result = SOQLParser::Statement::Not.new(SOQLParser::Statement::Equals.new(val[1], val[3], true))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_71(val, _values, result)
     result = SOQLParser::Statement::Less.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_72(val, _values, result)
     result = SOQLParser::Statement::Greater.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_73(val, _values, result)
     result = SOQLParser::Statement::LessOrEquals.new(val[1], val[3], true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_74(val, _values, result)
     result = SOQLParser::Statement::GreaterOrEquals.new(val[1], val[3], true)
    result
  end
.,.,

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_80(val, _values, result)
     result = SOQLParser::Statement::Add.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_81(val, _values, result)
     result = SOQLParser::Statement::Subtract.new(val[0], val[2])
    result
  end
.,.,

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 172)
  def _reduce_83(val, _values, result)
     result = SOQLParser::Statement::Multiply.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_84(val, _values, result)
     result = SOQLParser::Statement::Divide.new(val[0], val[2])
    result
  end
.,.,

# reduce 85 omitted

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_86(val, _values, result)
     result = val[0].new(val[1])
    result
  end
.,.,

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_91(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_95(val, _values, result)
     result = SOQLParser::Statement::QualifiedColumn.new(val[0], val[2])
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_98(val, _values, result)
     result = SOQLParser::Statement::Count.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_99(val, _values, result)
     result = SOQLParser::Statement::Count.new(nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 203)
  def _reduce_100(val, _values, result)
     result = SOQLParser::Statement::Average.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 204)
  def _reduce_101(val, _values, result)
     result = SOQLParser::Statement::Maximum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_102(val, _values, result)
     result = SOQLParser::Statement::Minimum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_103(val, _values, result)
     result = SOQLParser::Statement::Sum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 207)
  def _reduce_104(val, _values, result)
     result = SOQLParser::Statement::Function.new(val[0], val[2])
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_109(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_111(val, _values, result)
     result = SOQLParser::Statement::OrderColumn.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_113(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

# reduce 114 omitted

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_115(val, _values, result)
     result = SOQLParser::Statement::Ascending.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 234)
  def _reduce_116(val, _values, result)
     result = SOQLParser::Statement::Descending.new
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_118(val, _values, result)
     result = SOQLParser::Statement::NullsFirst.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_119(val, _values, result)
     result = SOQLParser::Statement::NullsLast.new
    result
  end
.,.,

# reduce 120 omitted

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.racc', 247)
  def _reduce_122(val, _values, result)
     result = SOQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 248)
  def _reduce_123(val, _values, result)
     result = SOQLParser::Statement::Float.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_124(val, _values, result)
     result = SOQLParser::Statement::Float.new("0.#{val[1]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_125(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 253)
  def _reduce_126(val, _values, result)
     result = SOQLParser::Statement::ApproximateFloat.new(val[0], val[2])
    result
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_129(val, _values, result)
     result = val[0].new(SOQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_130(val, _values, result)
     result = SOQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 266)
  def _reduce_131(val, _values, result)
     result = SOQLParser::Statement::UnaryPlus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_132(val, _values, result)
     result = SOQLParser::Statement::UnaryMinus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_133(val, _values, result)
     result = SOQLParser::Statement::Column.new(val[0])
    result
  end
.,.,

# reduce 134 omitted

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_135(val, _values, result)
     result = SOQLParser::Statement::DateTime.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_136(val, _values, result)
     result = SOQLParser::Statement::Date.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_137(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_138(val, _values, result)
     result = SOQLParser::Statement::DateLiteral.new(*val[0].split(':'))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 282)
  def _reduce_139(val, _values, result)
     result = SOQLParser::Statement::String.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_140(val, _values, result)
     result = SOQLParser::Statement::String.new('')
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module SOQLParser
