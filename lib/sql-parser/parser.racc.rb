#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 350)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    43,    84,  -130,   241,    84,    94,    28,    94,    70,    68,
    69,   252,    14,    74,  -142,    18,    44,   253,     9,    28,
    67,   134,    67,    65,   -87,    67,    43,     7,    18,    44,
     8,   243,    28,   244,   245,   213,  -130,  -130,  -130,    43,
  -156,    18,    44,  -155,    71,    28,    47,    48,    11,    34,
    36,    37,    38,    39,    18,    44,    49,    12,    52,    47,
    48,    53,    34,    36,    37,    38,    39,    47,    48,    49,
    54,    52,    47,    48,    58,    34,    36,    37,    38,    39,
    63,   106,    49,    67,    52,    47,    48,    43,    34,    36,
    37,    38,    39,    28,    64,    49,    77,    52,    88,    87,
    43,    78,    18,    44,   138,   139,    28,   197,   198,    79,
    80,    81,    82,    43,    83,    18,    44,    85,    86,    28,
    89,   108,   110,    58,    67,   118,    43,   119,    18,    44,
    67,   131,    28,    47,    48,   135,    34,    36,    37,    38,
    39,    18,    44,    49,   136,    52,    47,    48,    98,    34,
    36,    37,    38,    39,   143,   145,    49,   146,    52,    47,
    48,   147,    34,    36,    37,    38,    39,   148,   149,    49,
   150,    52,    47,    48,    43,    34,    36,    37,    38,    39,
    28,    67,    49,   152,    52,   154,   121,    43,   155,    18,
    44,   156,   157,    28,   158,   159,   160,   161,   162,   163,
    43,   166,    18,    44,   167,   168,    28,   145,    58,   174,
   195,   200,   201,    43,   208,    18,    44,   209,   213,    28,
    47,    48,   225,    34,    36,    37,    38,    39,    18,    44,
    49,   228,    52,    47,    48,   232,    34,    36,    37,    38,
    39,   234,   239,    49,   240,    52,    47,    48,   119,    34,
    36,    37,    38,    39,   248,     8,    49,   213,    52,    47,
    48,    43,    34,    36,    37,    38,    39,    28,    67,    49,
   264,    52,   213,   265,    43,   -87,    18,    44,   228,   248,
    28,   269,   271,   272,   273,   239,   275,    43,   277,    18,
    44,    67,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,
    43,   nil,    18,    44,   nil,   nil,    28,    47,    48,   nil,
    34,    36,    37,    38,    39,    18,    44,    49,   nil,    52,
    47,    48,   nil,    34,    36,    37,    38,    39,   128,   nil,
    49,   nil,    52,    47,    48,   nil,    34,    36,    37,    38,
    39,   nil,   nil,    49,   nil,    52,    47,    48,    43,    34,
    36,    37,    38,    39,   175,   nil,    49,   nil,    52,   nil,
   nil,    43,   nil,    18,    44,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,   nil,    43,   nil,    18,    44,   nil,   182,
    28,   nil,   nil,   nil,   nil,   nil,   179,   nil,   nil,    18,
    44,   nil,   nil,   nil,    47,    48,   nil,    34,    36,    37,
    38,    39,   nil,   nil,    49,   nil,    52,    47,    48,   nil,
    34,    36,    37,    38,    39,   nil,   nil,    49,   nil,    52,
    47,    48,    43,    34,    36,    37,    38,    39,   175,   nil,
    49,   nil,    52,     8,   nil,   nil,   nil,    18,    44,    43,
   nil,    99,   nil,   nil,   nil,   175,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   182,    18,    44,   nil,   nil,   nil,   100,
   179,   102,   103,   nil,   104,   105,   205,   206,    47,    48,
   nil,    34,    36,    37,    38,    39,   nil,   179,    49,   nil,
    52,   nil,   nil,   nil,   nil,    47,    48,    43,    34,    36,
    37,    38,    39,    28,    99,    49,   nil,    52,   nil,   nil,
   nil,    97,    18,    44,    43,    98,    99,   nil,   nil,   nil,
   175,   nil,   100,   nil,   102,   103,   nil,   104,   105,    18,
    44,   nil,   nil,   nil,   100,   nil,   102,   103,   nil,   104,
   105,   nil,   nil,    47,    48,   182,    34,    36,    37,    38,
    39,   nil,   179,    49,   nil,    52,   nil,   nil,   nil,   nil,
    47,    48,    43,    34,    36,    37,    38,    39,   175,   nil,
    49,   nil,    52,   nil,   nil,   nil,   nil,    18,    44,    43,
   nil,   nil,   nil,   nil,   nil,   175,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   182,    18,    44,   nil,   nil,   nil,   nil,
   179,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,
   182,    34,    36,    37,    38,    39,   nil,   179,    49,   nil,
    52,   nil,   nil,   nil,   nil,    47,    48,    43,    34,    36,
    37,    38,    39,   246,   nil,    49,   nil,    52,   nil,   nil,
    43,   nil,    18,    44,   nil,   nil,   246,   nil,   nil,   nil,
   nil,   nil,   nil,    43,   nil,    18,    44,   nil,   nil,   246,
   nil,   nil,   nil,   nil,   nil,   nil,    43,   nil,    18,    44,
   nil,   nil,   246,    47,    48,   nil,    34,    36,    37,    38,
    39,    18,    44,    49,   nil,    52,    47,    48,   nil,    34,
    36,    37,    38,    39,   nil,   nil,    49,   nil,    52,    47,
    48,   nil,    34,    36,    37,    38,    39,   nil,   nil,    49,
   nil,    52,    47,    48,    43,    34,    36,    37,    38,    39,
   246,   nil,    49,   nil,    52,   nil,   nil,    43,   nil,    18,
    44,   nil,   nil,   246,   nil,   nil,   nil,   nil,   nil,   nil,
    43,   nil,    18,    44,   nil,   nil,   246,   nil,   nil,   nil,
   nil,   nil,   nil,    43,   nil,    18,    44,   nil,   nil,   246,
    47,    48,   nil,    34,    36,    37,    38,    39,    18,    44,
    49,   nil,    52,    47,    48,   nil,    34,    36,    37,    38,
    39,   nil,   nil,    49,   nil,    52,    47,    48,   nil,    34,
    36,    37,    38,    39,   nil,   nil,    49,   nil,    52,    47,
    48,    43,    34,    36,    37,    38,    39,   175,   nil,    49,
   nil,    52,   nil,   nil,    43,   nil,    18,    44,   nil,   nil,
   246,   nil,   nil,   nil,   nil,   nil,   nil,    43,   nil,    18,
    44,   nil,   182,   246,   nil,   nil,   nil,   nil,   nil,   179,
   nil,   nil,    18,    44,   nil,   nil,   nil,    47,    48,   nil,
    34,    36,    37,    38,    39,   nil,   nil,    49,   nil,    52,
    47,    48,   nil,    34,    36,    37,    38,    39,   nil,   nil,
    49,   nil,    52,    47,    48,    43,    34,    36,    37,    38,
    39,    28,   nil,    49,   nil,    52,     8,   nil,    43,   nil,
    18,    44,   nil,   nil,    28,   nil,   nil,   nil,   nil,     8,
   nil,    43,   nil,    18,    44,   nil,   nil,   246,   nil,   nil,
   nil,   nil,   nil,   nil,    43,   nil,    18,    44,   nil,   nil,
   246,    47,    48,   nil,    34,    36,    37,    38,    39,    18,
    44,    49,   nil,    52,    47,    48,   nil,    34,    36,    37,
    38,    39,   nil,   nil,    49,   nil,    52,    47,    48,   nil,
    34,    36,    37,    38,    39,   nil,   nil,    49,   nil,    52,
    47,    48,   nil,    34,    36,    37,    38,    39,   nil,   nil,
    49,   nil,    52,   214,   215,   nil,   216,   217,   218,   nil,
   nil,   nil,   219,   220,   221,   222,   223,   224 ]

racc_action_check = [
     8,    43,    20,   211,    74,    54,     8,   136,    22,    21,
    21,   218,     8,    23,    18,     8,     8,   218,     1,    23,
    54,    86,   136,    17,    18,    17,    28,     0,    23,    23,
     0,   214,    28,   214,   214,   211,    20,    20,    20,    64,
    43,    28,    28,    74,    22,    64,     8,     8,     5,     8,
     8,     8,     8,     8,    64,    64,     8,     7,     8,    23,
    23,     9,    23,    23,    23,    23,    23,    86,    86,    23,
    11,    23,    28,    28,    12,    28,    28,    28,    28,    28,
    13,    56,    28,    56,    28,    64,    64,    68,    64,    64,
    64,    64,    64,    68,    16,    64,    31,    64,    49,    49,
    69,    34,    68,    68,    92,    92,    69,   166,   166,    36,
    37,    38,    39,    70,    40,    69,    69,    44,    45,    70,
    52,    58,    62,    63,    65,    75,    71,    76,    70,    70,
    77,    84,    71,    68,    68,    87,    68,    68,    68,    68,
    68,    71,    71,    68,    90,    68,    69,    69,    96,    69,
    69,    69,    69,    69,    98,    99,    69,   100,    69,    70,
    70,   101,    70,    70,    70,    70,    70,   103,   104,    70,
   105,    70,    71,    71,    78,    71,    71,    71,    71,    71,
    78,   106,    71,   108,    71,   109,    78,    79,   110,    78,
    78,   121,   122,    79,   123,   124,   125,   126,   127,   128,
    80,   137,    79,    79,   141,   142,    80,   146,   147,   153,
   155,   169,   170,    81,   173,    80,    80,   174,   176,    81,
    78,    78,   179,    78,    78,    78,    78,    78,    81,    81,
    78,   180,    78,    79,    79,   206,    79,    79,    79,    79,
    79,   207,   209,    79,   210,    79,    80,    80,   212,    80,
    80,    80,    80,    80,   216,   225,    80,   231,    80,    81,
    81,    82,    81,    81,    81,    81,    81,    82,   232,    81,
   234,    81,   235,   236,    83,   239,    82,    82,   242,   244,
    83,   247,   252,   261,   262,   265,   266,    97,   270,    83,
    83,   273,   nil,    97,   nil,   nil,   nil,   nil,   nil,   nil,
   143,   nil,    97,    97,   nil,   nil,   143,    82,    82,   nil,
    82,    82,    82,    82,    82,   143,   143,    82,   nil,    82,
    83,    83,   nil,    83,    83,    83,    83,    83,    83,   nil,
    83,   nil,    83,    97,    97,   nil,    97,    97,    97,    97,
    97,   nil,   nil,    97,   nil,    97,   143,   143,   154,   143,
   143,   143,   143,   143,   154,   nil,   143,   nil,   143,   nil,
   nil,   163,   nil,   154,   154,   nil,   nil,   163,   nil,   nil,
   nil,   nil,   nil,   nil,   168,   nil,   163,   163,   nil,   154,
   168,   nil,   nil,   nil,   nil,   nil,   154,   nil,   nil,   168,
   168,   nil,   nil,   nil,   154,   154,   nil,   154,   154,   154,
   154,   154,   nil,   nil,   154,   nil,   154,   163,   163,   nil,
   163,   163,   163,   163,   163,   nil,   nil,   163,   nil,   163,
   168,   168,   175,   168,   168,   168,   168,   168,   175,   nil,
   168,   nil,   168,   175,   nil,   nil,   nil,   175,   175,   182,
   nil,   172,   nil,   nil,   nil,   182,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   175,   182,   182,   nil,   nil,   nil,   172,
   175,   172,   172,   nil,   172,   172,   172,   172,   175,   175,
   nil,   175,   175,   175,   175,   175,   nil,   182,   175,   nil,
   175,   nil,   nil,   nil,   nil,   182,   182,   201,   182,   182,
   182,   182,   182,   201,    55,   182,   nil,   182,   nil,   nil,
   nil,    55,   201,   201,   205,    55,   111,   nil,   nil,   nil,
   205,   nil,    55,   nil,    55,    55,   nil,    55,    55,   205,
   205,   nil,   nil,   nil,   111,   nil,   111,   111,   nil,   111,
   111,   nil,   nil,   201,   201,   205,   201,   201,   201,   201,
   201,   nil,   205,   201,   nil,   201,   nil,   nil,   nil,   nil,
   205,   205,   208,   205,   205,   205,   205,   205,   208,   nil,
   205,   nil,   205,   nil,   nil,   nil,   nil,   208,   208,   213,
   nil,   nil,   nil,   nil,   nil,   213,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   208,   213,   213,   nil,   nil,   nil,   nil,
   208,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   208,   208,
   213,   208,   208,   208,   208,   208,   nil,   213,   208,   nil,
   208,   nil,   nil,   nil,   nil,   213,   213,   215,   213,   213,
   213,   213,   213,   215,   nil,   213,   nil,   213,   nil,   nil,
   217,   nil,   215,   215,   nil,   nil,   217,   nil,   nil,   nil,
   nil,   nil,   nil,   219,   nil,   217,   217,   nil,   nil,   219,
   nil,   nil,   nil,   nil,   nil,   nil,   220,   nil,   219,   219,
   nil,   nil,   220,   215,   215,   nil,   215,   215,   215,   215,
   215,   220,   220,   215,   nil,   215,   217,   217,   nil,   217,
   217,   217,   217,   217,   nil,   nil,   217,   nil,   217,   219,
   219,   nil,   219,   219,   219,   219,   219,   nil,   nil,   219,
   nil,   219,   220,   220,   221,   220,   220,   220,   220,   220,
   221,   nil,   220,   nil,   220,   nil,   nil,   222,   nil,   221,
   221,   nil,   nil,   222,   nil,   nil,   nil,   nil,   nil,   nil,
   223,   nil,   222,   222,   nil,   nil,   223,   nil,   nil,   nil,
   nil,   nil,   nil,   224,   nil,   223,   223,   nil,   nil,   224,
   221,   221,   nil,   221,   221,   221,   221,   221,   224,   224,
   221,   nil,   221,   222,   222,   nil,   222,   222,   222,   222,
   222,   nil,   nil,   222,   nil,   222,   223,   223,   nil,   223,
   223,   223,   223,   223,   nil,   nil,   223,   nil,   223,   224,
   224,   228,   224,   224,   224,   224,   224,   228,   nil,   224,
   nil,   224,   nil,   nil,   243,   nil,   228,   228,   nil,   nil,
   243,   nil,   nil,   nil,   nil,   nil,   nil,   245,   nil,   243,
   243,   nil,   228,   245,   nil,   nil,   nil,   nil,   nil,   228,
   nil,   nil,   245,   245,   nil,   nil,   nil,   228,   228,   nil,
   228,   228,   228,   228,   228,   nil,   nil,   228,   nil,   228,
   243,   243,   nil,   243,   243,   243,   243,   243,   nil,   nil,
   243,   nil,   243,   245,   245,   246,   245,   245,   245,   245,
   245,   246,   nil,   245,   nil,   245,   246,   nil,   248,   nil,
   246,   246,   nil,   nil,   248,   nil,   nil,   nil,   nil,   248,
   nil,   269,   nil,   248,   248,   nil,   nil,   269,   nil,   nil,
   nil,   nil,   nil,   nil,   275,   nil,   269,   269,   nil,   nil,
   275,   246,   246,   nil,   246,   246,   246,   246,   246,   275,
   275,   246,   nil,   246,   248,   248,   nil,   248,   248,   248,
   248,   248,   nil,   nil,   248,   nil,   248,   269,   269,   nil,
   269,   269,   269,   269,   269,   nil,   nil,   269,   nil,   269,
   275,   275,   nil,   275,   275,   275,   275,   275,   nil,   nil,
   275,   nil,   275,   178,   178,   nil,   178,   178,   178,   nil,
   nil,   nil,   178,   178,   178,   178,   178,   178 ]

racc_action_pointer = [
    14,    18,   nil,   nil,   nil,    46,   nil,    43,    -5,    61,
   nil,    67,    54,    61,   nil,   nil,    90,     5,     3,   nil,
   -15,   -42,    -9,     8,   nil,   nil,   nil,   nil,    21,   nil,
   nil,    75,   nil,   nil,    90,   nil,    98,    99,   100,   101,
   103,   nil,   nil,   -20,   112,    58,   nil,   nil,   nil,    37,
   nil,   nil,    56,   nil,     0,   490,    63,   nil,   100,   nil,
   nil,   nil,    92,   103,    34,   104,   nil,   nil,    82,    95,
   108,   121,   nil,   nil,   -17,   120,   115,   110,   169,   182,
   195,   208,   256,   269,   126,   nil,    16,    74,   nil,   nil,
   140,   nil,    98,   nil,   nil,   nil,   133,   282,   143,   135,
   134,   138,   nil,   141,   142,   144,   161,   nil,   163,   153,
   157,   502,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   179,   180,   182,   183,   184,   185,   186,   195,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   193,   nil,   nil,
   nil,   192,   201,   295,   nil,   nil,   187,   188,   nil,   nil,
   nil,   nil,   nil,   176,   343,   190,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   356,   nil,   nil,    98,   nil,   369,   199,
   208,   nil,   437,   180,   214,   417,   174,   nil,   927,   211,
   193,   nil,   434,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   482,   nil,   nil,   nil,   499,   224,   206,   547,   222,
   232,    -9,   236,   564,    -6,   612,   243,   625,   -25,   638,
   651,   699,   712,   725,   738,   239,   nil,   nil,   786,   nil,
   nil,   213,   248,   nil,   265,   228,   269,   nil,   nil,   254,
   nil,   nil,   240,   799,   268,   812,   860,   243,   873,   nil,
   nil,   nil,   240,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   271,   280,   nil,   nil,   265,   248,   nil,   nil,   886,
   276,   nil,   nil,   271,   nil,   899,   nil,   nil,   nil,   nil ]

racc_action_default = [
  -165,  -165,    -1,    -2,    -3,    -5,   -19,  -165,  -165,  -165,
    -4,  -165,  -165,   -27,   -28,   -29,   -31,   -34,  -159,  -114,
  -115,  -118,  -121,  -165,  -123,  -124,  -125,  -126,  -165,  -128,
  -129,  -165,  -132,  -133,  -165,  -135,  -165,  -165,  -165,  -165,
  -165,  -146,  -147,  -151,  -165,  -165,  -153,  -157,  -158,  -165,
  -162,  -163,  -165,   280,  -165,  -165,   -39,   -40,   -87,   -43,
   -44,   -26,   -60,  -165,  -165,  -165,   -33,  -159,  -165,  -165,
  -165,  -165,  -122,  -130,  -151,  -165,  -165,  -165,  -165,  -165,
  -165,  -165,  -165,  -165,  -149,  -150,  -165,  -165,  -161,  -164,
    -6,    -8,   -12,   -10,   -11,   -20,  -165,  -165,  -165,  -165,
  -165,  -165,   -48,   -50,   -52,   -53,  -165,   -38,  -165,   -62,
  -165,   -36,   -30,   -32,  -116,  -117,  -119,  -120,  -155,  -127,
  -131,  -165,  -165,  -165,  -165,  -165,  -165,  -165,  -165,  -144,
  -145,  -148,  -152,  -154,  -156,  -160,  -165,   -15,   -13,   -14,
   -21,  -165,   -24,  -165,   -45,   -87,  -165,  -165,   -49,   -51,
   -54,   -37,   -41,   -64,  -165,  -165,  -134,  -136,  -137,  -138,
  -139,  -140,  -141,  -165,    -7,    -9,  -165,   -22,  -165,  -165,
   -81,   -46,  -165,   -69,  -165,  -165,   -63,   -73,  -165,  -165,
   -90,   -92,  -165,   -95,   -96,   -97,   -99,  -100,  -101,  -102,
  -103,  -104,  -111,  -112,  -113,   -61,  -143,   -16,   -17,   -23,
   -25,  -165,   -47,   -55,   -56,  -165,  -165,   -71,  -165,  -165,
  -165,  -165,  -113,  -165,  -165,  -165,  -165,  -165,  -165,  -165,
  -165,  -165,  -165,  -165,  -165,  -165,   -42,   -86,  -165,   -94,
   -80,   -57,  -165,   -35,  -165,   -70,   -65,   -67,   -68,  -159,
   -18,   -98,   -91,  -165,  -165,  -165,  -165,  -165,  -165,   -77,
   -78,   -83,  -165,   -85,  -105,  -106,  -107,  -108,  -109,  -110,
   -93,  -165,   -59,   -89,   -72,  -165,  -165,   -76,   -82,  -165,
  -165,   -84,   -58,  -165,   -66,  -165,   -75,   -79,   -88,   -74 ]

racc_goto_table = [
    66,    17,    55,   169,    56,    91,   129,   141,    15,   237,
    95,   238,   226,   249,   114,   115,    75,   116,   117,     1,
     2,    76,     3,     4,     5,    10,    90,   137,   165,   176,
    96,    13,    61,    62,   109,   153,   173,    93,   247,   107,
   251,   267,   254,   255,   256,   257,   258,   259,   113,   226,
   211,   140,   207,   111,    73,    56,   233,    17,   227,   202,
   120,   230,   203,   204,   112,   274,   266,   238,   268,   261,
   262,   122,   123,   124,   125,   126,   130,   226,   199,    75,
   231,   236,   242,   235,   260,   229,   196,   164,    72,   151,
   142,   144,   276,   127,   132,   133,   nil,   nil,   279,    73,
    73,    73,    73,   nil,   nil,   nil,   nil,   nil,   270,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   170,   172,   171,    56,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   130,   nil,   nil,   nil,
   nil,   142,   nil,   nil,   nil,   nil,   nil,   nil,   212,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   170,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   263,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    76,
   nil,   170,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   278 ]

racc_goto_check = [
    12,    19,    15,    20,    31,     8,    75,    18,    23,    44,
    16,    45,    13,    50,    61,    61,    65,    63,    63,     1,
     2,    19,     3,     4,     5,     6,     7,    10,    11,    40,
    17,    21,    22,    25,    26,    27,    28,    12,    48,    12,
    48,    50,    48,    48,    48,    48,    48,    48,    12,    13,
    40,    16,    29,    15,    62,    31,    30,    19,    33,    37,
    12,    20,    38,    39,    23,    44,    48,    45,    48,    41,
    42,    19,    19,    19,    19,    19,    19,    13,    18,    65,
    40,    43,    54,    40,    55,    56,    75,     8,    66,    12,
    19,    31,    48,    74,    79,    80,   nil,   nil,    48,    62,
    62,    62,    62,   nil,   nil,   nil,   nil,   nil,    20,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    15,    31,    31,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    12 ]

racc_goto_pointer = [
   nil,    19,    20,    22,    23,    24,    20,   -28,   -49,   nil,
   -65,  -109,   -17,  -167,   nil,   -10,   -45,   -25,   -90,    -7,
  -140,    23,    19,     0,   nil,    20,   -28,   -74,  -117,  -121,
  -151,    -8,   nil,  -121,   nil,   nil,   nil,  -113,  -110,  -109,
  -125,  -163,  -162,  -128,  -200,  -198,   nil,   nil,  -177,   nil,
  -203,   nil,   nil,   nil,  -131,  -144,   -97,   nil,   nil,   nil,
   nil,   -54,    31,   -53,   nil,    -7,    65,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,   -77,   nil,   nil,   nil,     8,
     9,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   210,   nil,   nil,   nil,    92,
   nil,   nil,    32,   177,     6,   nil,   nil,   nil,   nil,   194,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    57,   250,    59,    60,   101,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    26,   193,   187,   178,   188,
   nil,   189,   190,   191,   180,   181,   183,   184,   185,   186,
   192,    19,    20,    21,    22,    23,    24,    25,    27,    29,
    30,    31,    35,    40,   nil,   nil,    41,    42,    45,   nil,
    46,    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 66, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  2, 68, :_reduce_4,
  0, 71, :_reduce_none,
  3, 71, :_reduce_6,
  3, 72, :_reduce_7,
  1, 72, :_reduce_none,
  3, 73, :_reduce_9,
  1, 74, :_reduce_none,
  1, 74, :_reduce_11,
  0, 75, :_reduce_none,
  1, 75, :_reduce_13,
  1, 75, :_reduce_14,
  0, 76, :_reduce_none,
  2, 76, :_reduce_16,
  2, 76, :_reduce_17,
  3, 78, :_reduce_18,
  1, 70, :_reduce_none,
  4, 69, :_reduce_20,
  5, 69, :_reduce_21,
  3, 82, :_reduce_22,
  3, 83, :_reduce_23,
  1, 83, :_reduce_none,
  4, 81, :_reduce_25,
  3, 79, :_reduce_26,
  2, 79, :_reduce_27,
  1, 86, :_reduce_28,
  1, 86, :_reduce_29,
  3, 88, :_reduce_30,
  1, 88, :_reduce_none,
  3, 89, :_reduce_32,
  2, 89, :_reduce_33,
  1, 89, :_reduce_none,
  6, 87, :_reduce_35,
  2, 90, :_reduce_36,
  3, 80, :_reduce_37,
  2, 80, :_reduce_38,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  3, 80, :_reduce_41,
  1, 98, :_reduce_none,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  3, 99, :_reduce_45,
  4, 99, :_reduce_46,
  5, 100, :_reduce_47,
  1, 101, :_reduce_48,
  2, 101, :_reduce_49,
  1, 101, :_reduce_50,
  2, 101, :_reduce_51,
  1, 101, :_reduce_52,
  1, 101, :_reduce_53,
  2, 101, :_reduce_54,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  2, 103, :_reduce_57,
  4, 104, :_reduce_58,
  1, 106, :_reduce_none,
  0, 91, :_reduce_none,
  3, 91, :_reduce_61,
  0, 92, :_reduce_none,
  2, 92, :_reduce_63,
  0, 93, :_reduce_none,
  3, 93, :_reduce_65,
  3, 108, :_reduce_66,
  1, 108, :_reduce_none,
  1, 109, :_reduce_none,
  0, 94, :_reduce_none,
  2, 94, :_reduce_70,
  0, 95, :_reduce_none,
  2, 95, :_reduce_72,
  1, 111, :_reduce_none,
  6, 112, :_reduce_74,
  5, 112, :_reduce_75,
  4, 114, :_reduce_76,
  3, 114, :_reduce_77,
  1, 115, :_reduce_none,
  3, 115, :_reduce_79,
  3, 85, :_reduce_80,
  1, 85, :_reduce_none,
  4, 116, :_reduce_82,
  3, 116, :_reduce_83,
  4, 117, :_reduce_84,
  3, 117, :_reduce_85,
  2, 118, :_reduce_86,
  1, 96, :_reduce_87,
  3, 107, :_reduce_88,
  1, 107, :_reduce_none,
  1, 105, :_reduce_none,
  3, 105, :_reduce_91,
  1, 119, :_reduce_none,
  3, 119, :_reduce_93,
  2, 120, :_reduce_94,
  1, 120, :_reduce_none,
  1, 121, :_reduce_none,
  1, 122, :_reduce_none,
  3, 122, :_reduce_98,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  3, 124, :_reduce_105,
  3, 124, :_reduce_106,
  3, 124, :_reduce_107,
  3, 124, :_reduce_108,
  3, 124, :_reduce_109,
  3, 124, :_reduce_110,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  1, 125, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  3, 126, :_reduce_116,
  3, 126, :_reduce_117,
  1, 126, :_reduce_none,
  3, 128, :_reduce_119,
  3, 128, :_reduce_120,
  1, 128, :_reduce_none,
  2, 129, :_reduce_122,
  1, 129, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  3, 131, :_reduce_127,
  1, 132, :_reduce_none,
  1, 134, :_reduce_none,
  1, 134, :_reduce_none,
  3, 110, :_reduce_131,
  1, 110, :_reduce_none,
  1, 136, :_reduce_none,
  4, 133, :_reduce_134,
  1, 133, :_reduce_none,
  4, 137, :_reduce_136,
  4, 137, :_reduce_137,
  4, 137, :_reduce_138,
  4, 137, :_reduce_139,
  4, 137, :_reduce_140,
  4, 137, :_reduce_141,
  1, 138, :_reduce_none,
  3, 139, :_reduce_none,
  1, 139, :_reduce_none,
  1, 140, :_reduce_none,
  1, 135, :_reduce_none,
  1, 135, :_reduce_none,
  3, 141, :_reduce_148,
  2, 141, :_reduce_149,
  2, 141, :_reduce_150,
  1, 141, :_reduce_151,
  3, 142, :_reduce_152,
  1, 143, :_reduce_none,
  1, 144, :_reduce_none,
  2, 145, :_reduce_155,
  1, 145, :_reduce_156,
  1, 130, :_reduce_157,
  1, 130, :_reduce_158,
  1, 77, :_reduce_159,
  3, 127, :_reduce_160,
  2, 127, :_reduce_161,
  1, 127, :_reduce_none,
  1, 146, :_reduce_none,
  2, 147, :_reduce_164 ]

racc_reduce_n = 165

racc_shift_n = 280

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :NULLS => 8,
  :FIRST => 9,
  :LAST => 10,
  :left_paren => 11,
  :right_paren => 12,
  :INSERT => 13,
  :INTO => 14,
  :VALUES => 15,
  :SELECT => 16,
  :asterisk => 17,
  :AS => 18,
  :FROM => 19,
  :identifier => 20,
  :period => 21,
  :CROSS => 22,
  :JOIN => 23,
  :INNER => 24,
  :LEFT => 25,
  :OUTER => 26,
  :RIGHT => 27,
  :FULL => 28,
  :ON => 29,
  :USING => 30,
  :SCOPE => 31,
  :WHERE => 32,
  :GROUP => 33,
  :HAVING => 34,
  :LIMIT => 35,
  :NOT => 36,
  :BETWEEN => 37,
  :AND => 38,
  :IN => 39,
  :LIKE => 40,
  :IS => 41,
  :NULL => 42,
  :EXISTS => 43,
  :OR => 44,
  :equals_operator => 45,
  :not_equals_operator => 46,
  :less_than_operator => 47,
  :greater_than_operator => 48,
  :less_than_or_equals_operator => 49,
  :greater_than_or_equals_operator => 50,
  :plus_sign => 51,
  :minus_sign => 52,
  :solidus => 53,
  :COUNT => 54,
  :AVG => 55,
  :MAX => 56,
  :MIN => 57,
  :SUM => 58,
  :func_args_list => 59,
  :E => 60,
  :quote => 61,
  :character_string_literal => 62,
  :DATE => 63,
  :date_string => 64 }

racc_nt_base = 65

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "identifier",
  "period",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "HAVING",
  "LIMIT",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "limit_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 21)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::OrderColumn.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Ascending.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Descending.new 
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::NullsFirst.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::NullsLast.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_20(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_23(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_30(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3], val[4], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_47(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::UsingScope.new(val[2]) 
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_66(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'parser.racc', 154)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_80(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'parser.racc', 180)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_84(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_88(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 89 omitted

# reduce 90 omitted

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 92 omitted

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_93(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 208)
  def _reduce_94(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

module_eval(<<'.,.,', 'parser.racc', 216)
  def _reduce_98(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

# reduce 104 omitted

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_107(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 230)
  def _reduce_108(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 231)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_110(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 247)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 118 omitted

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 252)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.racc', 256)
  def _reduce_122(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_127(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 132 omitted

# reduce 133 omitted

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 135 omitted

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 286)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

module_eval(<<'.,.,', 'parser.racc', 307)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 308)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 309)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 153 omitted

# reduce 154 omitted

module_eval(<<'.,.,', 'parser.racc', 322)
  def _reduce_155(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 323)
  def _reduce_156(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 326)
  def _reduce_157(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 327)
  def _reduce_158(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 331)
  def _reduce_159(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 335)
  def _reduce_160(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 336)
  def _reduce_161(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 162 omitted

# reduce 163 omitted

module_eval(<<'.,.,', 'parser.racc', 343)
  def _reduce_164(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
