#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 332)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,   119,    75,    75,    61,   192,    58,    12,    38,    84,
   203,    58,  -122,     3,   115,    85,   204,    87,    88,   -67,
    89,    90,   215,   216,   235,    37,   126,     3,    22,   235,
    41,    42,     4,   123,    12,    38,   194,   164,   195,   196,
     6,    41,    42,    62,    28,    30,    31,    32,    33,  -147,
  -146,    47,    37,     3,    22,    49,    43,    53,    46,    56,
    12,    38,    59,    60,    58,  -110,    79,    78,    41,    42,
    68,    28,    30,    31,    32,    33,    91,    58,    37,   246,
   247,    22,    69,    43,     8,    46,    70,    12,    38,   256,
   257,    71,    72,    73,    41,    42,    74,    28,    30,    31,
    32,    33,  -110,  -110,  -110,    37,    22,    76,    84,    43,
    77,    46,    12,    38,    85,    80,    87,    88,    82,    89,
    90,    41,    42,    83,    28,    30,    31,    32,    33,    93,
    65,    99,   100,    22,    58,   112,    43,   116,    46,    12,
    38,   118,   139,   141,   142,   143,    41,    42,   144,    28,
    30,    31,    32,    33,   145,   146,    58,    37,    22,   148,
   149,    43,   150,    46,    12,    38,   151,   152,   153,   154,
   155,   156,   158,    41,    42,   159,    28,    30,    31,    32,
    33,   164,    37,   176,   179,    22,   141,    53,    43,   185,
    46,    12,    38,   190,   191,   100,   199,     3,    41,    42,
   218,    28,    30,    31,    32,    33,   219,   164,   220,    37,
    22,   -67,   179,    43,   199,    46,    12,    38,   224,   227,
   229,   230,   190,   237,   239,    41,    42,   240,    28,    30,
    31,    32,    33,   164,    37,    58,   244,    22,   250,   251,
    43,   254,    46,    12,    38,    58,   nil,   nil,   nil,   nil,
    41,    42,   nil,    28,    30,    31,    32,    33,   nil,   nil,
   nil,    37,    22,   nil,   nil,    43,   nil,    46,    12,    38,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,
    28,    30,    31,    32,    33,   nil,    37,   nil,   nil,   nil,
    22,   nil,    43,   102,    46,   nil,    12,    38,   nil,   nil,
   nil,   nil,    41,    42,   nil,    28,    30,    31,    32,    33,
   nil,   nil,   nil,   nil,    37,    22,   nil,    43,   nil,    46,
   nil,    12,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    41,    42,   nil,    28,    30,    31,    32,    33,   nil,    37,
   nil,   nil,    22,   nil,   nil,    43,   nil,    46,    12,    38,
   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,    28,    30,
    31,    32,    33,   nil,   nil,   nil,    37,    22,   nil,   nil,
    43,   nil,    46,    12,    38,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    41,    42,   nil,    28,    30,    31,    32,    33,
   nil,    37,   nil,   nil,    22,   nil,   nil,    43,   nil,    46,
    12,    38,   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,
    28,    30,    31,    32,    33,   nil,   nil,   nil,    37,    22,
   nil,   nil,    43,   nil,    46,    12,    38,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    41,    42,   nil,    28,    30,    31,
    32,    33,   nil,    37,   nil,   nil,   119,   nil,   nil,    43,
   nil,    46,    12,    38,   nil,   nil,   nil,   nil,   nil,    41,
    42,   nil,    28,    30,    31,    32,    33,   109,   nil,   nil,
    37,   126,   nil,   119,    43,   nil,    46,   nil,   123,    12,
    38,   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,    28,
    30,    31,    32,    33,   nil,   nil,   nil,    37,   nil,   nil,
    22,    43,   nil,    46,   nil,   123,    12,    38,   nil,   nil,
   nil,   nil,   nil,    41,    42,   nil,    28,    30,    31,    32,
    33,   nil,   nil,   nil,    37,   nil,   119,   nil,    43,   nil,
    46,   nil,    12,    38,   nil,   nil,   nil,   nil,   nil,   nil,
    41,    42,   nil,    28,    30,    31,    32,    33,   nil,   nil,
    37,   126,   nil,   119,   nil,    43,   nil,    46,   123,    12,
    38,   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,    28,
    30,    31,    32,    33,   nil,   nil,   nil,    37,   126,   nil,
   197,    43,   nil,    46,   nil,   123,    12,    38,   nil,   nil,
   nil,   nil,   nil,    41,    42,   nil,    28,    30,    31,    32,
    33,   nil,   nil,   nil,    37,   197,   nil,   nil,    43,   nil,
    46,    12,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    41,    42,   nil,    28,    30,    31,    32,    33,   nil,    37,
   nil,   nil,   197,   nil,   nil,    43,   nil,    46,    12,    38,
   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,    28,    30,
    31,    32,    33,   nil,   nil,   nil,    37,   197,   nil,   nil,
    43,   nil,    46,    12,    38,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    41,    42,   nil,    28,    30,    31,    32,    33,
   nil,    37,   nil,   nil,   197,   nil,   nil,    43,   nil,    46,
    12,    38,   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,
    28,    30,    31,    32,    33,   nil,   nil,   nil,    37,   197,
   nil,   nil,    43,   nil,    46,    12,    38,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    41,    42,   nil,    28,    30,    31,
    32,    33,   nil,    37,   nil,   nil,   197,   nil,   nil,    43,
   nil,    46,    12,    38,   nil,   nil,   nil,   nil,   nil,    41,
    42,   nil,    28,    30,    31,    32,    33,   nil,   nil,   nil,
    37,   197,   nil,   nil,    43,   nil,    46,    12,    38,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,    28,
    30,    31,    32,    33,   nil,    37,   nil,   nil,   119,   nil,
   nil,    43,   nil,    46,    12,    38,   nil,   nil,   nil,   nil,
   nil,    41,    42,   nil,    28,    30,    31,    32,    33,   nil,
   nil,   nil,    37,   126,   nil,   197,    43,   nil,    46,   nil,
   123,    12,    38,   nil,   nil,   nil,   nil,   nil,    41,    42,
   nil,    28,    30,    31,    32,    33,   nil,   nil,   nil,    37,
   197,   nil,   nil,    43,   nil,    46,    12,    38,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,    28,    30,
    31,    32,    33,   nil,    37,   nil,   nil,   119,   nil,   nil,
    43,   nil,    46,    12,    38,   nil,   nil,   nil,   nil,   nil,
    41,    42,   nil,    28,    30,    31,    32,    33,   nil,   nil,
   nil,    37,   126,   nil,   197,    43,   nil,    46,   nil,   123,
    12,    38,   nil,   nil,   nil,   nil,   nil,    41,    42,   nil,
    28,    30,    31,    32,    33,   nil,   nil,   nil,    37,   197,
   nil,   nil,    43,   nil,    46,    12,    38,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    41,    42,   nil,    28,    30,    31,
    32,    33,   nil,    37,   nil,   nil,    22,   nil,   nil,    43,
   nil,    46,    12,    38,   nil,   nil,   nil,   nil,   nil,    41,
    42,   nil,    28,    30,    31,    32,    33,   nil,   165,   166,
    37,   167,   168,   169,    43,   nil,    46,   170,   171,   172,
   173,   174,   175,   nil,   nil,   nil,    41,    42,   nil,    28,
    30,    31,    32,    33,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    43,   nil,    46 ]

racc_action_check = [
   119,   119,    37,    65,    16,   162,   219,   119,   119,   182,
   169,   244,    12,     0,    77,   182,   169,   182,   182,    12,
   182,   182,   182,   182,   219,   119,   119,   197,   197,   244,
    77,    77,     1,   119,   197,   197,   165,   162,   165,   165,
     2,   119,   119,    16,   119,   119,   119,   119,   119,    37,
    65,     4,   197,   199,   199,     5,   119,     6,   119,    10,
   199,   199,    15,    15,    11,    14,    43,    43,   197,   197,
    25,   197,   197,   197,   197,   197,    51,    51,   199,   233,
   233,     3,    28,   197,     3,   197,    30,     3,     3,   254,
   254,    31,    32,    33,   199,   199,    34,   199,   199,   199,
   199,   199,    14,    14,    14,     3,    17,    38,    50,   199,
    39,   199,    17,    17,    50,    46,    50,    50,    48,    50,
    50,     3,     3,    49,     3,     3,     3,     3,     3,    53,
    17,    66,    67,    22,    68,    75,     3,    78,     3,    22,
    22,    81,    83,    84,    85,    86,    17,    17,    88,    17,
    17,    17,    17,    17,    89,    90,    91,    22,    56,    93,
   102,    17,   103,    17,    56,    56,   104,   105,   106,   107,
   108,   109,   117,    22,    22,   118,    22,    22,    22,    22,
    22,   120,    56,   123,   124,    59,   142,   143,    22,   157,
    22,    59,    59,   159,   160,   163,   167,   176,    56,    56,
   184,    56,    56,    56,    56,    56,   185,   186,   187,    59,
    60,   190,   193,    56,   195,    56,    60,    60,   198,   203,
   216,   218,   220,   221,   225,    59,    59,   226,    59,    59,
    59,    59,    59,   228,    60,   229,   231,    61,   241,   242,
    59,   245,    59,    61,    61,   251,   nil,   nil,   nil,   nil,
    60,    60,   nil,    60,    60,    60,    60,    60,   nil,   nil,
   nil,    61,    62,   nil,   nil,    60,   nil,    60,    62,    62,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    61,    61,   nil,
    61,    61,    61,    61,    61,   nil,    62,   nil,   nil,   nil,
    69,   nil,    61,    69,    61,   nil,    69,    69,   nil,   nil,
   nil,   nil,    62,    62,   nil,    62,    62,    62,    62,    62,
   nil,   nil,   nil,   nil,    69,    70,   nil,    62,   nil,    62,
   nil,    70,    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    69,    69,   nil,    69,    69,    69,    69,    69,   nil,    70,
   nil,   nil,    71,   nil,   nil,    69,   nil,    69,    71,    71,
   nil,   nil,   nil,   nil,   nil,    70,    70,   nil,    70,    70,
    70,    70,    70,   nil,   nil,   nil,    71,    72,   nil,   nil,
    70,   nil,    70,    72,    72,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    71,    71,   nil,    71,    71,    71,    71,    71,
   nil,    72,   nil,   nil,    73,   nil,   nil,    71,   nil,    71,
    73,    73,   nil,   nil,   nil,   nil,   nil,    72,    72,   nil,
    72,    72,    72,    72,    72,   nil,   nil,   nil,    73,    74,
   nil,   nil,    72,   nil,    72,    74,    74,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    73,    73,   nil,    73,    73,    73,
    73,    73,   nil,    74,   nil,   nil,    82,   nil,   nil,    73,
   nil,    73,    82,    82,   nil,   nil,   nil,   nil,   nil,    74,
    74,   nil,    74,    74,    74,    74,    74,    74,   nil,   nil,
    82,    82,   nil,   126,    74,   nil,    74,   nil,    82,   126,
   126,   nil,   nil,   nil,   nil,   nil,    82,    82,   nil,    82,
    82,    82,    82,    82,   nil,   nil,   nil,   126,   nil,   nil,
   156,    82,   nil,    82,   nil,   126,   156,   156,   nil,   nil,
   nil,   nil,   nil,   126,   126,   nil,   126,   126,   126,   126,
   126,   nil,   nil,   nil,   156,   nil,   158,   nil,   126,   nil,
   126,   nil,   158,   158,   nil,   nil,   nil,   nil,   nil,   nil,
   156,   156,   nil,   156,   156,   156,   156,   156,   nil,   nil,
   158,   158,   nil,   164,   nil,   156,   nil,   156,   158,   164,
   164,   nil,   nil,   nil,   nil,   nil,   158,   158,   nil,   158,
   158,   158,   158,   158,   nil,   nil,   nil,   164,   164,   nil,
   166,   158,   nil,   158,   nil,   164,   166,   166,   nil,   nil,
   nil,   nil,   nil,   164,   164,   nil,   164,   164,   164,   164,
   164,   nil,   nil,   nil,   166,   168,   nil,   nil,   164,   nil,
   164,   168,   168,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   166,   166,   nil,   166,   166,   166,   166,   166,   nil,   168,
   nil,   nil,   170,   nil,   nil,   166,   nil,   166,   170,   170,
   nil,   nil,   nil,   nil,   nil,   168,   168,   nil,   168,   168,
   168,   168,   168,   nil,   nil,   nil,   170,   171,   nil,   nil,
   168,   nil,   168,   171,   171,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   170,   170,   nil,   170,   170,   170,   170,   170,
   nil,   171,   nil,   nil,   172,   nil,   nil,   170,   nil,   170,
   172,   172,   nil,   nil,   nil,   nil,   nil,   171,   171,   nil,
   171,   171,   171,   171,   171,   nil,   nil,   nil,   172,   173,
   nil,   nil,   171,   nil,   171,   173,   173,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   172,   172,   nil,   172,   172,   172,
   172,   172,   nil,   173,   nil,   nil,   174,   nil,   nil,   172,
   nil,   172,   174,   174,   nil,   nil,   nil,   nil,   nil,   173,
   173,   nil,   173,   173,   173,   173,   173,   nil,   nil,   nil,
   174,   175,   nil,   nil,   173,   nil,   173,   175,   175,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   174,   174,   nil,   174,
   174,   174,   174,   174,   nil,   175,   nil,   nil,   179,   nil,
   nil,   174,   nil,   174,   179,   179,   nil,   nil,   nil,   nil,
   nil,   175,   175,   nil,   175,   175,   175,   175,   175,   nil,
   nil,   nil,   179,   179,   nil,   194,   175,   nil,   175,   nil,
   179,   194,   194,   nil,   nil,   nil,   nil,   nil,   179,   179,
   nil,   179,   179,   179,   179,   179,   nil,   nil,   nil,   194,
   196,   nil,   nil,   179,   nil,   179,   196,   196,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   194,   194,   nil,   194,   194,
   194,   194,   194,   nil,   196,   nil,   nil,   215,   nil,   nil,
   194,   nil,   194,   215,   215,   nil,   nil,   nil,   nil,   nil,
   196,   196,   nil,   196,   196,   196,   196,   196,   nil,   nil,
   nil,   215,   215,   nil,   224,   196,   nil,   196,   nil,   215,
   224,   224,   nil,   nil,   nil,   nil,   nil,   215,   215,   nil,
   215,   215,   215,   215,   215,   nil,   nil,   nil,   224,   237,
   nil,   nil,   215,   nil,   215,   237,   237,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   224,   224,   nil,   224,   224,   224,
   224,   224,   nil,   237,   nil,   nil,   240,   nil,   nil,   224,
   nil,   224,   240,   240,   nil,   nil,   nil,   nil,   nil,   237,
   237,   nil,   237,   237,   237,   237,   237,   nil,   122,   122,
   240,   122,   122,   122,   237,   nil,   237,   122,   122,   122,
   122,   122,   122,   nil,   nil,   nil,   240,   240,   nil,   240,
   240,   240,   240,   240,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   240,   nil,   240 ]

racc_action_pointer = [
    11,    32,    33,    78,    51,    36,    48,   nil,   nil,   nil,
    54,    55,     9,   nil,    59,    19,    -2,   103,   nil,   nil,
   nil,   nil,   130,   nil,   nil,    60,   nil,   nil,    79,   nil,
    83,    88,    89,    90,    93,   nil,   nil,    -8,    80,    53,
   nil,   nil,   nil,     8,   nil,   nil,    54,   nil,    97,   103,
   103,    68,   nil,   119,   nil,   nil,   155,   nil,   nil,   182,
   207,   234,   259,   nil,   nil,    -7,   104,   128,   125,   287,
   312,   339,   364,   391,   416,   108,   nil,   -13,    79,   nil,
   nil,   119,   443,   133,   134,   132,   133,   nil,   133,   139,
   140,   147,   nil,   150,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   156,   158,   162,   163,   164,   165,   166,   166,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   148,   152,    -2,
   145,   nil,   940,   180,   154,   nil,   470,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   177,   178,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   497,   164,   523,   184,
   190,   nil,     1,   191,   550,     7,   577,   193,   602,   -18,
   629,   654,   681,   706,   733,   758,   195,   nil,   nil,   785,
   nil,   nil,     4,   nil,   174,   183,   171,   203,   nil,   nil,
   201,   nil,   nil,   182,   812,   211,   837,    25,   188,    51,
   nil,   nil,   nil,   185,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   864,   217,   nil,   194,    -3,
   213,   193,   nil,   nil,   891,   220,   222,   nil,   197,   226,
   nil,   231,   nil,    27,   nil,   nil,   nil,   916,   nil,   nil,
   943,   234,   234,   nil,     2,   187,   nil,   nil,   nil,   nil,
   nil,   236,   nil,   nil,    34,   nil,   nil,   nil ]

racc_action_default = [
  -156,  -156,  -156,  -156,  -156,   -38,  -156,    -2,    -8,    -9,
   -11,   -13,  -150,   -94,   -95,   -98,  -101,  -156,  -103,  -104,
  -105,  -106,  -156,  -108,  -109,  -156,  -112,  -113,  -156,  -115,
  -156,  -156,  -156,  -156,  -156,  -137,  -138,  -142,  -156,  -156,
  -144,  -148,  -149,  -156,  -153,  -154,  -156,   258,   -40,  -156,
   -14,   -17,   -18,   -67,   -21,   -22,  -156,   -12,  -150,  -156,
  -156,  -156,  -156,  -102,  -110,  -142,  -156,  -156,  -156,  -156,
  -156,  -156,  -156,  -156,  -156,  -140,  -141,  -156,  -156,  -152,
  -155,   -42,  -156,  -156,  -156,  -156,  -156,   -26,   -28,   -30,
   -31,  -156,   -16,  -156,   -10,   -96,   -97,   -99,  -100,  -146,
  -107,  -111,  -156,  -156,  -156,  -156,  -156,  -156,  -156,  -156,
  -124,  -125,  -139,  -143,  -145,  -147,  -151,   -47,  -156,  -156,
   -41,   -53,  -156,  -156,   -70,   -72,  -156,   -75,   -76,   -77,
   -79,   -80,   -81,   -82,   -83,   -84,   -91,   -92,   -93,   -39,
   -23,   -67,  -156,  -156,   -27,   -29,   -32,   -15,   -19,  -114,
  -116,  -117,  -118,  -119,  -120,  -121,  -156,   -49,  -156,  -156,
  -156,    -4,  -156,   -93,  -156,  -156,  -156,  -156,  -156,  -156,
  -156,  -156,  -156,  -156,  -156,  -156,  -156,   -20,   -66,  -156,
   -74,   -24,  -156,  -123,   -51,  -156,   -48,   -43,   -45,   -46,
  -150,    -3,   -78,   -71,  -156,  -156,  -156,  -156,  -156,  -156,
   -57,   -58,   -63,  -156,   -65,   -85,   -86,   -87,   -88,   -89,
   -90,   -73,   -25,   -33,   -34,  -156,  -156,    -1,  -156,  -156,
  -156,  -156,   -56,   -62,  -156,  -156,   -61,   -64,   -35,  -156,
   -52,   -50,  -127,  -131,  -129,  -130,   -44,  -156,   -55,   -59,
  -156,  -156,   -37,   -69,  -156,  -134,  -132,  -133,   -54,   -60,
   -36,  -156,  -126,  -128,  -156,   -68,  -135,  -136 ]

racc_goto_table = [
    57,    11,    50,   110,    51,   120,   177,     9,   198,   200,
   202,   225,   205,   206,   207,   208,   209,   210,   232,    64,
    67,     1,   188,   189,    95,    96,    66,    97,    98,     5,
    48,    81,   117,   157,   184,   217,   221,   222,   223,     7,
    92,   178,   162,   252,   212,   213,   214,   241,   242,   187,
   177,   231,   249,   193,    11,   211,   180,   101,    63,   108,
    94,    64,    64,    64,    64,   245,   238,   103,   104,   105,
   106,   107,   111,   253,   113,   114,   nil,   nil,   177,   248,
   147,   186,   140,   236,   189,   183,    66,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   163,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   228,   182,
   181,    51,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   111,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    67,   nil,   226,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   234,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   243,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   234,   nil,   nil,   nil,   nil,   226,   nil,
   255 ]

racc_goto_check = [
    18,    15,    19,    66,    20,    29,    11,    16,    38,    40,
    38,    41,    38,    38,    38,    38,    38,    38,    67,    53,
    15,     1,    33,    34,    52,    52,    56,    54,    54,     3,
     4,     5,     6,     7,     8,     9,    38,    40,    38,    10,
    18,    22,    29,    67,    26,    27,    28,    30,    31,    32,
    11,    35,    41,    45,    15,    46,    47,    18,    57,    65,
    16,    53,    53,    53,    53,    69,    38,    15,    15,    15,
    15,    15,    15,    70,    74,    75,   nil,   nil,    11,    38,
    18,    29,    20,    33,    34,    66,    56,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,    19,
    20,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,    15,   nil,
    18 ]

racc_goto_pointer = [
   nil,    21,   nil,    27,    25,   -17,   -49,   -84,  -123,  -149,
    36,  -117,   nil,   nil,   nil,    -2,     4,   nil,   -11,    -4,
    -2,   nil,   -82,   nil,   nil,   nil,  -138,  -137,  -136,   -77,
  -182,  -181,  -110,  -137,  -136,  -168,   nil,   nil,  -158,   nil,
  -158,  -188,   nil,   nil,   nil,  -111,  -124,   -70,   nil,   nil,
   nil,   nil,   -35,     2,   -34,   nil,     9,    41,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -15,   -71,  -201,   nil,  -168,
  -172,   nil,   nil,   nil,    -3,    -2,   nil,   nil ]

racc_goto_default = [
   nil,   161,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   121,   160,   nil,   nil,   138,   nil,    10,    26,   nil,
    27,    52,   201,    54,    55,    86,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    20,   nil,   137,   131,   122,   132,
   nil,   nil,   133,   134,   135,   124,   125,   127,   128,   129,
   130,   136,    13,    14,    15,    16,    17,    18,    19,    21,
    23,    24,    25,    29,    34,   nil,   nil,   nil,   233,   nil,
   nil,    35,    36,    39,   nil,    40,    44,    45 ]

racc_reduce_table = [
  0, 0, :racc_error,
  8, 63, :_reduce_1,
  2, 64, :_reduce_2,
  3, 73, :_reduce_3,
  1, 74, :_reduce_none,
  3, 75, :_reduce_5,
  3, 76, :_reduce_6,
  1, 76, :_reduce_none,
  1, 72, :_reduce_8,
  1, 72, :_reduce_9,
  3, 78, :_reduce_10,
  1, 78, :_reduce_none,
  2, 79, :_reduce_12,
  1, 79, :_reduce_none,
  2, 65, :_reduce_14,
  3, 81, :_reduce_15,
  2, 81, :_reduce_16,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  3, 81, :_reduce_19,
  1, 84, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  3, 85, :_reduce_23,
  4, 85, :_reduce_24,
  5, 86, :_reduce_25,
  1, 87, :_reduce_26,
  2, 87, :_reduce_27,
  1, 87, :_reduce_28,
  2, 87, :_reduce_29,
  1, 87, :_reduce_30,
  1, 87, :_reduce_31,
  2, 87, :_reduce_32,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  2, 89, :_reduce_35,
  4, 90, :_reduce_36,
  1, 92, :_reduce_none,
  0, 66, :_reduce_none,
  3, 66, :_reduce_39,
  0, 67, :_reduce_none,
  2, 67, :_reduce_41,
  0, 68, :_reduce_none,
  3, 68, :_reduce_43,
  3, 94, :_reduce_44,
  1, 94, :_reduce_none,
  1, 95, :_reduce_none,
  0, 69, :_reduce_none,
  2, 69, :_reduce_48,
  0, 70, :_reduce_none,
  3, 70, :_reduce_50,
  0, 71, :_reduce_none,
  2, 71, :_reduce_52,
  1, 98, :_reduce_none,
  6, 99, :_reduce_54,
  5, 99, :_reduce_55,
  4, 101, :_reduce_56,
  3, 101, :_reduce_57,
  1, 102, :_reduce_none,
  3, 102, :_reduce_59,
  3, 103, :_reduce_60,
  1, 103, :_reduce_none,
  4, 104, :_reduce_62,
  3, 104, :_reduce_63,
  4, 105, :_reduce_64,
  3, 105, :_reduce_65,
  2, 106, :_reduce_66,
  1, 82, :_reduce_67,
  3, 93, :_reduce_68,
  1, 93, :_reduce_none,
  1, 91, :_reduce_none,
  3, 91, :_reduce_71,
  1, 107, :_reduce_none,
  3, 107, :_reduce_73,
  2, 108, :_reduce_74,
  1, 108, :_reduce_none,
  1, 109, :_reduce_none,
  1, 110, :_reduce_none,
  3, 110, :_reduce_78,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  3, 112, :_reduce_85,
  3, 112, :_reduce_86,
  3, 112, :_reduce_87,
  3, 112, :_reduce_88,
  3, 112, :_reduce_89,
  3, 112, :_reduce_90,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  1, 113, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  3, 114, :_reduce_96,
  3, 114, :_reduce_97,
  1, 114, :_reduce_none,
  3, 116, :_reduce_99,
  3, 116, :_reduce_100,
  1, 116, :_reduce_none,
  2, 117, :_reduce_102,
  1, 117, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  3, 119, :_reduce_107,
  1, 120, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  3, 96, :_reduce_111,
  1, 96, :_reduce_none,
  1, 124, :_reduce_none,
  4, 121, :_reduce_114,
  1, 121, :_reduce_none,
  4, 125, :_reduce_116,
  4, 125, :_reduce_117,
  4, 125, :_reduce_118,
  4, 125, :_reduce_119,
  4, 125, :_reduce_120,
  4, 125, :_reduce_121,
  1, 126, :_reduce_none,
  3, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 128, :_reduce_none,
  3, 97, :_reduce_126,
  1, 97, :_reduce_none,
  3, 129, :_reduce_128,
  1, 130, :_reduce_none,
  1, 130, :_reduce_130,
  0, 131, :_reduce_none,
  1, 131, :_reduce_132,
  1, 131, :_reduce_133,
  0, 132, :_reduce_none,
  2, 132, :_reduce_135,
  2, 132, :_reduce_136,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  3, 133, :_reduce_139,
  2, 133, :_reduce_140,
  2, 133, :_reduce_141,
  1, 133, :_reduce_142,
  3, 134, :_reduce_143,
  1, 135, :_reduce_none,
  1, 136, :_reduce_none,
  2, 137, :_reduce_146,
  1, 137, :_reduce_147,
  1, 118, :_reduce_148,
  1, 118, :_reduce_149,
  1, 80, :_reduce_150,
  3, 115, :_reduce_151,
  2, 115, :_reduce_152,
  1, 115, :_reduce_none,
  1, 138, :_reduce_none,
  2, 139, :_reduce_155 ]

racc_reduce_n = 156

racc_shift_n = 258

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :left_paren => 3,
  :right_paren => 4,
  :comma => 5,
  :asterisk => 6,
  :FROM => 7,
  :AS => 8,
  :identifier => 9,
  :period => 10,
  :CROSS => 11,
  :JOIN => 12,
  :INNER => 13,
  :LEFT => 14,
  :OUTER => 15,
  :RIGHT => 16,
  :FULL => 17,
  :ON => 18,
  :USING => 19,
  :SCOPE => 20,
  :WHERE => 21,
  :GROUP => 22,
  :BY => 23,
  :HAVING => 24,
  :ORDER => 25,
  :LIMIT => 26,
  :unsigned_integer => 27,
  :NOT => 28,
  :BETWEEN => 29,
  :AND => 30,
  :IN => 31,
  :LIKE => 32,
  :IS => 33,
  :NULL => 34,
  :EXISTS => 35,
  :OR => 36,
  :equals_operator => 37,
  :not_equals_operator => 38,
  :less_than_operator => 39,
  :greater_than_operator => 40,
  :less_than_or_equals_operator => 41,
  :greater_than_or_equals_operator => 42,
  :plus_sign => 43,
  :minus_sign => 44,
  :solidus => 45,
  :COUNT => 46,
  :AVG => 47,
  :MAX => 48,
  :MIN => 49,
  :SUM => 50,
  :func_args_list => 51,
  :ASC => 52,
  :DESC => 53,
  :NULLS => 54,
  :FIRST => 55,
  :LAST => 56,
  :E => 57,
  :quote => 58,
  :character_string_literal => 59,
  :DATE => 60,
  :date_string => 61 }

racc_nt_base = 62

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "left_paren",
  "right_paren",
  "comma",
  "asterisk",
  "FROM",
  "AS",
  "identifier",
  "period",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "query_specification",
  "select_clause",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_list",
  "subquery",
  "query_expression",
  "column_list",
  "in_column_list",
  "value_expression",
  "select_sublist",
  "derived_column",
  "column_name",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 5)
  def _reduce_1(val, _values, result)
     result = SQLParser::Statement::Query.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 8)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_10(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_25(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 33 omitted

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::UsingScope.new(val[2]) 
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_44(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_60(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_68(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 69 omitted

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_78(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 189)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 190)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 191)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_96(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 207)
  def _reduce_97(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 211)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 212)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 101 omitted

module_eval(<<'.,.,', 'parser.racc', 216)
  def _reduce_102(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

module_eval(<<'.,.,', 'parser.racc', 223)
  def _reduce_107(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 244)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 247)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 248)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_121(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_126(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::OrderColumn.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Ascending.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Descending.new 
    result
  end
.,.,

# reduce 134 omitted

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::NullsFirst.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 281)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::NullsLast.new 
    result
  end
.,.,

# reduce 137 omitted

# reduce 138 omitted

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 292)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 295)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 144 omitted

# reduce 145 omitted

module_eval(<<'.,.,', 'parser.racc', 304)
  def _reduce_146(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 308)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 309)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 317)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 318)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 153 omitted

# reduce 154 omitted

module_eval(<<'.,.,', 'parser.racc', 325)
  def _reduce_155(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
