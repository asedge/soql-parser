#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 341)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    40,  -125,    60,    74,   212,    84,    25,    84,   114,    11,
   223,  -137,    15,    41,    64,    74,   224,    57,   -82,    57,
    25,   214,     6,   215,   216,     7,    15,    41,    40,    58,
    59,    78,    77,   185,    25,  -125,  -125,  -125,    61,     9,
    15,    41,  -151,    44,    45,    50,    31,    33,    34,    35,
    36,    44,    45,    46,  -150,    49,    51,    44,    45,    54,
    31,    33,    34,    35,    36,   118,   119,    46,    55,    49,
    57,    44,    45,    40,    31,    33,    34,    35,    36,    25,
    67,    46,    68,    49,    69,    15,    41,    40,   123,   130,
    57,   177,   178,    25,    70,    71,    72,    73,    75,    15,
    41,    40,    76,   124,    79,   126,   127,    25,   128,   129,
   235,   236,    86,    15,    41,    90,    44,    45,    98,    31,
    33,    34,    35,    36,    99,    57,    46,   111,    49,   115,
    44,    45,   116,    31,    33,    34,    35,    36,   121,   122,
    46,   132,    49,   133,    44,    45,    40,    31,    33,    34,
    35,    36,    25,   134,    46,   135,    49,   136,    15,    41,
    40,   123,   137,   138,   139,   140,    25,   143,   145,   166,
   168,   169,    15,    41,    40,   170,   124,   171,   126,   127,
    25,   128,   129,   101,   172,   173,    15,    41,    57,    44,
    45,   175,    31,    33,    34,    35,    36,   180,   181,    46,
   185,    49,   197,    44,    45,   200,    31,    33,    34,    35,
    36,   168,    90,    46,   205,    49,   210,    44,    45,    40,
    31,    33,    34,    35,    36,    25,   211,    46,    99,    49,
   219,    15,    41,    40,     6,   237,   185,   238,   -82,    25,
   200,   219,   242,   245,   247,    15,    41,    40,   210,   249,
   251,   252,   185,    25,    57,   258,   259,    57,   nil,    15,
    41,   nil,    44,    45,   nil,    31,    33,    34,    35,    36,
   nil,   nil,    46,   nil,    49,   nil,    44,    45,   nil,    31,
    33,    34,    35,    36,   nil,   nil,    46,   nil,    49,   nil,
    44,    45,    40,    31,    33,    34,    35,    36,    25,   nil,
    46,   nil,    49,   nil,    15,    41,    40,   nil,   nil,   nil,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,    15,    41,
   186,   187,   nil,   188,   189,   190,   nil,   nil,   nil,   191,
   192,   193,   194,   195,   196,    44,    45,   nil,    31,    33,
    34,    35,    36,   nil,   nil,    46,   nil,    49,   nil,    44,
    45,   nil,    31,    33,    34,    35,    36,   108,    40,    46,
   nil,    49,   nil,   nil,   146,   nil,   nil,   nil,   nil,   nil,
    15,    41,    40,   nil,   nil,   nil,   nil,   nil,    25,   nil,
   nil,   nil,   nil,   nil,    15,    41,   153,   nil,   nil,   nil,
   nil,   nil,   nil,   150,   nil,   nil,   nil,    40,   nil,   nil,
   nil,    44,    45,   146,    31,    33,    34,    35,    36,    15,
    41,    46,   nil,    49,   nil,    44,    45,   nil,    31,    33,
    34,    35,    36,    40,   nil,    46,   nil,    49,   nil,   146,
   nil,     6,   150,   nil,   nil,    15,    41,   nil,   nil,   nil,
    44,    45,   nil,    31,    33,    34,    35,    36,   nil,    40,
    46,   153,    49,   nil,   nil,   146,   nil,   nil,   150,   nil,
   nil,    15,    41,   nil,   nil,   nil,    44,    45,   nil,    31,
    33,    34,    35,    36,   nil,    40,    46,   153,    49,   nil,
   nil,   146,   nil,   nil,   150,   nil,   nil,    15,    41,   nil,
   nil,   nil,    44,    45,    40,    31,    33,    34,    35,    36,
   217,   nil,    46,   153,    49,   nil,    15,    41,   nil,   nil,
   150,   nil,   nil,   nil,    40,   nil,   nil,   nil,    44,    45,
   217,    31,    33,    34,    35,    36,    15,    41,    46,   nil,
    49,   nil,   nil,    40,   nil,   nil,   nil,    44,    45,   217,
    31,    33,    34,    35,    36,    15,    41,    46,   nil,    49,
   nil,   nil,   nil,    40,   nil,   nil,   nil,    44,    45,   217,
    31,    33,    34,    35,    36,    15,    41,    46,   nil,    49,
   nil,   nil,    40,   nil,   nil,   nil,    44,    45,   217,    31,
    33,    34,    35,    36,    15,    41,    46,   nil,    49,   nil,
   nil,   nil,    40,   nil,   nil,   nil,    44,    45,   217,    31,
    33,    34,    35,    36,    15,    41,    46,   nil,    49,   nil,
   nil,    40,   nil,   nil,   nil,    44,    45,   217,    31,    33,
    34,    35,    36,    15,    41,    46,   nil,    49,   nil,   nil,
   nil,    40,   nil,   nil,   nil,    44,    45,   217,    31,    33,
    34,    35,    36,    15,    41,    46,   nil,    49,   nil,   nil,
   nil,   nil,   nil,   nil,    44,    45,   nil,    31,    33,    34,
    35,    36,   nil,   nil,    46,   nil,    49,   nil,   nil,   nil,
    40,   nil,   nil,   nil,    44,    45,   146,    31,    33,    34,
    35,    36,    15,    41,    46,   nil,    49,    40,   nil,   nil,
   nil,   nil,   nil,   217,   nil,   nil,   nil,   nil,   153,    15,
    41,   nil,   nil,   nil,   nil,   150,   nil,   nil,   nil,    40,
   nil,   nil,   nil,    44,    45,   217,    31,    33,    34,    35,
    36,    15,    41,    46,   nil,    49,   nil,   nil,   nil,   nil,
    44,    45,   nil,    31,    33,    34,    35,    36,    40,   nil,
    46,   nil,    49,   nil,    25,   nil,     6,   nil,   nil,   nil,
    15,    41,    44,    45,   nil,    31,    33,    34,    35,    36,
    40,   nil,    46,   nil,    49,   nil,    25,   nil,     6,   nil,
   nil,   nil,    15,    41,   nil,   nil,   nil,    40,   nil,   nil,
   nil,    44,    45,   146,    31,    33,    34,    35,    36,    15,
    41,    46,   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    44,    45,   153,    31,    33,    34,    35,
    36,   nil,   150,    46,   nil,    49,    40,   nil,   nil,   nil,
    44,    45,   217,    31,    33,    34,    35,    36,    15,    41,
    46,    40,    49,   nil,   nil,   nil,   nil,   217,   nil,   nil,
   nil,   nil,   nil,    15,    41,    40,   nil,   nil,   nil,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,    15,    41,    44,
    45,   nil,    31,    33,    34,    35,    36,   nil,   nil,    46,
   nil,    49,   nil,   nil,    44,    45,   nil,    31,    33,    34,
    35,    36,   nil,   nil,    46,   nil,    49,   nil,    44,    45,
   nil,    31,    33,    34,    35,    36,   nil,   nil,    46,   nil,
    49 ]

racc_action_check = [
     6,    17,    19,    40,   183,    51,     6,   116,    76,     6,
   190,    15,     6,     6,    20,    64,   190,    51,    15,   116,
    20,   186,     0,   186,   186,     1,    20,    20,    25,    18,
    18,    46,    46,   183,    25,    17,    17,    17,    19,     4,
    25,    25,    40,     6,     6,     7,     6,     6,     6,     6,
     6,    76,    76,     6,    64,     6,     9,    20,    20,    10,
    20,    20,    20,    20,    20,    82,    82,    20,    13,    20,
    14,    25,    25,    55,    25,    25,    25,    25,    25,    55,
    28,    25,    31,    25,    33,    55,    55,    58,   203,    88,
    88,   143,   143,    58,    34,    35,    36,    37,    41,    58,
    58,    59,    42,   203,    49,   203,   203,    59,   203,   203,
   203,   203,    53,    59,    59,    54,    55,    55,    65,    55,
    55,    55,    55,    55,    66,    67,    55,    74,    55,    77,
    58,    58,    80,    58,    58,    58,    58,    58,    85,    86,
    58,    90,    58,   101,    59,    59,    60,    59,    59,    59,
    59,    59,    60,   102,    59,   103,    59,   104,    60,    60,
    61,    87,   105,   106,   107,   108,    61,   117,   120,   122,
   123,   124,    61,    61,    68,   125,    87,   127,    87,    87,
    68,    87,    87,    68,   128,   129,    68,    68,   130,    60,
    60,   132,    60,    60,    60,    60,    60,   144,   145,    60,
   147,    60,   150,    61,    61,   151,    61,    61,    61,    61,
    61,   169,   170,    61,   179,    61,   181,    68,    68,    69,
    68,    68,    68,    68,    68,    69,   182,    68,   184,    68,
   188,    69,    69,    70,   197,   205,   206,   207,   210,    70,
   213,   215,   218,   223,   236,    70,    70,    71,   238,   239,
   243,   244,   246,    71,   247,   253,   254,   259,   nil,    71,
    71,   nil,    69,    69,   nil,    69,    69,    69,    69,    69,
   nil,   nil,    69,   nil,    69,   nil,    70,    70,   nil,    70,
    70,    70,    70,    70,   nil,   nil,    70,   nil,    70,   nil,
    71,    71,    72,    71,    71,    71,    71,    71,    72,   nil,
    71,   nil,    71,   nil,    72,    72,    73,   nil,   nil,   nil,
   nil,   nil,    73,   nil,   nil,   nil,   nil,   nil,    73,    73,
   149,   149,   nil,   149,   149,   149,   nil,   nil,   nil,   149,
   149,   149,   149,   149,   149,    72,    72,   nil,    72,    72,
    72,    72,    72,   nil,   nil,    72,   nil,    72,   nil,    73,
    73,   nil,    73,    73,    73,    73,    73,    73,   121,    73,
   nil,    73,   nil,   nil,   121,   nil,   nil,   nil,   nil,   nil,
   121,   121,   140,   nil,   nil,   nil,   nil,   nil,   140,   nil,
   nil,   nil,   nil,   nil,   140,   140,   121,   nil,   nil,   nil,
   nil,   nil,   nil,   121,   nil,   nil,   nil,   153,   nil,   nil,
   nil,   121,   121,   153,   121,   121,   121,   121,   121,   153,
   153,   121,   nil,   121,   nil,   140,   140,   nil,   140,   140,
   140,   140,   140,   146,   nil,   140,   nil,   140,   nil,   146,
   nil,   146,   153,   nil,   nil,   146,   146,   nil,   nil,   nil,
   153,   153,   nil,   153,   153,   153,   153,   153,   nil,   180,
   153,   146,   153,   nil,   nil,   180,   nil,   nil,   146,   nil,
   nil,   180,   180,   nil,   nil,   nil,   146,   146,   nil,   146,
   146,   146,   146,   146,   nil,   185,   146,   180,   146,   nil,
   nil,   185,   nil,   nil,   180,   nil,   nil,   185,   185,   nil,
   nil,   nil,   180,   180,   187,   180,   180,   180,   180,   180,
   187,   nil,   180,   185,   180,   nil,   187,   187,   nil,   nil,
   185,   nil,   nil,   nil,   189,   nil,   nil,   nil,   185,   185,
   189,   185,   185,   185,   185,   185,   189,   189,   185,   nil,
   185,   nil,   nil,   191,   nil,   nil,   nil,   187,   187,   191,
   187,   187,   187,   187,   187,   191,   191,   187,   nil,   187,
   nil,   nil,   nil,   192,   nil,   nil,   nil,   189,   189,   192,
   189,   189,   189,   189,   189,   192,   192,   189,   nil,   189,
   nil,   nil,   193,   nil,   nil,   nil,   191,   191,   193,   191,
   191,   191,   191,   191,   193,   193,   191,   nil,   191,   nil,
   nil,   nil,   194,   nil,   nil,   nil,   192,   192,   194,   192,
   192,   192,   192,   192,   194,   194,   192,   nil,   192,   nil,
   nil,   195,   nil,   nil,   nil,   193,   193,   195,   193,   193,
   193,   193,   193,   195,   195,   193,   nil,   193,   nil,   nil,
   nil,   196,   nil,   nil,   nil,   194,   194,   196,   194,   194,
   194,   194,   194,   196,   196,   194,   nil,   194,   nil,   nil,
   nil,   nil,   nil,   nil,   195,   195,   nil,   195,   195,   195,
   195,   195,   nil,   nil,   195,   nil,   195,   nil,   nil,   nil,
   200,   nil,   nil,   nil,   196,   196,   200,   196,   196,   196,
   196,   196,   200,   200,   196,   nil,   196,   214,   nil,   nil,
   nil,   nil,   nil,   214,   nil,   nil,   nil,   nil,   200,   214,
   214,   nil,   nil,   nil,   nil,   200,   nil,   nil,   nil,   216,
   nil,   nil,   nil,   200,   200,   216,   200,   200,   200,   200,
   200,   216,   216,   200,   nil,   200,   nil,   nil,   nil,   nil,
   214,   214,   nil,   214,   214,   214,   214,   214,   217,   nil,
   214,   nil,   214,   nil,   217,   nil,   217,   nil,   nil,   nil,
   217,   217,   216,   216,   nil,   216,   216,   216,   216,   216,
   219,   nil,   216,   nil,   216,   nil,   219,   nil,   219,   nil,
   nil,   nil,   219,   219,   nil,   nil,   nil,   235,   nil,   nil,
   nil,   217,   217,   235,   217,   217,   217,   217,   217,   235,
   235,   217,   nil,   217,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   219,   219,   235,   219,   219,   219,   219,
   219,   nil,   235,   219,   nil,   219,   242,   nil,   nil,   nil,
   235,   235,   242,   235,   235,   235,   235,   235,   242,   242,
   235,   249,   235,   nil,   nil,   nil,   nil,   249,   nil,   nil,
   nil,   nil,   nil,   249,   249,   252,   nil,   nil,   nil,   nil,
   nil,   252,   nil,   nil,   nil,   nil,   nil,   252,   252,   242,
   242,   nil,   242,   242,   242,   242,   242,   nil,   nil,   242,
   nil,   242,   nil,   nil,   249,   249,   nil,   249,   249,   249,
   249,   249,   nil,   nil,   249,   nil,   249,   nil,   252,   252,
   nil,   252,   252,   252,   252,   252,   nil,   nil,   252,   nil,
   252 ]

racc_action_pointer = [
     9,    25,   nil,   nil,    37,   nil,    -5,    45,   nil,    53,
    44,   nil,   nil,    64,    53,     0,   nil,   -13,   -19,   -12,
     9,   nil,   nil,   nil,   nil,    23,   nil,   nil,    62,   nil,
   nil,    71,   nil,    73,    83,    84,    85,    86,   nil,   nil,
   -15,    93,    45,   nil,   nil,   nil,   -27,   nil,   nil,    43,
   nil,     0,   nil,    85,    98,    68,   nil,   nil,    82,    96,
   141,   155,   nil,   nil,    -3,   113,   112,   108,   169,   214,
   228,   242,   287,   301,   122,   nil,     3,    71,   nil,   nil,
   128,   nil,    59,   nil,   nil,   109,   111,   157,    73,   nil,
   123,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   131,   141,   143,   145,   150,   151,   152,   161,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   159,   nil,   nil,
   138,   353,   152,   153,   151,   155,   nil,   154,   161,   162,
   171,   nil,   174,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   367,   nil,   nil,    82,   166,   195,   418,   159,   nil,   287,
   191,   170,   nil,   392,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   194,
   195,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   182,
   444,   199,   214,    -8,   216,   470,   -13,   489,   219,   509,
   -23,   528,   548,   567,   587,   606,   626,   221,   nil,   nil,
   665,   nil,   nil,    84,   nil,   230,   195,   233,   nil,   nil,
   220,   nil,   nil,   205,   682,   230,   704,   733,   207,   755,
   nil,   nil,   nil,   204,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   772,   233,   nil,   231,   214,
   nil,   nil,   811,   238,   247,   nil,   211,   237,   nil,   826,
   nil,   nil,   840,   243,   252,   nil,   nil,   nil,   nil,   240,
   nil ]

racc_action_default = [
  -160,  -160,    -1,    -2,    -4,   -18,  -160,  -160,    -3,  -160,
   -23,   -24,   -25,   -27,   -29,  -154,  -109,  -110,  -113,  -116,
  -160,  -118,  -119,  -120,  -121,  -160,  -123,  -124,  -160,  -127,
  -128,  -160,  -130,  -160,  -160,  -160,  -160,  -160,  -141,  -142,
  -146,  -160,  -160,  -148,  -152,  -153,  -160,  -157,  -158,  -160,
   261,  -160,   -22,   -55,  -160,  -160,   -28,  -154,  -160,  -160,
  -160,  -160,  -117,  -125,  -146,  -160,  -160,  -160,  -160,  -160,
  -160,  -160,  -160,  -160,  -144,  -145,  -160,  -160,  -156,  -159,
    -5,    -7,   -11,    -9,   -10,   -57,  -160,   -31,   -34,   -35,
   -82,   -38,   -39,   -26,  -111,  -112,  -114,  -115,  -150,  -122,
  -126,  -160,  -160,  -160,  -160,  -160,  -160,  -160,  -160,  -139,
  -140,  -143,  -147,  -149,  -151,  -155,  -160,   -14,   -12,   -13,
   -59,  -160,  -160,  -160,  -160,  -160,   -43,   -45,   -47,   -48,
  -160,   -33,  -160,  -129,  -131,  -132,  -133,  -134,  -135,  -136,
  -160,    -6,    -8,  -160,   -64,  -160,  -160,   -58,   -68,  -160,
  -160,   -85,   -87,  -160,   -90,   -91,   -92,   -94,   -95,   -96,
   -97,   -98,   -99,  -106,  -107,  -108,   -56,   -40,   -82,  -160,
  -160,   -44,   -46,   -49,   -32,   -36,  -138,   -15,   -16,   -66,
  -160,  -160,  -160,  -160,  -108,  -160,  -160,  -160,  -160,  -160,
  -160,  -160,  -160,  -160,  -160,  -160,  -160,  -160,   -37,   -81,
  -160,   -89,   -41,  -160,   -30,  -160,   -65,   -60,   -62,   -63,
  -154,   -17,   -93,   -86,  -160,  -160,  -160,  -160,  -160,  -160,
   -72,   -73,   -78,  -160,   -80,  -100,  -101,  -102,  -103,  -104,
  -105,   -88,   -42,   -50,   -51,  -160,  -160,   -67,  -160,  -160,
   -71,   -77,  -160,  -160,   -76,   -79,   -52,  -160,   -61,  -160,
   -70,   -74,  -160,  -160,   -54,   -84,   -69,   -75,   -53,  -160,
   -83 ]

racc_goto_table = [
    14,    87,    56,   109,    88,    65,    81,   198,    12,   147,
   243,   220,   208,    94,    95,    96,    97,   209,     1,    66,
     2,     3,     4,   218,     8,   222,    80,   225,   226,   227,
   228,   229,   230,   117,   183,   142,    10,    52,   240,    83,
    53,    63,    85,   257,   120,   198,   144,   179,   204,    14,
   239,   199,   241,   232,   233,   100,   234,    93,   253,   254,
   207,    65,   102,   103,   104,   105,   106,   110,   206,   248,
   176,   141,   198,   167,   209,   213,   131,   231,   250,    63,
    63,    63,    63,   201,    62,   256,   107,   112,   113,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    83,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203,   174,   202,
    88,   nil,   nil,   246,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   110,   nil,   nil,   nil,   nil,   nil,
   184,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    66,   nil,   244,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   255,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   244,   260 ]

racc_goto_check = [
    16,    27,    11,    73,    28,    63,     7,    12,    19,    37,
    48,    47,    41,    59,    59,    61,    61,    42,     1,    16,
     2,     3,     4,    45,     5,    45,     6,    45,    45,    45,
    45,    45,    45,     9,    37,    10,    17,    18,    47,    11,
    21,    60,    22,    48,    23,    12,    24,    25,    26,    16,
    45,    30,    45,    34,    35,    11,    36,    19,    38,    39,
    40,    63,    16,    16,    16,    16,    16,    16,    37,    41,
    73,     7,    12,    28,    42,    52,    11,    53,    45,    60,
    60,    60,    60,    54,    64,    45,    72,    77,    78,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,    11,    28,
    28,   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,    11 ]

racc_goto_pointer = [
   nil,    18,    20,    21,    22,    20,   -25,   -45,   nil,   -49,
   -82,   -12,  -143,   nil,   nil,   nil,    -6,    30,    27,     2,
   nil,    30,   -11,   -41,   -74,   -97,  -131,   -53,   -50,   nil,
   -99,   nil,   nil,   nil,  -150,  -149,  -147,  -112,  -189,  -188,
  -121,  -169,  -164,   nil,   nil,  -164,   nil,  -177,  -209,   nil,
   nil,   nil,  -110,  -123,   -70,   nil,   nil,   nil,   nil,   -45,
    21,   -45,   nil,   -15,    64,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    13,   -70,   nil,   nil,   nil,    11,    12,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   182,   nil,   nil,   nil,    82,   nil,
   nil,    29,   148,     5,   nil,   nil,   165,   nil,   nil,   nil,
    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,    89,
   221,    91,    92,   125,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    23,   164,   158,   149,   159,   nil,   nil,   160,
   161,   162,   151,   152,   154,   155,   156,   157,   163,    16,
    17,    18,    19,    20,    21,    22,    24,    26,    27,    28,
    32,    37,   nil,   nil,    38,    39,    42,   nil,    43,    47,
    48 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 63, :_reduce_none,
  1, 64, :_reduce_none,
  2, 65, :_reduce_3,
  0, 67, :_reduce_none,
  3, 67, :_reduce_5,
  3, 68, :_reduce_6,
  1, 68, :_reduce_none,
  3, 69, :_reduce_8,
  1, 70, :_reduce_none,
  1, 70, :_reduce_10,
  0, 71, :_reduce_none,
  1, 71, :_reduce_12,
  1, 71, :_reduce_13,
  0, 72, :_reduce_none,
  2, 72, :_reduce_15,
  2, 72, :_reduce_16,
  3, 74, :_reduce_17,
  1, 66, :_reduce_none,
  3, 76, :_reduce_19,
  3, 77, :_reduce_20,
  1, 77, :_reduce_none,
  3, 75, :_reduce_22,
  2, 75, :_reduce_23,
  1, 79, :_reduce_24,
  1, 79, :_reduce_25,
  3, 81, :_reduce_26,
  1, 81, :_reduce_none,
  2, 82, :_reduce_28,
  1, 82, :_reduce_none,
  6, 80, :_reduce_30,
  2, 83, :_reduce_31,
  3, 89, :_reduce_32,
  2, 89, :_reduce_33,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  3, 89, :_reduce_36,
  1, 92, :_reduce_none,
  1, 91, :_reduce_none,
  1, 91, :_reduce_none,
  3, 93, :_reduce_40,
  4, 93, :_reduce_41,
  5, 94, :_reduce_42,
  1, 95, :_reduce_43,
  2, 95, :_reduce_44,
  1, 95, :_reduce_45,
  2, 95, :_reduce_46,
  1, 95, :_reduce_47,
  1, 95, :_reduce_48,
  2, 95, :_reduce_49,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  2, 97, :_reduce_52,
  4, 98, :_reduce_53,
  1, 100, :_reduce_none,
  0, 84, :_reduce_none,
  3, 84, :_reduce_56,
  0, 85, :_reduce_none,
  2, 85, :_reduce_58,
  0, 86, :_reduce_none,
  3, 86, :_reduce_60,
  3, 102, :_reduce_61,
  1, 102, :_reduce_none,
  1, 103, :_reduce_none,
  0, 87, :_reduce_none,
  2, 87, :_reduce_65,
  0, 88, :_reduce_none,
  2, 88, :_reduce_67,
  1, 105, :_reduce_none,
  6, 106, :_reduce_69,
  5, 106, :_reduce_70,
  4, 108, :_reduce_71,
  3, 108, :_reduce_72,
  1, 109, :_reduce_none,
  3, 109, :_reduce_74,
  3, 110, :_reduce_75,
  1, 110, :_reduce_none,
  4, 111, :_reduce_77,
  3, 111, :_reduce_78,
  4, 112, :_reduce_79,
  3, 112, :_reduce_80,
  2, 113, :_reduce_81,
  1, 90, :_reduce_82,
  3, 101, :_reduce_83,
  1, 101, :_reduce_none,
  1, 99, :_reduce_none,
  3, 99, :_reduce_86,
  1, 114, :_reduce_none,
  3, 114, :_reduce_88,
  2, 115, :_reduce_89,
  1, 115, :_reduce_none,
  1, 116, :_reduce_none,
  1, 117, :_reduce_none,
  3, 117, :_reduce_93,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  3, 119, :_reduce_100,
  3, 119, :_reduce_101,
  3, 119, :_reduce_102,
  3, 119, :_reduce_103,
  3, 119, :_reduce_104,
  3, 119, :_reduce_105,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  1, 120, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  3, 121, :_reduce_111,
  3, 121, :_reduce_112,
  1, 121, :_reduce_none,
  3, 123, :_reduce_114,
  3, 123, :_reduce_115,
  1, 123, :_reduce_none,
  2, 124, :_reduce_117,
  1, 124, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  3, 126, :_reduce_122,
  1, 127, :_reduce_none,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  3, 104, :_reduce_126,
  1, 104, :_reduce_none,
  1, 131, :_reduce_none,
  4, 128, :_reduce_129,
  1, 128, :_reduce_none,
  4, 132, :_reduce_131,
  4, 132, :_reduce_132,
  4, 132, :_reduce_133,
  4, 132, :_reduce_134,
  4, 132, :_reduce_135,
  4, 132, :_reduce_136,
  1, 133, :_reduce_none,
  3, 134, :_reduce_none,
  1, 134, :_reduce_none,
  1, 135, :_reduce_none,
  1, 130, :_reduce_none,
  1, 130, :_reduce_none,
  3, 136, :_reduce_143,
  2, 136, :_reduce_144,
  2, 136, :_reduce_145,
  1, 136, :_reduce_146,
  3, 137, :_reduce_147,
  1, 138, :_reduce_none,
  1, 139, :_reduce_none,
  2, 140, :_reduce_150,
  1, 140, :_reduce_151,
  1, 125, :_reduce_152,
  1, 125, :_reduce_153,
  1, 73, :_reduce_154,
  3, 122, :_reduce_155,
  2, 122, :_reduce_156,
  1, 122, :_reduce_none,
  1, 141, :_reduce_none,
  2, 142, :_reduce_159 ]

racc_reduce_n = 160

racc_shift_n = 261

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :NULLS => 8,
  :FIRST => 9,
  :LAST => 10,
  :left_paren => 11,
  :right_paren => 12,
  :SELECT => 13,
  :asterisk => 14,
  :FROM => 15,
  :AS => 16,
  :identifier => 17,
  :period => 18,
  :CROSS => 19,
  :JOIN => 20,
  :INNER => 21,
  :LEFT => 22,
  :OUTER => 23,
  :RIGHT => 24,
  :FULL => 25,
  :ON => 26,
  :USING => 27,
  :SCOPE => 28,
  :WHERE => 29,
  :GROUP => 30,
  :HAVING => 31,
  :LIMIT => 32,
  :NOT => 33,
  :BETWEEN => 34,
  :AND => 35,
  :IN => 36,
  :LIKE => 37,
  :IS => 38,
  :NULL => 39,
  :EXISTS => 40,
  :OR => 41,
  :equals_operator => 42,
  :not_equals_operator => 43,
  :less_than_operator => 44,
  :greater_than_operator => 45,
  :less_than_or_equals_operator => 46,
  :greater_than_or_equals_operator => 47,
  :plus_sign => 48,
  :minus_sign => 49,
  :solidus => 50,
  :COUNT => 51,
  :AVG => 52,
  :MAX => 53,
  :MIN => 54,
  :SUM => 55,
  :func_args_list => 56,
  :E => 57,
  :quote => 58,
  :character_string_literal => 59,
  :DATE => 60,
  :date_string => 61 }

racc_nt_base = 62

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "left_paren",
  "right_paren",
  "SELECT",
  "asterisk",
  "FROM",
  "AS",
  "identifier",
  "period",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "HAVING",
  "LIMIT",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "column_list",
  "in_column_list",
  "value_expression",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "limit_clause",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parser.racc', 12)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 20)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 24)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::OrderColumn.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Descending.new 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::NullsFirst.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::NullsLast.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3], val[4], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_42(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 50 omitted

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::UsingScope.new(val[2]) 
    result
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_61(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_75(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 76 omitted

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 172)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_83(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.racc', 196)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

module_eval(<<'.,.,', 'parser.racc', 207)
  def _reduce_93(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 219)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 223)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 237)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 243)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.racc', 247)
  def _reduce_117(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.racc', 254)
  def _reduce_122(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 130 omitted

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

module_eval(<<'.,.,', 'parser.racc', 298)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 299)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 300)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 301)
  def _reduce_146(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 304)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 148 omitted

# reduce 149 omitted

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_150(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 317)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 318)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 322)
  def _reduce_154(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 326)
  def _reduce_155(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 327)
  def _reduce_156(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 157 omitted

# reduce 158 omitted

module_eval(<<'.,.,', 'parser.racc', 334)
  def _reduce_159(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
