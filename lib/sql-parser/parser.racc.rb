#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 288)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,   110,    73,    73,   176,   106,    11,    36,    56,    56,
   -90,   -90,   -90,   -90,  -101,     3,    35,   117,   213,   213,
   -49,    39,    40,     4,   114,   187,     6,   148,     3,    21,
    47,   188,    39,    40,    11,    36,    27,    28,    29,    30,
    31,    49,  -126,  -125,    35,    57,    58,    53,    42,    43,
    44,    45,    46,    59,    60,    54,     3,    21,    77,    76,
    39,    40,    11,    36,    27,    28,    29,    30,    31,    82,
    56,   178,    35,   179,   180,    56,    42,    43,    44,    45,
    46,   165,    56,   221,   222,    21,   228,   229,    39,    40,
    11,    36,    27,    28,    29,    30,    31,    66,    67,    68,
    35,    69,    70,    71,    42,    43,    44,    45,    46,    72,
    74,    75,    79,    21,    80,    81,    39,    40,    11,    36,
    27,    28,    29,    30,    31,    84,    90,    91,    63,    56,
   103,   107,    42,    43,    44,    45,    46,   109,   130,    53,
    56,    21,   133,   134,    39,    40,    11,    36,    27,    28,
    29,    30,    31,   135,   136,   137,    35,   138,   139,   140,
    42,    43,    44,    45,    46,   142,   143,   148,   160,    21,
   163,   169,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   174,   175,    91,    35,   183,    46,     3,    42,    43,
    44,    45,    46,    56,   198,   199,   148,    21,   200,   -49,
    39,    40,    11,    36,    27,    28,    29,    30,    31,   163,
   183,    46,    35,   204,   207,   208,    42,    43,    44,    45,
    46,   174,   215,   217,   218,    21,   219,   227,    39,    40,
    11,    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,
    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,   nil,
   nil,   nil,   nil,    21,   nil,   nil,    39,    40,    11,    36,
    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,
   nil,   nil,    42,    43,    44,    45,    46,   nil,   nil,   nil,
   nil,    21,   nil,   nil,    39,    40,    11,    36,    27,    28,
    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,
    42,    43,    44,    45,    46,   nil,   nil,   nil,   nil,    21,
    94,   nil,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,
    44,    45,    46,   nil,   nil,   nil,   nil,    21,   nil,   nil,
    39,    40,    11,    36,    27,    28,    29,    30,    31,   nil,
   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,
    46,   nil,   nil,   nil,   nil,    21,   nil,   nil,    39,    40,
    11,    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,
    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,   nil,
   nil,   nil,   nil,    21,   nil,   nil,    39,    40,    11,    36,
    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,
   nil,   nil,    42,    43,    44,    45,    46,   nil,   nil,   nil,
   nil,    21,   nil,   nil,    39,    40,    11,    36,    27,    28,
    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,
    42,    43,    44,    45,    46,   nil,   nil,   nil,   nil,    21,
   nil,   nil,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,
    44,    45,    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    40,   nil,   nil,    27,    28,    29,    30,    31,   100,
   nil,   nil,   nil,   nil,   nil,   nil,    42,    43,    44,    45,
    46,   110,   nil,   nil,   nil,   nil,    11,    36,   nil,   149,
   150,   nil,   151,   152,   153,   nil,    35,   117,   154,   155,
   156,   157,   158,   159,   114,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    39,    40,   nil,   nil,    27,    28,    29,    30,
    31,   110,   nil,   nil,   nil,   nil,    11,    36,    42,    43,
    44,    45,    46,   nil,   nil,   nil,    35,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   114,   nil,   nil,   nil,   nil,    21,
   nil,   nil,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,
    44,    45,    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    40,   nil,   nil,    27,    28,    29,    30,    31,   110,
   nil,   nil,   nil,   nil,    11,    36,    42,    43,    44,    45,
    46,   nil,   nil,   nil,    35,   117,   nil,   nil,   nil,   nil,
   nil,   nil,   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    39,    40,   nil,   nil,    27,    28,    29,    30,    31,   110,
   nil,   nil,   nil,   nil,    11,    36,    42,    43,    44,    45,
    46,   nil,   nil,   nil,    35,   117,   nil,   nil,   nil,   nil,
   nil,   nil,   114,   nil,   nil,   nil,   nil,   181,   nil,   nil,
    39,    40,    11,    36,    27,    28,    29,    30,    31,   nil,
   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,
    46,   nil,   nil,   nil,   nil,   181,   nil,   nil,    39,    40,
    11,    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,
    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,   nil,
   nil,   nil,   nil,   181,   nil,   nil,    39,    40,    11,    36,
    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,
   nil,   nil,    42,    43,    44,    45,    46,   nil,   nil,   nil,
   nil,   181,   nil,   nil,    39,    40,    11,    36,    27,    28,
    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,
    42,    43,    44,    45,    46,   nil,   nil,   nil,   nil,   181,
   nil,   nil,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,
    44,    45,    46,   nil,   nil,   nil,   nil,   181,   nil,   nil,
    39,    40,    11,    36,    27,    28,    29,    30,    31,   nil,
   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,
    46,   nil,   nil,   nil,   nil,   181,   nil,   nil,    39,    40,
    11,    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,
    35,   nil,   nil,   nil,    42,    43,    44,    45,    46,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    39,    40,   nil,   nil,
    27,    28,    29,    30,    31,   110,   nil,   nil,   nil,   nil,
    11,    36,    42,    43,    44,    45,    46,   nil,   nil,   nil,
    35,   117,   nil,   nil,   nil,   nil,   nil,   nil,   114,   nil,
   nil,   nil,   nil,   181,   nil,   nil,    39,    40,    11,    36,
    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,
   nil,   nil,    42,    43,    44,    45,    46,   nil,   nil,   nil,
   nil,   181,   nil,   nil,    39,    40,    11,    36,    27,    28,
    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,
    42,    43,    44,    45,    46,   nil,   nil,   nil,   nil,   181,
   nil,   nil,    39,    40,    11,    36,    27,    28,    29,    30,
    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,
    44,    45,    46,   nil,   nil,   nil,   nil,    21,   nil,   nil,
    39,    40,    11,    36,    27,    28,    29,    30,    31,   nil,
   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,    45,
    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,    40,
   nil,   nil,    27,    28,    29,    30,    31,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    42,    43,    44,    45,    46 ]

racc_action_check = [
   110,   110,    35,    63,   146,    75,   110,   110,   199,   219,
    13,    13,    13,    13,    11,     0,   110,   110,   199,   219,
    11,    75,    75,     1,   110,   153,     2,   146,   181,   181,
     4,   153,   110,   110,   181,   181,   110,   110,   110,   110,
   110,     5,    35,    63,   181,    14,    14,     6,   110,   110,
   110,   110,   110,    15,    15,     9,   183,   183,    46,    46,
   181,   181,   183,   183,   181,   181,   181,   181,   181,    52,
    52,   149,   183,   149,   149,    10,   181,   181,   181,   181,
   181,   133,   133,   211,   211,     3,   227,   227,   183,   183,
     3,     3,   183,   183,   183,   183,   183,    24,    27,    28,
     3,    29,    30,    31,   183,   183,   183,   183,   183,    32,
    36,    37,    48,    16,    49,    50,     3,     3,    16,    16,
     3,     3,     3,     3,     3,    53,    64,    65,    16,    66,
    73,    76,     3,     3,     3,     3,     3,    78,    80,    81,
    82,    21,    84,    93,    16,    16,    21,    21,    16,    16,
    16,    16,    16,    95,    96,    97,    21,    98,    99,   100,
    16,    16,    16,    16,    16,   108,   109,   111,   114,    54,
   115,   141,    21,    21,    54,    54,    21,    21,    21,    21,
    21,   143,   144,   147,    54,   151,   152,   160,    21,    21,
    21,    21,    21,   165,   168,   169,   170,    57,   171,   174,
    54,    54,    57,    57,    54,    54,    54,    54,    54,   177,
   179,   180,    57,   182,   187,   198,    54,    54,    54,    54,
    54,   200,   201,   205,   206,    58,   209,   220,    57,    57,
    58,    58,    57,    57,    57,    57,    57,   nil,   nil,   nil,
    58,   nil,   nil,   nil,    57,    57,    57,    57,    57,   nil,
   nil,   nil,   nil,    59,   nil,   nil,    58,    58,    59,    59,
    58,    58,    58,    58,    58,   nil,   nil,   nil,    59,   nil,
   nil,   nil,    58,    58,    58,    58,    58,   nil,   nil,   nil,
   nil,    60,   nil,   nil,    59,    59,    60,    60,    59,    59,
    59,    59,    59,   nil,   nil,   nil,    60,   nil,   nil,   nil,
    59,    59,    59,    59,    59,   nil,   nil,   nil,   nil,    67,
    67,   nil,    60,    60,    67,    67,    60,    60,    60,    60,
    60,   nil,   nil,   nil,    67,   nil,   nil,   nil,    60,    60,
    60,    60,    60,   nil,   nil,   nil,   nil,    68,   nil,   nil,
    67,    67,    68,    68,    67,    67,    67,    67,    67,   nil,
   nil,   nil,    68,   nil,   nil,   nil,    67,    67,    67,    67,
    67,   nil,   nil,   nil,   nil,    69,   nil,   nil,    68,    68,
    69,    69,    68,    68,    68,    68,    68,   nil,   nil,   nil,
    69,   nil,   nil,   nil,    68,    68,    68,    68,    68,   nil,
   nil,   nil,   nil,    70,   nil,   nil,    69,    69,    70,    70,
    69,    69,    69,    69,    69,   nil,   nil,   nil,    70,   nil,
   nil,   nil,    69,    69,    69,    69,    69,   nil,   nil,   nil,
   nil,    71,   nil,   nil,    70,    70,    71,    71,    70,    70,
    70,    70,    70,   nil,   nil,   nil,    71,   nil,   nil,   nil,
    70,    70,    70,    70,    70,   nil,   nil,   nil,   nil,    72,
   nil,   nil,    71,    71,    72,    72,    71,    71,    71,    71,
    71,   nil,   nil,   nil,    72,   nil,   nil,   nil,    71,    71,
    71,    71,    71,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    72,    72,   nil,   nil,    72,    72,    72,    72,    72,    72,
   nil,   nil,   nil,   nil,   nil,   nil,    72,    72,    72,    72,
    72,    79,   nil,   nil,   nil,   nil,    79,    79,   nil,   113,
   113,   nil,   113,   113,   113,   nil,    79,    79,   113,   113,
   113,   113,   113,   113,    79,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    79,    79,   nil,   nil,    79,    79,    79,    79,
    79,   117,   nil,   nil,   nil,   nil,   117,   117,    79,    79,
    79,    79,    79,   nil,   nil,   nil,   117,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   117,   nil,   nil,   nil,   nil,   140,
   nil,   nil,   117,   117,   140,   140,   117,   117,   117,   117,
   117,   nil,   nil,   nil,   140,   nil,   nil,   nil,   117,   117,
   117,   117,   117,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   140,   140,   nil,   nil,   140,   140,   140,   140,   140,   142,
   nil,   nil,   nil,   nil,   142,   142,   140,   140,   140,   140,
   140,   nil,   nil,   nil,   142,   142,   nil,   nil,   nil,   nil,
   nil,   nil,   142,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   142,   142,   nil,   nil,   142,   142,   142,   142,   142,   148,
   nil,   nil,   nil,   nil,   148,   148,   142,   142,   142,   142,
   142,   nil,   nil,   nil,   148,   148,   nil,   nil,   nil,   nil,
   nil,   nil,   148,   nil,   nil,   nil,   nil,   150,   nil,   nil,
   148,   148,   150,   150,   148,   148,   148,   148,   148,   nil,
   nil,   nil,   150,   nil,   nil,   nil,   148,   148,   148,   148,
   148,   nil,   nil,   nil,   nil,   154,   nil,   nil,   150,   150,
   154,   154,   150,   150,   150,   150,   150,   nil,   nil,   nil,
   154,   nil,   nil,   nil,   150,   150,   150,   150,   150,   nil,
   nil,   nil,   nil,   155,   nil,   nil,   154,   154,   155,   155,
   154,   154,   154,   154,   154,   nil,   nil,   nil,   155,   nil,
   nil,   nil,   154,   154,   154,   154,   154,   nil,   nil,   nil,
   nil,   156,   nil,   nil,   155,   155,   156,   156,   155,   155,
   155,   155,   155,   nil,   nil,   nil,   156,   nil,   nil,   nil,
   155,   155,   155,   155,   155,   nil,   nil,   nil,   nil,   157,
   nil,   nil,   156,   156,   157,   157,   156,   156,   156,   156,
   156,   nil,   nil,   nil,   157,   nil,   nil,   nil,   156,   156,
   156,   156,   156,   nil,   nil,   nil,   nil,   158,   nil,   nil,
   157,   157,   158,   158,   157,   157,   157,   157,   157,   nil,
   nil,   nil,   158,   nil,   nil,   nil,   157,   157,   157,   157,
   157,   nil,   nil,   nil,   nil,   159,   nil,   nil,   158,   158,
   159,   159,   158,   158,   158,   158,   158,   nil,   nil,   nil,
   159,   nil,   nil,   nil,   158,   158,   158,   158,   158,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   159,   159,   nil,   nil,
   159,   159,   159,   159,   159,   163,   nil,   nil,   nil,   nil,
   163,   163,   159,   159,   159,   159,   159,   nil,   nil,   nil,
   163,   163,   nil,   nil,   nil,   nil,   nil,   nil,   163,   nil,
   nil,   nil,   nil,   178,   nil,   nil,   163,   163,   178,   178,
   163,   163,   163,   163,   163,   nil,   nil,   nil,   178,   nil,
   nil,   nil,   163,   163,   163,   163,   163,   nil,   nil,   nil,
   nil,   204,   nil,   nil,   178,   178,   204,   204,   178,   178,
   178,   178,   178,   nil,   nil,   nil,   204,   nil,   nil,   nil,
   178,   178,   178,   178,   178,   nil,   nil,   nil,   nil,   215,
   nil,   nil,   204,   204,   215,   215,   204,   204,   204,   204,
   204,   nil,   nil,   nil,   215,   nil,   nil,   nil,   204,   204,
   204,   204,   204,   nil,   nil,   nil,   nil,   218,   nil,   nil,
   215,   215,   218,   218,   215,   215,   215,   215,   215,   nil,
   nil,   nil,   218,   nil,   nil,   nil,   215,   215,   215,   215,
   215,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   218,   218,
   nil,   nil,   218,   218,   218,   218,   218,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   218,   218,   218,   218,   218 ]

racc_action_pointer = [
    13,    23,    20,    82,    30,    31,    39,   nil,   nil,    50,
    67,    11,   nil,   -24,    11,    17,   110,   nil,   nil,   nil,
   nil,   138,   nil,   nil,    88,   nil,   nil,    95,    96,    98,
    99,   100,   106,   nil,   nil,    -7,    92,    62,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   100,   103,
   110,   nil,    62,   116,   166,   nil,   nil,   194,   222,   250,
   278,   nil,   nil,    -6,   108,   123,   121,   306,   334,   362,
   390,   418,   446,   112,   nil,   -13,    77,   nil,   124,   498,
   130,   131,   132,   nil,   134,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   139,   nil,   149,   150,   151,   153,   154,
   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   150,   152,
    -2,   140,   nil,   490,   165,   149,   nil,   538,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    74,   nil,   nil,   nil,   nil,   nil,   nil,
   566,   155,   606,   173,   178,   nil,     0,   179,   646,    51,
   674,   182,   132,     6,   702,   730,   758,   786,   814,   842,
   185,   nil,   nil,   882,   nil,   185,   nil,   nil,   177,   181,
   169,   193,   nil,   nil,   190,   nil,   nil,   188,   910,   207,
   157,    26,   192,    54,   nil,   nil,   nil,   189,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   197,     0,
   213,   201,   nil,   nil,   938,   219,   219,   nil,   nil,   221,
   nil,    39,   nil,   nil,   nil,   966,   nil,   nil,   994,     1,
   181,   nil,   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil ]

racc_action_default = [
  -137,  -137,  -137,  -137,  -137,   -20,  -137,    -2,    -5,    -7,
    -9,  -129,   -74,   -75,   -78,   -81,  -137,   -83,   -84,   -85,
   -86,  -137,   -88,   -89,  -137,   -92,   -93,  -137,  -137,  -137,
  -137,  -137,  -137,  -116,  -117,  -121,  -137,  -137,  -123,  -127,
  -128,  -130,  -131,  -132,  -133,  -134,  -137,   230,   -22,  -137,
   -10,   -12,   -15,   -49,  -137,    -8,  -129,  -137,  -137,  -137,
  -137,   -82,   -90,  -121,  -137,  -137,  -137,  -137,  -137,  -137,
  -137,  -137,  -137,  -119,  -120,  -137,  -137,  -136,   -24,  -137,
  -137,  -137,  -137,   -14,  -137,    -6,   -76,   -77,   -79,   -80,
  -125,   -87,   -91,  -137,   -95,  -137,  -137,  -137,  -137,  -137,
  -137,  -103,  -104,  -118,  -122,  -124,  -126,  -135,   -29,  -137,
  -137,   -23,   -35,  -137,  -137,   -50,   -52,  -137,   -55,   -56,
   -57,   -59,   -60,   -61,   -62,   -63,   -64,   -71,   -72,   -73,
   -21,   -11,   -13,   -18,   -94,   -96,   -97,   -98,   -99,  -100,
  -137,   -31,  -137,  -137,  -137,    -4,  -137,   -73,  -137,  -137,
  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,  -137,
  -137,   -19,   -48,  -137,   -54,  -137,   -17,  -102,   -33,  -137,
   -30,   -25,   -27,   -28,  -129,    -3,   -58,   -51,  -137,  -137,
  -137,  -137,  -137,  -137,   -39,   -40,   -45,  -137,   -47,   -65,
   -66,   -67,   -68,   -69,   -70,   -53,   -16,    -1,  -137,  -137,
  -137,  -137,   -38,   -44,  -137,  -137,   -43,   -46,   -34,   -32,
  -106,  -110,  -108,  -109,   -26,  -137,   -37,   -41,  -137,  -137,
  -113,  -111,  -112,   -36,   -42,  -105,  -107,  -137,  -114,  -115 ]

racc_goto_table = [
    10,    55,    51,    52,   101,   161,   182,     8,   184,   205,
   189,   190,   191,   192,   193,   194,   111,    64,    65,   210,
   186,    86,    87,   172,   173,    88,    89,     1,     5,    48,
    78,   108,   141,   168,   201,   197,   202,     7,    50,   225,
   162,    62,   161,    83,   224,   171,   209,   146,   203,   177,
   195,    10,   164,    61,    99,   220,   226,    92,    85,   104,
   216,   105,   nil,   nil,    93,    95,    96,    97,    98,   102,
   161,   223,   167,   132,   nil,   nil,    64,   131,    52,   170,
   214,   173,    62,    62,    62,    62,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   147,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   166,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   102,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   196,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,   nil,
   206,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   212,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   212,   nil,   nil,   nil,   nil,   206 ]

racc_goto_check = [
    15,    16,    18,    19,    56,    11,    28,    13,    30,    31,
    28,    28,    28,    28,    28,    28,    21,    47,    15,    57,
    33,    43,    43,    23,    24,    45,    45,     1,     3,     4,
     5,     6,     7,     8,    28,     9,    30,    10,    17,    57,
    20,    44,    11,    16,    31,    22,    25,    21,    33,    36,
    37,    15,    38,    48,    55,    59,    60,    16,    13,    64,
    28,    65,   nil,   nil,    15,    15,    15,    15,    15,    15,
    11,    28,    56,    16,   nil,   nil,    47,    18,    19,    21,
    23,    24,    44,    44,    44,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,
    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,   nil,    15 ]

racc_goto_pointer = [
   nil,    27,   nil,    26,    24,   -18,   -47,   -76,  -108,  -133,
    34,  -109,   nil,     4,   nil,    -3,    -9,    32,    -4,    -3,
   -74,   -63,   -98,  -120,  -119,  -153,   nil,   nil,  -144,   nil,
  -143,  -174,   nil,  -132,   nil,   nil,   -99,  -113,   -65,   nil,
   nil,   nil,   nil,   -36,    25,   -34,   nil,     1,    37,   nil,
   nil,   nil,   nil,   nil,   nil,   -18,   -68,  -180,   nil,  -156,
  -164,   nil,   nil,   nil,   -16,   -14 ]

racc_goto_default = [
   nil,   145,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   112,   144,   nil,     9,   129,    25,   nil,   nil,    26,
   185,   nil,   nil,   nil,    19,   nil,   128,   122,   113,   123,
   nil,   nil,   124,    41,   125,   126,   115,   116,   118,   119,
   120,   121,   127,    12,    13,    14,    15,    16,    17,    18,
    20,    22,    23,    24,    32,   nil,   nil,   nil,   211,   nil,
   nil,    33,    34,    37,   nil,    38 ]

racc_reduce_table = [
  0, 0, :racc_error,
  8, 57, :_reduce_1,
  2, 58, :_reduce_2,
  3, 67, :_reduce_3,
  1, 68, :_reduce_none,
  1, 66, :_reduce_5,
  3, 69, :_reduce_6,
  1, 69, :_reduce_none,
  2, 70, :_reduce_8,
  1, 70, :_reduce_none,
  2, 59, :_reduce_10,
  3, 73, :_reduce_11,
  1, 73, :_reduce_none,
  3, 74, :_reduce_13,
  2, 74, :_reduce_14,
  1, 74, :_reduce_none,
  5, 74, :_reduce_16,
  4, 74, :_reduce_17,
  3, 74, :_reduce_18,
  1, 76, :_reduce_none,
  0, 60, :_reduce_none,
  3, 60, :_reduce_21,
  0, 61, :_reduce_none,
  2, 61, :_reduce_23,
  0, 62, :_reduce_none,
  3, 62, :_reduce_25,
  3, 78, :_reduce_26,
  1, 78, :_reduce_none,
  1, 79, :_reduce_none,
  0, 63, :_reduce_none,
  2, 63, :_reduce_30,
  0, 64, :_reduce_none,
  3, 64, :_reduce_32,
  0, 65, :_reduce_none,
  2, 65, :_reduce_34,
  1, 82, :_reduce_none,
  6, 83, :_reduce_36,
  5, 83, :_reduce_37,
  4, 85, :_reduce_38,
  3, 85, :_reduce_39,
  1, 86, :_reduce_none,
  3, 86, :_reduce_41,
  3, 87, :_reduce_42,
  1, 87, :_reduce_none,
  4, 88, :_reduce_44,
  3, 88, :_reduce_45,
  4, 90, :_reduce_46,
  3, 90, :_reduce_47,
  2, 91, :_reduce_48,
  1, 75, :_reduce_49,
  1, 77, :_reduce_none,
  3, 77, :_reduce_51,
  1, 92, :_reduce_none,
  3, 92, :_reduce_53,
  2, 93, :_reduce_54,
  1, 93, :_reduce_none,
  1, 94, :_reduce_none,
  1, 95, :_reduce_none,
  3, 95, :_reduce_58,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  3, 97, :_reduce_65,
  3, 97, :_reduce_66,
  3, 97, :_reduce_67,
  3, 97, :_reduce_68,
  3, 97, :_reduce_69,
  3, 97, :_reduce_70,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 98, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  3, 99, :_reduce_76,
  3, 99, :_reduce_77,
  1, 99, :_reduce_none,
  3, 101, :_reduce_79,
  3, 101, :_reduce_80,
  1, 101, :_reduce_none,
  2, 102, :_reduce_82,
  1, 102, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 104, :_reduce_87,
  1, 105, :_reduce_none,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  3, 80, :_reduce_91,
  1, 80, :_reduce_none,
  1, 109, :_reduce_none,
  4, 106, :_reduce_94,
  3, 106, :_reduce_95,
  4, 106, :_reduce_96,
  4, 106, :_reduce_97,
  4, 106, :_reduce_98,
  4, 106, :_reduce_99,
  4, 106, :_reduce_100,
  1, 110, :_reduce_none,
  3, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 112, :_reduce_none,
  3, 81, :_reduce_105,
  1, 81, :_reduce_none,
  3, 113, :_reduce_107,
  1, 114, :_reduce_none,
  1, 114, :_reduce_109,
  0, 115, :_reduce_none,
  1, 115, :_reduce_111,
  1, 115, :_reduce_112,
  0, 116, :_reduce_none,
  2, 116, :_reduce_114,
  2, 116, :_reduce_115,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  3, 117, :_reduce_118,
  2, 117, :_reduce_119,
  2, 117, :_reduce_120,
  1, 117, :_reduce_121,
  3, 118, :_reduce_122,
  1, 119, :_reduce_none,
  1, 120, :_reduce_none,
  2, 121, :_reduce_125,
  1, 121, :_reduce_126,
  1, 103, :_reduce_127,
  1, 103, :_reduce_128,
  1, 72, :_reduce_129,
  1, 100, :_reduce_none,
  1, 100, :_reduce_131,
  1, 100, :_reduce_132,
  1, 100, :_reduce_133,
  1, 100, :_reduce_134,
  3, 89, :_reduce_135,
  2, 89, :_reduce_136 ]

racc_reduce_n = 137

racc_shift_n = 230

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :left_paren => 3,
  :right_paren => 4,
  :comma => 5,
  :FROM => 6,
  :AS => 7,
  :identifier => 8,
  :period => 9,
  :USING => 10,
  :SCOPE => 11,
  :WHERE => 12,
  :GROUP => 13,
  :BY => 14,
  :HAVING => 15,
  :ORDER => 16,
  :LIMIT => 17,
  :unsigned_integer => 18,
  :NOT => 19,
  :BETWEEN => 20,
  :AND => 21,
  :IN => 22,
  :LIKE => 23,
  :IS => 24,
  :NULL => 25,
  :EXISTS => 26,
  :OR => 27,
  :equals_operator => 28,
  :not_equals_operator => 29,
  :less_than_operator => 30,
  :greater_than_operator => 31,
  :less_than_or_equals_operator => 32,
  :greater_than_or_equals_operator => 33,
  :plus_sign => 34,
  :minus_sign => 35,
  :asterisk => 36,
  :solidus => 37,
  :COUNT => 38,
  :AVG => 39,
  :MAX => 40,
  :MIN => 41,
  :SUM => 42,
  :func_args_list => 43,
  :ASC => 44,
  :DESC => 45,
  :NULLS => 46,
  :FIRST => 47,
  :LAST => 48,
  :E => 49,
  :datetime => 50,
  :date => 51,
  :date_literal => 52,
  :date_literal_with_arg => 53,
  :quote => 54,
  :character_string_literal => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "left_paren",
  "right_paren",
  "comma",
  "FROM",
  "AS",
  "identifier",
  "period",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "asterisk",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "E",
  "datetime",
  "date",
  "date_literal",
  "date_literal_with_arg",
  "quote",
  "character_string_literal",
  "$start",
  "query_specification",
  "select_clause",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_list",
  "subquery",
  "query_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_references",
  "table_reference",
  "table_name",
  "table_subquery",
  "search_condition",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "string_literal",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "general_set_function",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 5)
  def _reduce_1(val, _values, result)
     result = SQLParser::Statement::Query.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 8)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_11(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::As.new(SQLParser::Statement::Table.new(val[0], val[2]), val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::As.new(SQLParser::Statement::Table.new(val[0], val[2]), val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::UsingScope.new(val[2]) 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_26(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_42(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 127)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_58(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.racc', 146)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 149)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_82(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_87(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_94(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_95(val, _values, result)
     result = SQLParser::Statement::Count.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_96(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_97(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 203)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 204)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

# reduce 104 omitted

module_eval(<<'.,.,', 'parser.racc', 219)
  def _reduce_105(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'parser.racc', 223)
  def _reduce_107(val, _values, result)
     result = SQLParser::Statement::OrderColumn.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 231)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Ascending.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Descending.new 
    result
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 236)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::NullsFirst.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 237)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::NullsLast.new 
    result
  end
.,.,

# reduce 116 omitted

# reduce 117 omitted

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 247)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 248)
  def _reduce_121(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_122(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.racc', 260)
  def _reduce_125(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 261)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 265)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

# reduce 130 omitted

module_eval(<<'.,.,', 'parser.racc', 274)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::DateTime.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::DateLiteral.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::DateLiteral.new(*val[0].split(':')) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 281)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
