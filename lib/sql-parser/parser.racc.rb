#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 280)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,   106,    70,    70,   169,   102,    11,    36,    53,   -97,
    54,    55,     3,    53,     4,   -45,    35,   113,   205,     3,
    21,    39,    40,   205,   110,    11,    36,   143,   180,    56,
    57,     6,    39,    40,   181,    35,    27,    28,    29,    30,
    31,    45,  -122,  -121,   -86,   -86,   -86,   -86,    42,    43,
    44,    39,    40,    74,    73,    27,    28,    29,    30,    31,
   171,    47,   172,   173,     3,    21,    50,    42,    43,    44,
    11,    36,    78,    53,   213,   214,   220,   221,    51,    53,
    35,    63,    64,    65,    21,    66,    67,    68,    69,    11,
    36,    71,    72,    76,    77,    80,    39,    40,    86,    35,
    27,    28,    29,    30,    31,    87,    53,    99,   103,   105,
   126,    53,    42,    43,    44,    39,    40,   128,   129,    27,
    28,    29,    30,    31,    21,   130,   131,   132,   133,    11,
    36,    42,    43,    44,   134,   135,   137,   138,   143,    60,
   155,   158,   162,    21,   167,   168,    87,   176,    11,    36,
    44,     3,   190,   191,   143,    39,    40,   192,    35,    27,
    28,    29,    30,    31,   -45,   158,   176,    44,   196,   199,
   200,    42,    43,    44,    39,    40,   167,   207,    27,    28,
    29,    30,    31,    21,   209,   210,   211,   219,    11,    36,
    42,    43,    44,   nil,   nil,   nil,   nil,   nil,    35,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,    11,    36,   nil,
   nil,   nil,   nil,   nil,    39,    40,   nil,    35,    27,    28,
    29,    30,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    42,    43,    44,    39,    40,   nil,   nil,    27,    28,    29,
    30,    31,    21,   nil,   nil,   nil,   nil,    11,    36,    42,
    43,    44,   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil,
   nil,    21,   nil,   nil,   nil,   nil,    11,    36,   nil,   nil,
   nil,   nil,   nil,    39,    40,   nil,    35,    27,    28,    29,
    30,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,
    43,    44,    39,    40,   nil,   nil,    27,    28,    29,    30,
    31,    21,   nil,   nil,   nil,   nil,    11,    36,    42,    43,
    44,   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil,   nil,
    21,    90,   nil,   nil,   nil,    11,    36,   nil,   nil,   nil,
   nil,   nil,    39,    40,   nil,    35,    27,    28,    29,    30,
    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,    43,
    44,    39,    40,   nil,   nil,    27,    28,    29,    30,    31,
    21,   nil,   nil,   nil,   nil,    11,    36,    42,    43,    44,
   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,    11,    36,   nil,   nil,   nil,   nil,
   nil,    39,    40,   nil,    35,    27,    28,    29,    30,    31,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,    43,    44,
    39,    40,   nil,   nil,    27,    28,    29,    30,    31,    21,
   nil,   nil,   nil,   nil,    11,    36,    42,    43,    44,   nil,
   nil,   nil,   nil,   nil,    35,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,    11,    36,   nil,   nil,   nil,   nil,   nil,
    39,    40,   nil,    35,    27,    28,    29,    30,    31,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    42,    43,    44,    39,
    40,   nil,   nil,    27,    28,    29,    30,    31,    21,   nil,
   nil,   nil,   nil,    11,    36,    42,    43,    44,   nil,   nil,
   nil,   144,   145,    35,   146,   147,   148,   nil,   nil,   nil,
   149,   150,   151,   152,   153,   154,   106,   nil,   nil,    39,
    40,    11,    36,    27,    28,    29,    30,    31,    96,   nil,
   nil,    35,   113,   nil,   nil,    42,    43,    44,   nil,   110,
   nil,   nil,   nil,   nil,   106,   nil,   nil,    39,    40,    11,
    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,
   nil,   nil,   nil,    42,    43,    44,   nil,   110,   nil,   nil,
   nil,   nil,    21,   nil,   nil,    39,    40,    11,    36,    27,
    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,
   nil,    42,    43,    44,   nil,   nil,   nil,   nil,   nil,   nil,
   106,   nil,   nil,    39,    40,    11,    36,    27,    28,    29,
    30,    31,   nil,   nil,   nil,    35,   113,   nil,   nil,    42,
    43,    44,   nil,   110,   nil,   nil,   nil,   nil,   106,   nil,
   nil,    39,    40,    11,    36,    27,    28,    29,    30,    31,
   nil,   nil,   nil,    35,   113,   nil,   nil,    42,    43,    44,
   nil,   110,   nil,   nil,   nil,   nil,   174,   nil,   nil,    39,
    40,    11,    36,    27,    28,    29,    30,    31,   nil,   nil,
   nil,    35,   nil,   nil,   nil,    42,    43,    44,   nil,   nil,
   nil,   nil,   nil,   nil,   174,   nil,   nil,    39,    40,    11,
    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,
   nil,   nil,   nil,    42,    43,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   174,   nil,   nil,    39,    40,    11,    36,    27,
    28,    29,    30,    31,   nil,   nil,   nil,    35,   nil,   nil,
   nil,    42,    43,    44,   nil,   nil,   nil,   nil,   nil,   nil,
   174,   nil,   nil,    39,    40,    11,    36,    27,    28,    29,
    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,
    43,    44,   nil,   nil,   nil,   nil,   nil,   nil,   174,   nil,
   nil,    39,    40,    11,    36,    27,    28,    29,    30,    31,
   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,
   nil,   nil,   nil,   nil,   nil,   nil,   174,   nil,   nil,    39,
    40,    11,    36,    27,    28,    29,    30,    31,   nil,   nil,
   nil,    35,   nil,   nil,   nil,    42,    43,    44,   nil,   nil,
   nil,   nil,   nil,   nil,   174,   nil,   nil,    39,    40,    11,
    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,
   nil,   nil,   nil,    42,    43,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   106,   nil,   nil,    39,    40,    11,    36,    27,
    28,    29,    30,    31,   nil,   nil,   nil,    35,   113,   nil,
   nil,    42,    43,    44,   nil,   110,   nil,   nil,   nil,   nil,
   174,   nil,   nil,    39,    40,    11,    36,    27,    28,    29,
    30,    31,   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,
    43,    44,   nil,   nil,   nil,   nil,   nil,   nil,   174,   nil,
   nil,    39,    40,    11,    36,    27,    28,    29,    30,    31,
   nil,   nil,   nil,    35,   nil,   nil,   nil,    42,    43,    44,
   nil,   nil,   nil,   nil,   nil,   nil,   174,   nil,   nil,    39,
    40,    11,    36,    27,    28,    29,    30,    31,   nil,   nil,
   nil,    35,   nil,   nil,   nil,    42,    43,    44,   nil,   nil,
   nil,   nil,   nil,   nil,    21,   nil,   nil,    39,    40,    11,
    36,    27,    28,    29,    30,    31,   nil,   nil,   nil,    35,
   nil,   nil,   nil,    42,    43,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    39,    40,   nil,   nil,    27,
    28,    29,    30,    31,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    42,    43,    44 ]

racc_action_check = [
   106,   106,    35,    60,   141,    72,   106,   106,   191,    11,
    14,    14,     0,   211,     1,    11,   106,   106,   191,   174,
   174,    72,    72,   211,   106,   174,   174,   141,   148,    15,
    15,     2,   106,   106,   148,   174,   106,   106,   106,   106,
   106,     4,    35,    60,    13,    13,    13,    13,   106,   106,
   106,   174,   174,    44,    44,   174,   174,   174,   174,   174,
   144,     5,   144,   144,   176,   176,     6,   174,   174,   174,
   176,   176,    49,    49,   203,   203,   219,   219,     9,    10,
   176,    24,    27,    28,     3,    29,    30,    31,    32,     3,
     3,    36,    37,    46,    47,    50,   176,   176,    61,     3,
   176,   176,   176,   176,   176,    62,    63,    70,    73,    75,
    77,    78,   176,   176,   176,     3,     3,    80,    89,     3,
     3,     3,     3,     3,    16,    91,    92,    93,    94,    16,
    16,     3,     3,     3,    95,    96,   104,   105,   107,    16,
   110,   111,   136,    21,   138,   139,   142,   146,    21,    21,
   147,   155,   161,   162,   163,    16,    16,   164,    21,    16,
    16,    16,    16,    16,   167,   170,   172,   173,   175,   180,
   190,    16,    16,    16,    21,    21,   192,   193,    21,    21,
    21,    21,    21,    51,   197,   198,   201,   212,    51,    51,
    21,    21,    21,   nil,   nil,   nil,   nil,   nil,    51,   nil,
   nil,   nil,    54,   nil,   nil,   nil,   nil,    54,    54,   nil,
   nil,   nil,   nil,   nil,    51,    51,   nil,    54,    51,    51,
    51,    51,    51,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    51,    51,    51,    54,    54,   nil,   nil,    54,    54,    54,
    54,    54,    55,   nil,   nil,   nil,   nil,    55,    55,    54,
    54,    54,   nil,   nil,   nil,   nil,   nil,    55,   nil,   nil,
   nil,    56,   nil,   nil,   nil,   nil,    56,    56,   nil,   nil,
   nil,   nil,   nil,    55,    55,   nil,    56,    55,    55,    55,
    55,    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    55,
    55,    55,    56,    56,   nil,   nil,    56,    56,    56,    56,
    56,    57,   nil,   nil,   nil,   nil,    57,    57,    56,    56,
    56,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,
    64,    64,   nil,   nil,   nil,    64,    64,   nil,   nil,   nil,
   nil,   nil,    57,    57,   nil,    64,    57,    57,    57,    57,
    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,    57,
    57,    64,    64,   nil,   nil,    64,    64,    64,    64,    64,
    65,   nil,   nil,   nil,   nil,    65,    65,    64,    64,    64,
   nil,   nil,   nil,   nil,   nil,    65,   nil,   nil,   nil,    66,
   nil,   nil,   nil,   nil,    66,    66,   nil,   nil,   nil,   nil,
   nil,    65,    65,   nil,    66,    65,    65,    65,    65,    65,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,    65,    65,
    66,    66,   nil,   nil,    66,    66,    66,    66,    66,    67,
   nil,   nil,   nil,   nil,    67,    67,    66,    66,    66,   nil,
   nil,   nil,   nil,   nil,    67,   nil,   nil,   nil,    68,   nil,
   nil,   nil,   nil,    68,    68,   nil,   nil,   nil,   nil,   nil,
    67,    67,   nil,    68,    67,    67,    67,    67,    67,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    67,    67,    67,    68,
    68,   nil,   nil,    68,    68,    68,    68,    68,    69,   nil,
   nil,   nil,   nil,    69,    69,    68,    68,    68,   nil,   nil,
   nil,   109,   109,    69,   109,   109,   109,   nil,   nil,   nil,
   109,   109,   109,   109,   109,   109,    76,   nil,   nil,    69,
    69,    76,    76,    69,    69,    69,    69,    69,    69,   nil,
   nil,    76,    76,   nil,   nil,    69,    69,    69,   nil,    76,
   nil,   nil,   nil,   nil,   113,   nil,   nil,    76,    76,   113,
   113,    76,    76,    76,    76,    76,   nil,   nil,   nil,   113,
   nil,   nil,   nil,    76,    76,    76,   nil,   113,   nil,   nil,
   nil,   nil,   135,   nil,   nil,   113,   113,   135,   135,   113,
   113,   113,   113,   113,   nil,   nil,   nil,   135,   nil,   nil,
   nil,   113,   113,   113,   nil,   nil,   nil,   nil,   nil,   nil,
   137,   nil,   nil,   135,   135,   137,   137,   135,   135,   135,
   135,   135,   nil,   nil,   nil,   137,   137,   nil,   nil,   135,
   135,   135,   nil,   137,   nil,   nil,   nil,   nil,   143,   nil,
   nil,   137,   137,   143,   143,   137,   137,   137,   137,   137,
   nil,   nil,   nil,   143,   143,   nil,   nil,   137,   137,   137,
   nil,   143,   nil,   nil,   nil,   nil,   145,   nil,   nil,   143,
   143,   145,   145,   143,   143,   143,   143,   143,   nil,   nil,
   nil,   145,   nil,   nil,   nil,   143,   143,   143,   nil,   nil,
   nil,   nil,   nil,   nil,   149,   nil,   nil,   145,   145,   149,
   149,   145,   145,   145,   145,   145,   nil,   nil,   nil,   149,
   nil,   nil,   nil,   145,   145,   145,   nil,   nil,   nil,   nil,
   nil,   nil,   150,   nil,   nil,   149,   149,   150,   150,   149,
   149,   149,   149,   149,   nil,   nil,   nil,   150,   nil,   nil,
   nil,   149,   149,   149,   nil,   nil,   nil,   nil,   nil,   nil,
   151,   nil,   nil,   150,   150,   151,   151,   150,   150,   150,
   150,   150,   nil,   nil,   nil,   151,   nil,   nil,   nil,   150,
   150,   150,   nil,   nil,   nil,   nil,   nil,   nil,   152,   nil,
   nil,   151,   151,   152,   152,   151,   151,   151,   151,   151,
   nil,   nil,   nil,   152,   nil,   nil,   nil,   151,   151,   151,
   nil,   nil,   nil,   nil,   nil,   nil,   153,   nil,   nil,   152,
   152,   153,   153,   152,   152,   152,   152,   152,   nil,   nil,
   nil,   153,   nil,   nil,   nil,   152,   152,   152,   nil,   nil,
   nil,   nil,   nil,   nil,   154,   nil,   nil,   153,   153,   154,
   154,   153,   153,   153,   153,   153,   nil,   nil,   nil,   154,
   nil,   nil,   nil,   153,   153,   153,   nil,   nil,   nil,   nil,
   nil,   nil,   158,   nil,   nil,   154,   154,   158,   158,   154,
   154,   154,   154,   154,   nil,   nil,   nil,   158,   158,   nil,
   nil,   154,   154,   154,   nil,   158,   nil,   nil,   nil,   nil,
   171,   nil,   nil,   158,   158,   171,   171,   158,   158,   158,
   158,   158,   nil,   nil,   nil,   171,   nil,   nil,   nil,   158,
   158,   158,   nil,   nil,   nil,   nil,   nil,   nil,   196,   nil,
   nil,   171,   171,   196,   196,   171,   171,   171,   171,   171,
   nil,   nil,   nil,   196,   nil,   nil,   nil,   171,   171,   171,
   nil,   nil,   nil,   nil,   nil,   nil,   207,   nil,   nil,   196,
   196,   207,   207,   196,   196,   196,   196,   196,   nil,   nil,
   nil,   207,   nil,   nil,   nil,   196,   196,   196,   nil,   nil,
   nil,   nil,   nil,   nil,   210,   nil,   nil,   207,   207,   210,
   210,   207,   207,   207,   207,   207,   nil,   nil,   nil,   210,
   nil,   nil,   nil,   207,   207,   207,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   210,   210,   nil,   nil,   210,
   210,   210,   210,   210,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   210,   210,   210 ]

racc_action_pointer = [
    10,    14,    25,    81,    41,    51,    58,   nil,   nil,    73,
    71,     6,   nil,    10,   -24,    -7,   121,   nil,   nil,   nil,
   nil,   140,   nil,   nil,    72,   nil,   nil,    79,    80,    82,
    83,    84,    85,   nil,   nil,    -7,    73,    43,   nil,   nil,
   nil,   nil,   nil,   nil,     1,   nil,    81,    83,   nil,    65,
    86,   180,   nil,   nil,   199,   239,   258,   298,   nil,   nil,
    -6,    80,   101,    98,   317,   357,   376,   416,   435,   475,
    89,   nil,   -13,    56,   nil,    96,   503,   102,   103,   nil,
   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   114,
   nil,   121,   122,   123,   124,   130,   130,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   121,   123,    -2,   111,   nil,   472,
   137,   120,   nil,   531,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   559,   126,   587,   136,   141,
   nil,     0,   142,   615,    40,   643,   144,    98,     9,   671,
   699,   727,   755,   783,   811,   149,   nil,   nil,   839,   nil,
   nil,   135,   139,   127,   152,   nil,   nil,   155,   nil,   nil,
   144,   867,   163,   115,    17,   147,    62,   nil,   nil,   nil,
   144,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   152,     0,   168,   156,   nil,   nil,   895,   180,   180,   nil,
   nil,   181,   nil,    30,   nil,   nil,   nil,   923,   nil,   nil,
   951,     5,   141,   nil,   nil,   nil,   nil,   nil,   nil,    29,
   nil,   nil ]

racc_action_default = [
  -131,  -131,  -131,  -131,  -131,   -16,  -131,    -2,    -5,    -7,
    -9,  -125,   -70,   -71,   -74,   -77,  -131,   -79,   -80,   -81,
   -82,  -131,   -84,   -85,  -131,   -88,   -89,  -131,  -131,  -131,
  -131,  -131,  -131,  -112,  -113,  -117,  -131,  -131,  -119,  -123,
  -124,  -126,  -127,  -128,  -131,   222,   -18,  -131,   -10,   -13,
   -45,  -131,    -8,  -125,  -131,  -131,  -131,  -131,   -78,   -86,
  -117,  -131,  -131,  -131,  -131,  -131,  -131,  -131,  -131,  -131,
  -115,  -116,  -131,  -131,  -130,   -20,  -131,  -131,  -131,   -12,
  -131,    -6,   -72,   -73,   -75,   -76,  -121,   -83,   -87,  -131,
   -91,  -131,  -131,  -131,  -131,  -131,  -131,   -99,  -100,  -114,
  -118,  -120,  -122,  -129,   -25,  -131,  -131,   -19,   -31,  -131,
  -131,   -46,   -48,  -131,   -51,   -52,   -53,   -55,   -56,   -57,
   -58,   -59,   -60,   -67,   -68,   -69,   -17,   -11,   -14,   -90,
   -92,   -93,   -94,   -95,   -96,  -131,   -27,  -131,  -131,  -131,
    -4,  -131,   -69,  -131,  -131,  -131,  -131,  -131,  -131,  -131,
  -131,  -131,  -131,  -131,  -131,  -131,   -15,   -44,  -131,   -50,
   -98,   -29,  -131,   -26,   -21,   -23,   -24,  -125,    -3,   -54,
   -47,  -131,  -131,  -131,  -131,  -131,  -131,   -35,   -36,   -41,
  -131,   -43,   -61,   -62,   -63,   -64,   -65,   -66,   -49,    -1,
  -131,  -131,  -131,  -131,   -34,   -40,  -131,  -131,   -39,   -42,
   -30,   -28,  -102,  -106,  -104,  -105,   -22,  -131,   -33,   -37,
  -131,  -131,  -109,  -107,  -108,   -32,   -38,  -101,  -103,  -131,
  -110,  -111 ]

racc_goto_table = [
    10,    52,    97,   165,    61,   156,    59,     8,   175,   197,
   177,   179,   182,   183,   184,   185,   186,   187,    62,   107,
   166,     1,   202,    82,    83,    84,    85,     5,    46,    75,
   104,   136,   161,   189,   193,     7,   194,   195,    48,    49,
    79,   156,   217,   216,    59,    59,    59,    59,    10,   141,
   157,   164,   201,   170,    88,    81,   188,   206,   159,   208,
    61,    89,    91,    92,    93,    94,    98,   156,   160,   127,
   215,    58,    95,   212,   166,   218,   100,   101,   nil,   nil,
   163,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   142,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    98,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    62,   nil,   198,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   204,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   204,   nil,   nil,   nil,   nil,   198 ]

racc_goto_check = [
    15,    16,    55,    22,    46,    11,    43,    13,    27,    30,
    29,    32,    27,    27,    27,    27,    27,    27,    15,    20,
    23,     1,    56,    42,    42,    44,    44,     3,     4,     5,
     6,     7,     8,     9,    27,    10,    29,    32,    17,    18,
    16,    11,    56,    30,    43,    43,    43,    43,    15,    20,
    19,    21,    24,    35,    16,    13,    36,    22,    37,    27,
    46,    15,    15,    15,    15,    15,    15,    11,    55,    16,
    27,    47,    54,    58,    23,    59,    63,    64,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    15,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,    15 ]

racc_goto_pointer = [
   nil,    21,   nil,    25,    23,   -17,   -45,   -73,  -104,  -128,
    32,  -105,   nil,     4,   nil,    -3,    -9,    32,    33,   -60,
   -57,   -87,  -135,  -118,  -139,   nil,   nil,  -137,   nil,  -136,
  -167,   nil,  -136,   nil,   nil,   -90,  -102,   -55,   nil,   nil,
   nil,   nil,   -31,   -10,   -31,   nil,   -12,    55,   nil,   nil,
   nil,   nil,   nil,   nil,     3,   -67,  -169,   nil,  -130,  -137,
   nil,   nil,   nil,     4,     5 ]

racc_goto_default = [
   nil,   140,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   108,   139,   nil,     9,   125,    25,   nil,    26,   178,
   nil,   nil,   nil,    19,   nil,   124,   118,   109,   119,   nil,
   nil,   120,    41,   121,   122,   111,   112,   114,   115,   116,
   117,   123,    12,    13,    14,    15,    16,    17,    18,    20,
    22,    23,    24,    32,   nil,   nil,   nil,   203,   nil,   nil,
    33,    34,    37,   nil,    38 ]

racc_reduce_table = [
  0, 0, :racc_error,
  8, 55, :_reduce_1,
  2, 56, :_reduce_2,
  3, 65, :_reduce_3,
  1, 66, :_reduce_none,
  1, 64, :_reduce_5,
  3, 67, :_reduce_6,
  1, 67, :_reduce_none,
  2, 68, :_reduce_8,
  1, 68, :_reduce_none,
  2, 57, :_reduce_10,
  3, 71, :_reduce_11,
  2, 71, :_reduce_12,
  1, 71, :_reduce_none,
  3, 71, :_reduce_14,
  1, 73, :_reduce_none,
  0, 58, :_reduce_none,
  3, 58, :_reduce_17,
  0, 59, :_reduce_none,
  2, 59, :_reduce_19,
  0, 60, :_reduce_none,
  3, 60, :_reduce_21,
  3, 75, :_reduce_22,
  1, 75, :_reduce_none,
  1, 76, :_reduce_none,
  0, 61, :_reduce_none,
  2, 61, :_reduce_26,
  0, 62, :_reduce_none,
  3, 62, :_reduce_28,
  0, 63, :_reduce_none,
  2, 63, :_reduce_30,
  1, 79, :_reduce_none,
  6, 80, :_reduce_32,
  5, 80, :_reduce_33,
  4, 82, :_reduce_34,
  3, 82, :_reduce_35,
  1, 83, :_reduce_none,
  3, 83, :_reduce_37,
  3, 84, :_reduce_38,
  1, 84, :_reduce_none,
  4, 85, :_reduce_40,
  3, 85, :_reduce_41,
  4, 87, :_reduce_42,
  3, 87, :_reduce_43,
  2, 88, :_reduce_44,
  1, 72, :_reduce_45,
  1, 74, :_reduce_none,
  3, 74, :_reduce_47,
  1, 89, :_reduce_none,
  3, 89, :_reduce_49,
  2, 90, :_reduce_50,
  1, 90, :_reduce_none,
  1, 91, :_reduce_none,
  1, 92, :_reduce_none,
  3, 92, :_reduce_54,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  3, 94, :_reduce_61,
  3, 94, :_reduce_62,
  3, 94, :_reduce_63,
  3, 94, :_reduce_64,
  3, 94, :_reduce_65,
  3, 94, :_reduce_66,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 95, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  3, 96, :_reduce_72,
  3, 96, :_reduce_73,
  1, 96, :_reduce_none,
  3, 98, :_reduce_75,
  3, 98, :_reduce_76,
  1, 98, :_reduce_none,
  2, 99, :_reduce_78,
  1, 99, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  3, 101, :_reduce_83,
  1, 102, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 77, :_reduce_87,
  1, 77, :_reduce_none,
  1, 106, :_reduce_none,
  4, 103, :_reduce_90,
  3, 103, :_reduce_91,
  4, 103, :_reduce_92,
  4, 103, :_reduce_93,
  4, 103, :_reduce_94,
  4, 103, :_reduce_95,
  4, 103, :_reduce_96,
  1, 107, :_reduce_none,
  3, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 109, :_reduce_none,
  3, 78, :_reduce_101,
  1, 78, :_reduce_none,
  3, 110, :_reduce_103,
  1, 111, :_reduce_none,
  1, 111, :_reduce_105,
  0, 112, :_reduce_none,
  1, 112, :_reduce_107,
  1, 112, :_reduce_108,
  0, 113, :_reduce_none,
  2, 113, :_reduce_110,
  2, 113, :_reduce_111,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  3, 114, :_reduce_114,
  2, 114, :_reduce_115,
  2, 114, :_reduce_116,
  1, 114, :_reduce_117,
  3, 115, :_reduce_118,
  1, 116, :_reduce_none,
  1, 117, :_reduce_none,
  2, 118, :_reduce_121,
  1, 118, :_reduce_122,
  1, 100, :_reduce_123,
  1, 100, :_reduce_124,
  1, 70, :_reduce_125,
  1, 97, :_reduce_none,
  1, 97, :_reduce_127,
  1, 97, :_reduce_128,
  3, 86, :_reduce_129,
  2, 86, :_reduce_130 ]

racc_reduce_n = 131

racc_shift_n = 222

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :left_paren => 3,
  :right_paren => 4,
  :comma => 5,
  :FROM => 6,
  :AS => 7,
  :identifier => 8,
  :period => 9,
  :USING => 10,
  :SCOPE => 11,
  :WHERE => 12,
  :GROUP => 13,
  :BY => 14,
  :HAVING => 15,
  :ORDER => 16,
  :LIMIT => 17,
  :unsigned_integer => 18,
  :NOT => 19,
  :BETWEEN => 20,
  :AND => 21,
  :IN => 22,
  :LIKE => 23,
  :IS => 24,
  :NULL => 25,
  :EXISTS => 26,
  :OR => 27,
  :equals_operator => 28,
  :not_equals_operator => 29,
  :less_than_operator => 30,
  :greater_than_operator => 31,
  :less_than_or_equals_operator => 32,
  :greater_than_or_equals_operator => 33,
  :plus_sign => 34,
  :minus_sign => 35,
  :asterisk => 36,
  :solidus => 37,
  :COUNT => 38,
  :AVG => 39,
  :MAX => 40,
  :MIN => 41,
  :SUM => 42,
  :func_args_list => 43,
  :ASC => 44,
  :DESC => 45,
  :NULLS => 46,
  :FIRST => 47,
  :LAST => 48,
  :E => 49,
  :datetime_literal => 50,
  :date_literal => 51,
  :quote => 52,
  :character_string_literal => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "left_paren",
  "right_paren",
  "comma",
  "FROM",
  "AS",
  "identifier",
  "period",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "asterisk",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "E",
  "datetime_literal",
  "date_literal",
  "quote",
  "character_string_literal",
  "$start",
  "query_specification",
  "select_clause",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_list",
  "subquery",
  "query_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_reference",
  "table_name",
  "table_subquery",
  "search_condition",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "string_literal",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "general_set_function",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 5)
  def _reduce_1(val, _values, result)
     result = SQLParser::Statement::Query.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 8)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::UsingScope.new(val[2]) 
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_22(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_38(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_42(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_54(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 169)
  def _reduce_78(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_83(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 193)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::Count.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 196)
  def _reduce_93(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 197)
  def _reduce_94(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_95(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_96(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 213)
  def _reduce_101(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::OrderColumn.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 104 omitted

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_107(val, _values, result)
     result = SQLParser::Statement::Ascending.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 226)
  def _reduce_108(val, _values, result)
     result = SQLParser::Statement::Descending.new 
    result
  end
.,.,

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.racc', 230)
  def _reduce_110(val, _values, result)
     result = SQLParser::Statement::NullsFirst.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 231)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::NullsLast.new 
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 119 omitted

# reduce 120 omitted

module_eval(<<'.,.,', 'parser.racc', 254)
  def _reduce_121(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_122(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 258)
  def _reduce_123(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 259)
  def _reduce_124(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::DateTime.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
