#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 332)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,   102,     2,    53,    34,   192,    67,   235,   235,    67,
   127,    51,    52,     2,  -134,     9,    35,    34,    50,    50,
   -79,   203,   194,    19,   195,   196,     2,   204,     9,    35,
    34,   134,     3,   165,    71,    70,    19,    44,   131,    54,
    47,     9,    35,    38,    39,  -148,    38,    39,  -147,    25,
    27,    28,    29,    30,   114,    50,    40,    48,    43,    38,
    39,  -122,    25,    27,    28,    29,    30,   246,   247,    40,
    50,    43,    38,    39,    60,    25,    27,    28,    29,    30,
    34,    61,    40,    62,    43,    63,    19,    64,     5,   256,
   257,     9,    35,    57,   107,  -122,  -122,  -122,    65,    19,
    66,    68,    69,    72,     9,    35,    34,    74,   108,    78,
   110,   111,    19,   112,   113,   215,   216,     9,    35,    86,
    87,    50,    38,    39,    99,    25,    27,    28,    29,    30,
   103,   105,    40,   106,    43,    38,    39,   116,    25,    27,
    28,    29,    30,   117,   118,    40,   119,    43,    38,    39,
    34,    25,    27,    28,    29,    30,    19,   120,    40,   121,
    43,     9,    35,    34,   107,   122,   123,   124,   126,    19,
   147,   149,   150,   151,     9,    35,    34,   152,   108,   153,
   110,   111,    19,   112,   113,   154,    50,     9,    35,   156,
   159,   160,    38,    39,   165,    25,    27,    28,    29,    30,
   177,   180,    40,   149,    43,    38,    39,    78,    25,    27,
    28,    29,    30,   185,   190,    40,   191,    43,    38,    39,
    34,    25,    27,    28,    29,    30,    19,    87,    40,   199,
    43,     9,    35,    34,     2,   218,   219,   165,   220,    19,
   -79,   180,   199,   224,     9,    35,    34,   227,   229,   230,
   190,   237,    19,   239,    89,   240,   165,     9,    35,    50,
   244,   250,    38,    39,   251,    25,    27,    28,    29,    30,
   254,    50,    40,   nil,    43,    38,    39,   nil,    25,    27,
    28,    29,    30,   nil,   nil,    40,   nil,    43,    38,    39,
    34,    25,    27,    28,    29,    30,    19,   nil,    40,   nil,
    43,     9,    35,    34,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,     9,    35,    34,   nil,   nil,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,     9,    35,   nil,
   nil,   nil,    38,    39,   nil,    25,    27,    28,    29,    30,
   nil,   nil,    40,   nil,    43,    38,    39,   nil,    25,    27,
    28,    29,    30,   nil,   nil,    40,   nil,    43,    38,    39,
    34,    25,    27,    28,    29,    30,    19,   nil,    40,   nil,
    43,     9,    35,    34,   nil,   nil,   nil,   166,   167,    19,
   168,   169,   170,   nil,     9,    35,   171,   172,   173,   174,
   175,   176,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    38,    39,   nil,    25,    27,    28,    29,    30,
   nil,   nil,    40,   nil,    43,    38,    39,   nil,    25,    27,
    28,    29,    30,    96,    34,    40,   nil,    43,   nil,   nil,
   127,   nil,   nil,   nil,   nil,     9,    35,    34,   nil,   nil,
   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,     9,    35,
   nil,   134,   nil,    34,   nil,   nil,   nil,   nil,   131,   127,
   nil,   nil,   nil,   nil,     9,    35,    38,    39,   nil,    25,
    27,    28,    29,    30,   nil,   nil,    40,   nil,    43,    38,
    39,   nil,    25,    27,    28,    29,    30,   131,   nil,    40,
   nil,    43,   nil,   nil,   nil,    38,    39,    34,    25,    27,
    28,    29,    30,   127,   nil,    40,   nil,    43,     9,    35,
   nil,   nil,   nil,   nil,    34,   nil,   nil,   nil,   nil,   nil,
   127,   nil,   nil,   nil,   134,     9,    35,   nil,   nil,   nil,
   nil,   131,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   134,    25,    27,    28,    29,    30,   nil,   131,    40,
   nil,    43,   nil,   nil,   nil,   nil,    38,    39,    34,    25,
    27,    28,    29,    30,   197,   nil,    40,   nil,    43,     9,
    35,    34,   nil,   nil,   nil,   nil,   nil,   197,   nil,   nil,
   nil,   nil,     9,    35,    34,   nil,   nil,   nil,   nil,   nil,
   197,   nil,   nil,   nil,   nil,     9,    35,   nil,   nil,   nil,
    38,    39,   nil,    25,    27,    28,    29,    30,   nil,   nil,
    40,   nil,    43,    38,    39,   nil,    25,    27,    28,    29,
    30,   nil,   nil,    40,   nil,    43,    38,    39,    34,    25,
    27,    28,    29,    30,   197,   nil,    40,   nil,    43,     9,
    35,    34,   nil,   nil,   nil,   nil,   nil,   197,   nil,   nil,
   nil,   nil,     9,    35,    34,   nil,   nil,   nil,   nil,   nil,
   197,   nil,   nil,   nil,   nil,     9,    35,   nil,   nil,   nil,
    38,    39,   nil,    25,    27,    28,    29,    30,   nil,   nil,
    40,   nil,    43,    38,    39,   nil,    25,    27,    28,    29,
    30,   nil,   nil,    40,   nil,    43,    38,    39,    34,    25,
    27,    28,    29,    30,   197,   nil,    40,   nil,    43,     9,
    35,    34,   nil,   nil,   nil,   nil,   nil,   197,   nil,   nil,
   nil,   nil,     9,    35,   nil,   nil,    34,   nil,   nil,   nil,
   nil,   nil,   197,   nil,   nil,   nil,   nil,     9,    35,   nil,
    38,    39,   nil,    25,    27,    28,    29,    30,   nil,   nil,
    40,   nil,    43,    38,    39,    34,    25,    27,    28,    29,
    30,   127,   nil,    40,   nil,    43,     9,    35,    38,    39,
   nil,    25,    27,    28,    29,    30,   nil,   nil,    40,    34,
    43,   nil,   134,   nil,   nil,   197,   nil,   nil,   nil,   131,
     9,    35,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    25,    27,    28,    29,    30,    34,   nil,    40,   nil,    43,
   nil,   127,   nil,   nil,   nil,   nil,     9,    35,   nil,   nil,
   nil,    38,    39,    34,    25,    27,    28,    29,    30,   197,
   nil,    40,   134,    43,     9,    35,   nil,   nil,   nil,   131,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,    34,
    25,    27,    28,    29,    30,   197,   nil,    40,   nil,    43,
     9,    35,   nil,   nil,   nil,    38,    39,    34,    25,    27,
    28,    29,    30,    19,   nil,    40,   nil,    43,     9,    35,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    25,    27,    28,    29,    30,   nil,
   nil,    40,   nil,    43,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    25,    27,    28,    29,    30,   nil,   nil,    40,
   nil,    43 ]

racc_action_check = [
   127,    69,     0,    13,   127,   163,    34,   219,   244,    57,
   127,    12,    12,   197,     9,   127,   127,   197,   219,   244,
     9,   170,   166,   197,   166,   166,   199,   170,   197,   197,
   199,   127,     1,   163,    40,    40,   199,     3,   127,    13,
     4,   199,   199,    69,    69,    34,   127,   127,    57,   127,
   127,   127,   127,   127,    76,    76,   127,     7,   127,   197,
   197,    11,   197,   197,   197,   197,   197,   233,   233,   197,
     8,   197,   199,   199,    22,   199,   199,   199,   199,   199,
     2,    25,   199,    27,   199,    28,     2,    29,     2,   254,
   254,     2,     2,    14,   183,    11,    11,    11,    30,    14,
    31,    35,    36,    43,    14,    14,    19,    46,   183,    47,
   183,   183,    19,   183,   183,   183,   183,    19,    19,    58,
    59,    60,     2,     2,    67,     2,     2,     2,     2,     2,
    70,    73,     2,    74,     2,    14,    14,    78,    14,    14,
    14,    14,    14,    89,    90,    14,    91,    14,    19,    19,
    48,    19,    19,    19,    19,    19,    48,    92,    19,    93,
    19,    48,    48,    51,    75,    94,    95,    96,   104,    51,
   106,   107,   108,   109,    51,    51,    52,   111,    75,   112,
    75,    75,    52,    75,    75,   113,   114,    52,    52,   116,
   125,   126,    48,    48,   128,    48,    48,    48,    48,    48,
   131,   132,    48,   150,    48,    51,    51,   151,    51,    51,
    51,    51,    51,   158,   160,    51,   161,    51,    52,    52,
    53,    52,    52,    52,    52,    52,    53,   164,    52,   168,
    52,    53,    53,    54,   177,   184,   185,   186,   187,    54,
   190,   193,   195,   198,    54,    54,    61,   203,   216,   218,
   220,   221,    61,   225,    61,   226,   228,    61,    61,   229,
   231,   241,    53,    53,   242,    53,    53,    53,    53,    53,
   245,   251,    53,   nil,    53,    54,    54,   nil,    54,    54,
    54,    54,    54,   nil,   nil,    54,   nil,    54,    61,    61,
    62,    61,    61,    61,    61,    61,    62,   nil,    61,   nil,
    61,    62,    62,    63,   nil,   nil,   nil,   nil,   nil,    63,
   nil,   nil,   nil,   nil,    63,    63,    64,   nil,   nil,   nil,
   nil,   nil,    64,   nil,   nil,   nil,   nil,    64,    64,   nil,
   nil,   nil,    62,    62,   nil,    62,    62,    62,    62,    62,
   nil,   nil,    62,   nil,    62,    63,    63,   nil,    63,    63,
    63,    63,    63,   nil,   nil,    63,   nil,    63,    64,    64,
    65,    64,    64,    64,    64,    64,    65,   nil,    64,   nil,
    64,    65,    65,    66,   nil,   nil,   nil,   130,   130,    66,
   130,   130,   130,   nil,    66,    66,   130,   130,   130,   130,
   130,   130,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    65,    65,   nil,    65,    65,    65,    65,    65,
   nil,   nil,    65,   nil,    65,    66,    66,   nil,    66,    66,
    66,    66,    66,    66,   105,    66,   nil,    66,   nil,   nil,
   105,   nil,   nil,   nil,   nil,   105,   105,   124,   nil,   nil,
   nil,   nil,   nil,   124,   nil,   nil,   nil,   nil,   124,   124,
   nil,   105,   nil,   134,   nil,   nil,   nil,   nil,   105,   134,
   nil,   nil,   nil,   nil,   134,   134,   105,   105,   nil,   105,
   105,   105,   105,   105,   nil,   nil,   105,   nil,   105,   124,
   124,   nil,   124,   124,   124,   124,   124,   134,   nil,   124,
   nil,   124,   nil,   nil,   nil,   134,   134,   159,   134,   134,
   134,   134,   134,   159,   nil,   134,   nil,   134,   159,   159,
   nil,   nil,   nil,   nil,   165,   nil,   nil,   nil,   nil,   nil,
   165,   nil,   nil,   nil,   159,   165,   165,   nil,   nil,   nil,
   nil,   159,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   159,
   159,   165,   159,   159,   159,   159,   159,   nil,   165,   159,
   nil,   159,   nil,   nil,   nil,   nil,   165,   165,   167,   165,
   165,   165,   165,   165,   167,   nil,   165,   nil,   165,   167,
   167,   169,   nil,   nil,   nil,   nil,   nil,   169,   nil,   nil,
   nil,   nil,   169,   169,   171,   nil,   nil,   nil,   nil,   nil,
   171,   nil,   nil,   nil,   nil,   171,   171,   nil,   nil,   nil,
   167,   167,   nil,   167,   167,   167,   167,   167,   nil,   nil,
   167,   nil,   167,   169,   169,   nil,   169,   169,   169,   169,
   169,   nil,   nil,   169,   nil,   169,   171,   171,   172,   171,
   171,   171,   171,   171,   172,   nil,   171,   nil,   171,   172,
   172,   173,   nil,   nil,   nil,   nil,   nil,   173,   nil,   nil,
   nil,   nil,   173,   173,   174,   nil,   nil,   nil,   nil,   nil,
   174,   nil,   nil,   nil,   nil,   174,   174,   nil,   nil,   nil,
   172,   172,   nil,   172,   172,   172,   172,   172,   nil,   nil,
   172,   nil,   172,   173,   173,   nil,   173,   173,   173,   173,
   173,   nil,   nil,   173,   nil,   173,   174,   174,   175,   174,
   174,   174,   174,   174,   175,   nil,   174,   nil,   174,   175,
   175,   176,   nil,   nil,   nil,   nil,   nil,   176,   nil,   nil,
   nil,   nil,   176,   176,   nil,   nil,   194,   nil,   nil,   nil,
   nil,   nil,   194,   nil,   nil,   nil,   nil,   194,   194,   nil,
   175,   175,   nil,   175,   175,   175,   175,   175,   nil,   nil,
   175,   nil,   175,   176,   176,   180,   176,   176,   176,   176,
   176,   180,   nil,   176,   nil,   176,   180,   180,   194,   194,
   nil,   194,   194,   194,   194,   194,   nil,   nil,   194,   196,
   194,   nil,   180,   nil,   nil,   196,   nil,   nil,   nil,   180,
   196,   196,   nil,   nil,   nil,   nil,   nil,   180,   180,   nil,
   180,   180,   180,   180,   180,   215,   nil,   180,   nil,   180,
   nil,   215,   nil,   nil,   nil,   nil,   215,   215,   nil,   nil,
   nil,   196,   196,   224,   196,   196,   196,   196,   196,   224,
   nil,   196,   215,   196,   224,   224,   nil,   nil,   nil,   215,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   215,   215,   237,
   215,   215,   215,   215,   215,   237,   nil,   215,   nil,   215,
   237,   237,   nil,   nil,   nil,   224,   224,   240,   224,   224,
   224,   224,   224,   240,   nil,   224,   nil,   224,   240,   240,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   237,   237,   nil,   237,   237,   237,   237,   237,   nil,
   nil,   237,   nil,   237,   nil,   nil,   nil,   nil,   nil,   240,
   240,   nil,   240,   240,   240,   240,   240,   nil,   nil,   240,
   nil,   240 ]

racc_action_pointer = [
     0,    32,    74,    37,    25,   nil,   nil,    52,    53,     2,
   nil,    47,   -37,   -11,    87,   nil,   nil,   nil,   nil,   100,
   nil,   nil,    56,   nil,   nil,    69,   nil,    71,    73,    75,
    86,    88,   nil,   nil,   -12,    95,    45,   nil,   nil,   nil,
   -24,   nil,   nil,    42,   nil,   nil,    80,    92,   144,   nil,
   nil,   157,   170,   214,   227,   nil,   nil,    -9,   113,   107,
   104,   240,   284,   297,   310,   354,   367,   118,   nil,    -5,
    72,   nil,   nil,   102,   105,   159,    38,   nil,   119,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   130,
   131,   133,   144,   146,   152,   153,   162,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   138,   418,   153,   154,   152,   153,
   nil,   154,   156,   162,   169,   nil,   172,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   431,   159,   187,    -2,   153,   nil,
   344,   188,   166,   nil,   447,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   186,   190,   nil,   nil,   nil,   nil,   nil,   nil,   210,   491,
   197,   203,   nil,    -8,   214,   508,   -12,   552,   217,   565,
   -12,   578,   622,   635,   648,   692,   705,   232,   nil,   nil,
   749,   nil,   nil,    89,   203,   232,   196,   233,   nil,   nil,
   222,   nil,   nil,   206,   720,   230,   773,    11,   208,    24,
   nil,   nil,   nil,   208,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   799,   236,   nil,   243,     1,
   233,   216,   nil,   nil,   817,   240,   250,   nil,   215,   242,
   nil,   255,   nil,    60,   nil,   nil,   nil,   843,   nil,   nil,
   861,   248,   259,   nil,     2,   261,   nil,   nil,   nil,   nil,
   nil,   254,   nil,   nil,    79,   nil,   nil,   nil ]

racc_action_default = [
  -157,  -157,  -157,  -157,    -2,   -22,   -23,   -25,   -27,  -151,
  -106,  -107,  -110,  -113,  -157,  -115,  -116,  -117,  -118,  -157,
  -120,  -121,  -157,  -124,  -125,  -157,  -127,  -157,  -157,  -157,
  -157,  -157,  -138,  -139,  -143,  -157,  -157,  -145,  -149,  -150,
  -157,  -154,  -155,  -157,   258,    -1,   -52,  -157,  -157,   -26,
  -151,  -157,  -157,  -157,  -157,  -114,  -122,  -143,  -157,  -157,
  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -141,  -142,  -157,
  -157,  -153,  -156,   -54,  -157,   -28,   -31,   -32,   -79,   -35,
   -36,   -24,  -108,  -109,  -111,  -112,  -147,  -119,  -123,  -157,
  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -136,  -137,  -140,
  -144,  -146,  -148,  -152,   -56,  -157,  -157,  -157,  -157,  -157,
   -40,   -42,   -44,   -45,  -157,   -30,  -157,  -126,  -128,  -129,
  -130,  -131,  -132,  -133,  -157,   -61,  -157,  -157,   -55,   -65,
  -157,  -157,   -82,   -84,  -157,   -87,   -88,   -89,   -91,   -92,
   -93,   -94,   -95,   -96,  -103,  -104,  -105,   -53,   -37,   -79,
  -157,  -157,   -41,   -43,   -46,   -29,   -33,  -135,    -4,  -157,
  -157,  -157,   -18,  -157,  -105,  -157,  -157,  -157,  -157,  -157,
  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -157,   -34,   -78,
  -157,   -86,   -38,  -157,   -63,  -157,   -62,   -57,   -59,   -60,
  -151,   -17,   -90,   -83,  -157,  -157,  -157,  -157,  -157,  -157,
   -69,   -70,   -75,  -157,   -77,   -97,   -98,   -99,  -100,  -101,
  -102,   -85,   -39,   -47,   -48,  -157,  -157,    -3,  -157,  -157,
  -157,  -157,   -68,   -74,  -157,  -157,   -73,   -76,   -49,  -157,
   -64,    -5,    -7,   -11,    -9,   -10,   -58,  -157,   -67,   -71,
  -157,  -157,   -51,   -81,  -157,   -14,   -12,   -13,   -66,   -72,
   -50,  -157,    -6,    -8,  -157,   -80,   -15,   -16 ]

racc_goto_table = [
    49,     8,   128,    75,    58,   178,    76,   188,     6,   200,
   189,     1,   225,    97,   232,    82,    83,     4,    59,    84,
    85,   198,    45,   202,   163,   205,   206,   207,   208,   209,
   210,    46,    73,   104,   125,    56,   222,   158,   184,   252,
   217,   231,   178,   245,   253,   179,   212,     8,   221,   213,
   223,   214,    88,   249,    81,   241,   186,   242,   187,    58,
    90,    91,    92,    93,    94,    98,   148,   236,   115,   178,
   189,   157,    56,    56,    56,    56,   193,   211,   238,   181,
    55,    95,   100,   101,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   248,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   155,   183,   nil,   182,
    76,   nil,   228,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    98,   nil,   nil,   164,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    59,   nil,   226,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   234,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   243,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   234,   nil,   nil,   226,
   nil,   nil,   nil,   255 ]

racc_goto_check = [
    16,    21,    34,    24,    60,    17,    25,    38,    22,    44,
    39,     1,    45,    70,    12,    56,    56,     2,    21,    58,
    58,    42,     3,    42,    34,    42,    42,    42,    42,    42,
    42,     4,     5,     6,     7,    57,    44,     8,     9,    12,
    10,    11,    17,    14,    15,    27,    31,    21,    42,    32,
    42,    33,    16,    45,    22,    35,    34,    36,    37,    60,
    21,    21,    21,    21,    21,    21,    25,    38,    16,    17,
    39,    70,    57,    57,    57,    57,    49,    50,    42,    51,
    61,    69,    74,    75,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,    24,   nil,    25,
    25,   nil,    34,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,    21,
   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    11,    15,    18,    27,   -14,   -40,   -70,   -88,  -120,
  -144,  -178,  -205,   nil,  -190,  -201,    -8,  -126,   nil,   nil,
   nil,    -1,     6,   nil,   -44,   -41,   nil,   -86,   nil,   nil,
   nil,  -137,  -134,  -132,  -103,  -174,  -172,  -102,  -153,  -150,
   nil,   nil,  -146,   nil,  -159,  -187,   nil,   nil,   nil,   -89,
  -103,   -55,   nil,   nil,   nil,   nil,   -36,    21,   -34,   nil,
   -10,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
   -53,   nil,   nil,   nil,    13,    14,   nil,   nil ]

racc_goto_default = [
   nil,   162,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   233,   nil,   nil,    23,   129,   161,   nil,
   nil,   146,   nil,     7,   nil,    24,    77,   201,    79,    80,
   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,
   145,   139,   130,   140,   nil,   nil,   141,   142,   143,   132,
   133,   135,   136,   137,   138,   144,    10,    11,    12,    13,
    14,    15,    16,    18,    20,    21,    22,    26,    31,   nil,
   nil,    32,    33,    36,   nil,    37,    41,    42 ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 63, :_reduce_1,
  2, 63, :_reduce_2,
  7, 65, :_reduce_3,
  0, 71, :_reduce_none,
  3, 71, :_reduce_5,
  3, 73, :_reduce_6,
  1, 73, :_reduce_none,
  3, 74, :_reduce_8,
  1, 75, :_reduce_none,
  1, 75, :_reduce_10,
  0, 76, :_reduce_none,
  1, 76, :_reduce_12,
  1, 76, :_reduce_13,
  0, 77, :_reduce_none,
  2, 77, :_reduce_15,
  2, 77, :_reduce_16,
  3, 79, :_reduce_17,
  1, 80, :_reduce_none,
  3, 81, :_reduce_19,
  3, 82, :_reduce_20,
  1, 82, :_reduce_none,
  1, 64, :_reduce_22,
  1, 64, :_reduce_23,
  3, 84, :_reduce_24,
  1, 84, :_reduce_none,
  2, 85, :_reduce_26,
  1, 85, :_reduce_none,
  2, 66, :_reduce_28,
  3, 86, :_reduce_29,
  2, 86, :_reduce_30,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  3, 86, :_reduce_33,
  1, 89, :_reduce_none,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  3, 90, :_reduce_37,
  4, 90, :_reduce_38,
  5, 91, :_reduce_39,
  1, 92, :_reduce_40,
  2, 92, :_reduce_41,
  1, 92, :_reduce_42,
  2, 92, :_reduce_43,
  1, 92, :_reduce_44,
  1, 92, :_reduce_45,
  2, 92, :_reduce_46,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  2, 94, :_reduce_49,
  4, 95, :_reduce_50,
  1, 97, :_reduce_none,
  0, 67, :_reduce_none,
  3, 67, :_reduce_53,
  0, 68, :_reduce_none,
  2, 68, :_reduce_55,
  0, 69, :_reduce_none,
  3, 69, :_reduce_57,
  3, 99, :_reduce_58,
  1, 99, :_reduce_none,
  1, 100, :_reduce_none,
  0, 70, :_reduce_none,
  2, 70, :_reduce_62,
  0, 72, :_reduce_none,
  2, 72, :_reduce_64,
  1, 102, :_reduce_none,
  6, 103, :_reduce_66,
  5, 103, :_reduce_67,
  4, 105, :_reduce_68,
  3, 105, :_reduce_69,
  1, 106, :_reduce_none,
  3, 106, :_reduce_71,
  3, 107, :_reduce_72,
  1, 107, :_reduce_none,
  4, 108, :_reduce_74,
  3, 108, :_reduce_75,
  4, 109, :_reduce_76,
  3, 109, :_reduce_77,
  2, 110, :_reduce_78,
  1, 87, :_reduce_79,
  3, 98, :_reduce_80,
  1, 98, :_reduce_none,
  1, 96, :_reduce_none,
  3, 96, :_reduce_83,
  1, 111, :_reduce_none,
  3, 111, :_reduce_85,
  2, 112, :_reduce_86,
  1, 112, :_reduce_none,
  1, 113, :_reduce_none,
  1, 114, :_reduce_none,
  3, 114, :_reduce_90,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 116, :_reduce_97,
  3, 116, :_reduce_98,
  3, 116, :_reduce_99,
  3, 116, :_reduce_100,
  3, 116, :_reduce_101,
  3, 116, :_reduce_102,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 117, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  3, 118, :_reduce_108,
  3, 118, :_reduce_109,
  1, 118, :_reduce_none,
  3, 120, :_reduce_111,
  3, 120, :_reduce_112,
  1, 120, :_reduce_none,
  2, 121, :_reduce_114,
  1, 121, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  3, 123, :_reduce_119,
  1, 124, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  3, 101, :_reduce_123,
  1, 101, :_reduce_none,
  1, 128, :_reduce_none,
  4, 125, :_reduce_126,
  1, 125, :_reduce_none,
  4, 129, :_reduce_128,
  4, 129, :_reduce_129,
  4, 129, :_reduce_130,
  4, 129, :_reduce_131,
  4, 129, :_reduce_132,
  4, 129, :_reduce_133,
  1, 130, :_reduce_none,
  3, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 132, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  3, 133, :_reduce_140,
  2, 133, :_reduce_141,
  2, 133, :_reduce_142,
  1, 133, :_reduce_143,
  3, 134, :_reduce_144,
  1, 135, :_reduce_none,
  1, 136, :_reduce_none,
  2, 137, :_reduce_147,
  1, 137, :_reduce_148,
  1, 122, :_reduce_149,
  1, 122, :_reduce_150,
  1, 78, :_reduce_151,
  3, 119, :_reduce_152,
  2, 119, :_reduce_153,
  1, 119, :_reduce_none,
  1, 138, :_reduce_none,
  2, 139, :_reduce_156 ]

racc_reduce_n = 157

racc_shift_n = 258

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :ORDER => 3,
  :BY => 4,
  :comma => 5,
  :unsigned_integer => 6,
  :ASC => 7,
  :DESC => 8,
  :NULLS => 9,
  :FIRST => 10,
  :LAST => 11,
  :left_paren => 12,
  :right_paren => 13,
  :asterisk => 14,
  :FROM => 15,
  :AS => 16,
  :identifier => 17,
  :period => 18,
  :CROSS => 19,
  :JOIN => 20,
  :INNER => 21,
  :LEFT => 22,
  :OUTER => 23,
  :RIGHT => 24,
  :FULL => 25,
  :ON => 26,
  :USING => 27,
  :SCOPE => 28,
  :WHERE => 29,
  :GROUP => 30,
  :HAVING => 31,
  :LIMIT => 32,
  :NOT => 33,
  :BETWEEN => 34,
  :AND => 35,
  :IN => 36,
  :LIKE => 37,
  :IS => 38,
  :NULL => 39,
  :EXISTS => 40,
  :OR => 41,
  :equals_operator => 42,
  :not_equals_operator => 43,
  :less_than_operator => 44,
  :greater_than_operator => 45,
  :less_than_or_equals_operator => 46,
  :greater_than_or_equals_operator => 47,
  :plus_sign => 48,
  :minus_sign => 49,
  :solidus => 50,
  :COUNT => 51,
  :AVG => 52,
  :MAX => 53,
  :MIN => 54,
  :SUM => 55,
  :func_args_list => 56,
  :E => 57,
  :quote => 58,
  :character_string_literal => 59,
  :DATE => 60,
  :date_string => 61 }

racc_nt_base = 62

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "NULLS",
  "FIRST",
  "LAST",
  "left_paren",
  "right_paren",
  "asterisk",
  "FROM",
  "AS",
  "identifier",
  "period",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "SCOPE",
  "WHERE",
  "GROUP",
  "HAVING",
  "LIMIT",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "func_args_list",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "query_specification",
  "select_list",
  "table_expression",
  "from_clause",
  "using_scope_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "nulls_ordering_specification",
  "column_name",
  "subquery",
  "query_expression",
  "column_list",
  "in_column_list",
  "value_expression",
  "select_sublist",
  "derived_column",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "func_name",
  "func_arg_list",
  "func_arg_expr",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 6)
  def _reduce_1(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 7)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3], val[4], val[5], val[6]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 15)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::OrderColumn.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Descending.new 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::NullsFirst.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::NullsLast.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_24(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_39(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_42(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::UsingScope.new(val[2]) 
    result
  end
.,.,

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_58(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_72(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_80(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 190)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_90(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.racc', 209)
  def _reduce_97(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 210)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 211)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 212)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 213)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 214)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_108(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 234)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_114(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_119(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_123(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 266)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 292)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 295)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 145 omitted

# reduce 146 omitted

module_eval(<<'.,.,', 'parser.racc', 304)
  def _reduce_147(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 308)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 309)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 317)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 318)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 154 omitted

# reduce 155 omitted

module_eval(<<'.,.,', 'parser.racc', 325)
  def _reduce_156(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
